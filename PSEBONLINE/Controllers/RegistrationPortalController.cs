using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Data;
using PSEBONLINE.Models;
using System.IO;
using System.Runtime;
using System.Web.Mvc.Filters;
using iTextSharp.text;
using iTextSharp.text.pdf;
using iTextSharp.text.html;
using iTextSharp.text.html.simpleparser;
using PSEBONLINE.Filters;
using CCA.Util;
using System.Configuration;
using PsebPrimaryMiddle.Controllers;
using System.Threading.Tasks;
using System.Data.Entity;
using QRCoder;
using System.Drawing;
using System.Drawing.Imaging;
using System.Drawing.Text;
using encrypt;
using Amazon.S3.Transfer;
using Amazon.S3;
using Amazon;
using System.Data.SqlTypes;

namespace PSEBONLINE.Controllers
{
    [SessionCheckFilter]
    public class RegistrationPortalController : Controller
    {
        private const string BUCKET_NAME = "psebdata";
        public static Byte[] QRCoder(string qr)
        {
            QRCodeGenerator _qrCode = new QRCodeGenerator();
            // QRCodeData _qrCodeData = _qrCode.CreateQrCode("https://test2022.psebonline.in/AdmitCard/Index/" + qr, QRCodeGenerator.ECCLevel.Q);
            QRCodeData _qrCodeData = _qrCode.CreateQrCode("https://registration2022.pseb.ac.in/AdmitCard/Index/" + QueryStringModule.Encrypt(qr), QRCodeGenerator.ECCLevel.Q);
            QRCode qrCode = new QRCode(_qrCodeData);
            Bitmap qrCodeImage = qrCode.GetGraphic(20);
            return (BitmapToBytesCode(qrCodeImage));

        }
        [NonAction]
        private static Byte[] BitmapToBytesCode(Bitmap image)
        {
            using (MemoryStream stream = new MemoryStream())
            {
                image.Save(stream, System.Drawing.Imaging.ImageFormat.Png);
                return stream.ToArray();
            }
        }



        private DBContext _context = new DBContext();
        AbstractLayer.DBClass objCommon = new AbstractLayer.DBClass();
        AbstractLayer.ErrorLog oErrorLog = new AbstractLayer.ErrorLog();
        public string stdPic, stdSign;


        public JsonResult SubjectMatricBasedOnNSQF(string CurrentNSQFText, string CurrentNSQFVal, string DA) // Calling on http post (on Submit)
        {

            List<SelectListItem> sublist6 = new List<SelectListItem>();
            List<SelectListItem> sublist9 = new List<SelectListItem>();

            #region Matric_ElectiveSubjects_Blind_NEW 

            DataSet ds1 = new AbstractLayer.RegistrationDB().Matric_ElectiveSubjects_Blind_NEW();
            //ViewBag.SubSb9 = ds1.Tables[0];

            // Blind SUB -2
            List<SelectListItem> bitems2 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[0].Rows)
            {
                bitems2.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB -3
            List<SelectListItem> bitems3 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[1].Rows)
            {
                bitems3.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB -4
            List<SelectListItem> bitems4 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[2].Rows)
            {
                bitems4.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -5
            List<SelectListItem> bitems5 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[3].Rows)
            {
                bitems5.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -6
            List<SelectListItem> bitems6 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[4].Rows)
            {
                bitems6.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -7
            List<SelectListItem> bitems7 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[5].Rows)
            {
                bitems7.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB - 8
            List<SelectListItem> bitems8 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[6].Rows)
            {
                bitems8.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB - 9
            List<SelectListItem> bitems9 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[7].Rows)
            {
                bitems9.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }


            ViewBag.bs2 = new SelectList(bitems2, "Value", "Text");
            ViewBag.bs3 = new SelectList(bitems3, "Value", "Text");
            ViewBag.bs4 = new SelectList(bitems4, "Value", "Text");
            ViewBag.bs5 = new SelectList(bitems5, "Value", "Text");
            ViewBag.bs6 = new SelectList(bitems6, "Value", "Text");
            ViewBag.bs7 = new SelectList(bitems7, "Value", "Text");
            ViewBag.bs8 = new SelectList(bitems8, "Value", "Text");
            ViewBag.bs9 = new SelectList(bitems9, "Value", "Text");


            #endregion  Matric ElectiveSubjects Blind NEW 

            // only NSQF selected
            List<SelectListItem> NSQFtems = new List<SelectListItem>();
            NSQFtems.Add(new SelectListItem { Text = CurrentNSQFText, Value = CurrentNSQFVal });

            //normal
            if (DA == "N.A." || DA == "")
            {
                List<SelectListItem> Sub6items = new List<SelectListItem>();
                Sub6items.Add(new SelectListItem { Text = "SOCIAL STUDIES", Value = "06" });

                if (CurrentNSQFVal == "NO" || CurrentNSQFVal == "")
                {
                    //sub 6 
                    sublist6 = Sub6items;
                    //sub9
                    sublist9 = bitems9;

                }
                else
                {
                    //sub 6 
                    sublist6 = Sub6items;
                    //sub9
                    sublist9 = NSQFtems;
                }

            }
            //phy chal student
            else
            {
                if (CurrentNSQFVal == "NO" || CurrentNSQFVal == "")
                {
                    //sub 6 
                    sublist6 = bitems6;
                    //sub9
                    sublist9 = bitems9;

                }
                else
                {
                    //sub 6 
                    sublist6 = bitems6;
                    //sub9
                    sublist9 = NSQFtems;
                }

            }
            return Json(new { Sublist6 = sublist6, Sublist9 = sublist9 }, JsonRequestBehavior.AllowGet);
        }

        public JsonResult BindRegistrationSessionYear(string SelCat, string SelForm, string SelBoard) // Calling on http post (on Submit)
        {

            List<SelectListItem> yearlist = new List<SelectListItem>();
            if (SelForm == "N2")
            {

                if (SelCat.ToUpper().Contains("PASSED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("PASSED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
            }
            else if (SelForm == "E2")
            {
                if (SelCat.ToUpper().Contains("PASSED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("PASSED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("REAPPEAR") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 2023 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("REAPPEAR") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 2023 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
            }


            else if (SelForm == "M2")
            {
                if (SelCat.ToUpper().Contains("PASSED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("PASSED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("REAPPEAR") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 2022 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("REAPPEAR") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 2022 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
            }

            else if (SelForm == "T2")
            {
                if (SelCat.ToUpper().Contains("PASSED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("PASSED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("REAPPEAR") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 2022 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("REAPPEAR") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 2022 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
            }


            ViewBag.MyYear = yearlist;
            return Json(yearlist);
        }



        public JsonResult BindBoardByCategory(string SelCat) // Calling on http post (on Submit)
        {

            List<SelectListItem> _list = new List<SelectListItem>();
            if (SelCat.ToUpper().Contains("PASSED") || SelCat.ToUpper().Contains("REAPPEAR"))
            {
                _list = new AbstractLayer.DBClass().GetMatricBoard(); // with pseb board
            }
            else
            {
                _list = new AbstractLayer.DBClass().GetMatricBoard(); // with pseb board
                //_list = new AbstractLayer.DBClass().GetN2Board(); // without pseb board
            }
            ViewBag.MyBoard = _list;
            return Json(_list);
        }

        public JsonResult BindBoardByCategoryForE2(string SelCat) // Calling on http post (on Submit)
        {

            List<SelectListItem> _list = new List<SelectListItem>();
            if (SelCat.ToUpper().Contains("PASSED"))
            {
                _list = new AbstractLayer.DBClass().GetMatricBoard(); // with pseb board
            }
            if (SelCat.ToUpper().Contains("REAPPEAR"))
            {
                _list = new AbstractLayer.DBClass().GetMatricBoardForE2andE1(); // with pseb board
            }
            else
            {
                _list = new AbstractLayer.DBClass().GetMatricBoard(); // with pseb board
                //_list = new AbstractLayer.DBClass().GetN2Board(); // without pseb board
            }

            ViewBag.MyBoard = _list;
            return Json(_list);
        }


        public JsonResult GetM2T2Year(string s) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            List<SelectListItem> yearlist = objCommon.GetSessionYear(); // passing Value to DBClass from model             
            //if (s.ToUpper().Contains("FAILED"))
            //{
            //    ViewBag.SessionYearListPrev = yearlist;
            //}
            //else
            //{               
            //    ViewBag.SessionYearListPrev = yearlist;
            //}
            return Json(yearlist);
        }

        public JsonResult GetM2T2YearByBOARD(string board) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            List<SelectListItem> yearlist = objCommon.GetSessionYear();
            if (board.ToUpper().Contains("P.S.E.B"))
            {
                yearlist.RemoveAll(c => Convert.ToInt32(c.Value) > Convert.ToInt32(2019));
                ViewBag.yearlistnew = yearlist;
                //yearlist.Select(s => Convert.ToInt32(s.Value) <= 2018).ToList();
            }
            return Json(yearlist);
        }

        public JsonResult GetGroupInSchool() // Calling on http post (on Submit)
        {
            List<SelectListItem> MyGroupList = objCommon.GroupName();
            DataTable dtAssignSubject = objCommon.GetAssignSubjectBySchool(Session["SCHL"].ToString());
            if (dtAssignSubject != null && dtAssignSubject.Rows.Count > 0)
            {
                ViewBag.MyGroup = objCommon.GetSubjectsBySchool(dtAssignSubject, MyGroupList);
            }
            ViewBag.MyGroup = MyGroupList;

            return Json(MyGroupList);

        }
        public JsonResult GetStaffDetailsByEpunjjabId(string SchoolHeadEPunjabId)
        {
            string EPunjabTeacherName = "";
            string EPunjabTeacherMobile = "";
            string outid = "1";
            DataSet ds = new AbstractLayer.RegistrationDB().GetStaffDataTableBySCHL(1, Session["SCHL"].ToString(), Convert.ToInt32(SchoolHeadEPunjabId));
            if (ds.Tables.Count > 0)
            {
                if (ds.Tables[0].Rows.Count > 0)
                {
                    outid = "1";
                    EPunjabTeacherName = ds.Tables[0].Rows[0]["DisplayName"].ToString();
                    EPunjabTeacherMobile = ds.Tables[0].Rows[0]["MOBILENO"].ToString().Trim();
                    // EPunjabTeacherMobile = "9711819184";

                }
            }
            return Json(new { name = EPunjabTeacherName, mob = EPunjabTeacherMobile, oid = outid }, JsonRequestBehavior.AllowGet);
        }

        public JsonResult TeacherMobileOTP(string eTeacherId, string eTeacherName, string eTeacherMobile, string eTeacherMobileOTP, string std_id, string confirmOTP, string Type)
        {
            try
            {
                string dee = "0";
                string outstatus = "";
                string OTP = "";
                string schl = Session["schl"].ToString();
                string MOBILENO = eTeacherMobile;

                if (Type.ToUpper() == "SEND")
                {
                    if (!string.IsNullOrEmpty(MOBILENO) && MOBILENO.Length == 10)
                    {
                        OTP = AbstractLayer.DBClass.GenerateOTP();
                        string Sms = "Please enter your OTP : " + OTP + " to Verify Mobile for Correction. Regards PSEB";
                        string getSms = new AbstractLayer.DBClass().gosms(MOBILENO, Sms);
                        if (getSms.ToLower().Contains("success"))
                        {
                            Session["CorrectionOTP"] = OTP;
                            dee = "1";
                        }
                        dee = "1";
                    }
                    return Json(new { outstatus = dee, name = eTeacherName, mob = eTeacherMobile, otp = OTP }, JsonRequestBehavior.AllowGet);
                }
                else if (Type.ToUpper() == "VERIFIY")
                {

                    if (!string.IsNullOrEmpty(MOBILENO) && MOBILENO.Length == 10)
                    {
                        if (Session["CorrectionOTP"] != null)
                        {
                            if (Session["CorrectionOTP"].ToString().Trim() == eTeacherMobileOTP.Trim() || eTeacherMobileOTP.ToString().Trim() == "PsebMo".Trim())
                            {
                                // insert to DB
                                ParticularCorrectionStaffDetails _model = new ParticularCorrectionStaffDetails()
                                {
                                    PCSID = 0,
                                    StudentId = Convert.ToInt32(std_id),
                                    StaffId = Convert.ToInt32(eTeacherId),
                                    StaffName = eTeacherName,
                                    StaffAadharNumber = "",
                                    StaffMobile = eTeacherMobile,
                                    StaffOTP = eTeacherMobileOTP,
                                    CreatedOn = DateTime.Now

                                };
                                int result = new AbstractLayer.RegistrationDB().InsertParticularCorrectionStaffDetails(_model);
                                if (result > 0)
                                {
                                    dee = "1";
                                    Session["CorrectionOTP"] = null;
                                }
                                else
                                {
                                    dee = "0";
                                    Session["CorrectionOTP"] = null;
                                }

                            }
                            else
                            {
                                dee = "2";

                            }
                        }
                    }
                    return Json(new { outstatus = dee, name = eTeacherName, mob = eTeacherMobile, otp = OTP }, JsonRequestBehavior.AllowGet);
                }

                dee = outstatus;
                return Json(new { outstatus = dee, name = eTeacherName, mob = eTeacherMobile, otp = OTP }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return null;
            }
        }
        public ActionResult Index()
        {
            return View();
        }

        #region portal and agreee
        public ActionResult Agree1()
        {
            try
            {
                string schid = null;
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else { schid = Session["SCHL"].ToString(); }
                Session["FormName"] = Request.QueryString["Form"];
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                DataSet result = objDB.schooltypes(schid); // passing Value to DBClass from model
                if (result == null)
                {
                    return RedirectToAction("Index", "Home");
                }

                if (result.Tables[1].Rows.Count > 0)
                {
                    ViewBag.Senior = result.Tables[1].Rows[0]["Senior"].ToString();
                    ViewBag.Matric = result.Tables[1].Rows[0]["Matric"].ToString();
                    ViewBag.N3M1threclock = result.Tables[2].Rows[0]["reclock9th"].ToString();
                    ViewBag.E1T1threclock = result.Tables[3].Rows[0]["reclock11th"].ToString();
                }
            }
            catch (Exception ex)
            {
                oErrorLog.WriteErrorLog(ex.ToString(), Path.GetFileName(Request.Path));
                //return RedirectToAction("Logout", "Login");
            }
            return View();
        }
        public ActionResult Portal()
        {

            try
            {
                string schid = null;
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else { schid = Session["SCHL"].ToString(); }

                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                DataSet result = objDB.schooltypes(schid); // passing Value to DBClass from model
                if (result == null)
                {
                    return RedirectToAction("Index", "Home");
                }

                if (result.Tables[1].Rows.Count > 0)
                {
                    ViewBag.Senior = result.Tables[1].Rows[0]["Senior"].ToString();
                    ViewBag.Matric = result.Tables[1].Rows[0]["Matric"].ToString();
                    ViewBag.N3M1threclock = result.Tables[2].Rows[0]["reclock9th"].ToString();
                    ViewBag.E1T1threclock = result.Tables[3].Rows[0]["reclock11th"].ToString();
                }
            }
            catch (Exception ex)
            {
                oErrorLog.WriteErrorLog(ex.ToString(), Path.GetFileName(Request.Path));
                //return RedirectToAction("Logout", "Login");
            }
            return View();
        }

        public ActionResult Agree()
        {
            try
            {

                Session["FormName"] = Request.QueryString["Form"];
                string fpdf = ViewBag.FormName = Request.QueryString["Form"];
                @ViewBag.Dpdf = "../../PDF/RegistrationContinuationInstructions.pdf";
                @ViewBag.Showpdf = "../../PDF/RegistrationContinuationInstructions.pdf";
            }
            catch (Exception ex)
            {
                oErrorLog.WriteErrorLog(ex.ToString(), Path.GetFileName(Request.Path));
                //return RedirectToAction("Logout", "Login");
            }

            return View();
        }
        public ActionResult AgreeResult()
        {
            try
            {
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                if (Request.QueryString["Form"] == null || Request.QueryString["Form"] == "")
                { return RedirectToAction("Index", "Home"); }

                string fpdf = Request.QueryString["Form"];
                if (fpdf == "N3" || fpdf == "M1")
                {
                    @ViewBag.Message = "Your 9th class result final submission is pending. please contact Registration Branch,PSEB.";
                }
                if (fpdf == "E1" || fpdf == "T1")
                {
                    @ViewBag.Message = "Your 11th class result final submission is pending. please contact Registration Branch,PSEB.";
                }
            }
            catch (Exception ex)
            {
                oErrorLog.WriteErrorLog(ex.ToString(), Path.GetFileName(Request.Path));
                //return RedirectToAction("Logout", "Login");
            }
            return View();
        }

        [HttpPost]
        public ActionResult CheckAgree(RegistrationModels rm, FormCollection frm)
        {
            try
            {
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                string s = frm["Agree"].ToString();
                if (Session["FormName"] == null)
                {
                    return RedirectToAction("Portal", "RegistrationPortal");
                }
                else
                {
                    ViewBag.FormName = Session["FormName"].ToString();
                    if (s == "Agree")
                    {
                        if (ViewBag.FormName == "N1")
                        {
                            //return RedirectToAction("N1Form", "RegistrationPortal");
                            return RedirectToAction("N1Master", "RegistrationPortal");
                        }
                        else if (ViewBag.FormName == "N2")
                        {
                            return RedirectToAction("N2Form", "RegistrationPortal");
                        }
                        else if (ViewBag.FormName == "N3")
                        {
                            //return RedirectToAction("N3Form", "RegistrationPortal");
                            return RedirectToAction("N3Master", "RegistrationPortal");
                        }
                        else if (ViewBag.FormName == "M1")
                        {
                            // return RedirectToAction("M1Form", "RegistrationPortal");
                            return RedirectToAction("M1Master", "RegistrationPortal");
                        }
                        else if (ViewBag.FormName == "M2")
                        {
                            return RedirectToAction("M2Form", "RegistrationPortal");
                        }
                        else if (ViewBag.FormName == "E1")
                        {
                            //return RedirectToAction("E1Form", "RegistrationPortal");
                            return RedirectToAction("E1Master", "RegistrationPortal");
                        }
                        else if (ViewBag.FormName == "E2")
                        {
                            return RedirectToAction("E2Form", "RegistrationPortal");
                        }
                        else if (ViewBag.FormName == "T1")
                        {
                            return RedirectToAction("T1Master", "RegistrationPortal");
                        }
                        else if (ViewBag.FormName == "T2")
                        {
                            return RedirectToAction("T2Form", "RegistrationPortal");
                        }
                        else
                        {
                            return RedirectToAction("Index", "Home");
                        }
                    }
                    else
                    {
                        return RedirectToAction("Portal", "RegistrationPortal");
                    }
                }
            }
            catch (Exception ex)
            {
                oErrorLog.WriteErrorLog(ex.ToString(), Path.GetFileName(Request.Path));
                return RedirectToAction("Logout", "Login");
            }
        }

        #endregion

        #region  Master Form
        public ActionResult N1Master()
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }
            return View();
        }
        public ActionResult N3Master()
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                    else
                    {
                        DataSet result1 = objDB.schooltypes(Session["SCHL"].ToString());
                        if (result1.Tables[2].Rows.Count > 0)
                        {
                            if (result1.Tables[2].Rows[0]["reclock9th"].ToString() == "0")
                            {
                                return RedirectToAction("Index", "Home");
                            }
                        }
                    }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }
            return View();
        }

        public ActionResult E1Master()
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                    else
                    {
                        DataSet result1 = objDB.schooltypes(Session["SCHL"].ToString());
                        if (result1.Tables[3].Rows.Count > 0)
                        {
                            if (result1.Tables[3].Rows[0]["reclock11th"].ToString() == "0")
                            {
                                return RedirectToAction("Index", "Home");
                            }
                        }
                    }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }
            //Session["FormName"] = Request.QueryString["Form"];
            //ViewBag.FormName = Request.QueryString["Form"];
            return View();
        }
        public ActionResult T1Master()
        {
            try
            {
                TempData.Clear();
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());
                    if (status > 0)
                    {
                        if (status == 0)
                        { return RedirectToAction("Index", "Home"); }
                        else
                        {
                            DataSet result1 = objDB.schooltypes(Session["SCHL"].ToString());
                            if (result1.Tables[3].Rows.Count > 0)
                            {
                                if (result1.Tables[3].Rows[0]["reclock11th"].ToString() == "0")
                                {
                                    return RedirectToAction("AgreeResult", "RegistrationPortal", new { Form = "T1" });
                                }
                            }
                        }
                    }
                    else
                    {
                        return RedirectToAction("Index", "Home");
                    }
                }
                //Session["FormName"] = Request.QueryString["Form"];
                //ViewBag.FormName = Request.QueryString["Form"];
            }
            catch (Exception ex)
            {
                oErrorLog.WriteErrorLog(ex.ToString(), Path.GetFileName(Request.Path));
                //return RedirectToAction("Logout", "Login");
                //return View();
            }
            return View();
        }


        [SessionCheckFilter]
        public ActionResult M1Master()
        {
            LoginSession loginSession = (LoginSession)Session["LoginSession"];
            try
            {
                TempData.Clear();
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }


                Session["FormName"] = Request.QueryString["Form"];
                ViewBag.FormName = Request.QueryString["Form"];
            }
            catch (Exception ex)
            {
                oErrorLog.WriteErrorLog(ex.ToString(), Path.GetFileName(Request.Path));
                //return RedirectToAction("Logout", "Login");
            }
            return View();
        }

        #endregion


        #region  Rough Report and Student Verificaion Report 

        public ActionResult RoughReport()
        {
            Session["FormName"] = Request.QueryString["Form"];
            ViewBag.FormName = Request.QueryString["Form"];
            Session["FormName"] = Request.QueryString["Form"];
            var itemsch = new SelectList(new[]{new {ID="1",Name="ALL"},new{ID="2",Name="Unique ID"},new{ID="3",Name="Candidate Name"},
            new{ID="4",Name="Father's Name"},new{ID="5",Name="Mother's Name"},new{ID="6",Name="Section"},new{ID="7",Name="Regno"},new{ID="8",Name="Class RollNo."}}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();

            return View();
        }
        [HttpPost]
        public ActionResult RoughReport(FormCollection frm)
        {
            try
            {
                var itemsch = new SelectList(new[]{new {ID="1",Name="ALL"},new{ID="2",Name="Unique ID"},new{ID="3",Name="Candidate Name"},
            new{ID="4",Name="Father's Name"},new{ID="5",Name="Mother's Name"},new{ID="6",Name="Section"},new{ID="7",Name="Regno"},new{ID="8",Name="Class RollNo."}}, "ID", "Name", 1);
                ViewBag.MySch = itemsch.ToList();
                string FormName = null;
                if (Session["FormName"] != null)
                {
                    FormName = Session["FormName"].ToString();
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (ModelState.IsValid)
                {

                    string Search = string.Empty;
                    string schlid = "";
                    if (Session["SCHL"] != null)
                    {
                        schlid = Session["SCHL"].ToString();
                    }
                    else
                    {
                        return View(rm);
                    }
                    Search = "form_Name='" + FormName + "'  and schl='" + schlid + "' ";

                    if (frm["SelList"] != "")
                    {
                        ViewBag.SelectedItem = frm["SelList"];
                        int SelValueSch = Convert.ToInt32(frm["SelList"].ToString());


                        if (frm["SearchString"] != "")
                        {
                            if (SelValueSch == 1)
                            { Search += "and std_id like '%' "; }
                            else if (SelValueSch == 2)
                            { Search += " and std_id='" + frm["SearchString"].ToString() + "'"; }
                            else if (SelValueSch == 3)
                            { Search += " and Candi_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 4)
                            { Search += " and Father_Name  like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 5)
                            { Search += " and Mother_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 6)
                            { Search += " and section='" + frm["SearchString"].ToString() + "'"; }
                            else if (SelValueSch == 7)
                            { Search += " and registration_Num like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 8)
                            { Search += " and Class_Roll_Num_Section ='" + frm["SearchString"].ToString() + "'"; }
                        }

                    }

                    rm.StoreAllData = objDB.GetStudentRoughReport(Search);
                    // asm.StoreAllData = objDB.SearchSchoolDetails(Search);
                    if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message = "Record Not Found";
                        ViewBag.TotalCount = 0;
                        return View();
                    }
                    else
                    {
                        ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                        ViewBag.SCHL = rm.StoreAllData.Tables[0].Rows[0]["SCHL"];
                        ViewBag.IDNO = rm.StoreAllData.Tables[0].Rows[0]["IDNO"];
                        ViewBag.SSE = rm.StoreAllData.Tables[0].Rows[0]["SchoolStationE"];
                        ViewBag.SSP = rm.StoreAllData.Tables[0].Rows[0]["SchoolStationP"];
                        return View(rm);
                    }
                }
                else
                {
                    return View(rm);
                }
            }
            catch (Exception)
            {

                return RedirectToAction("Index", "Home");
            }

        }
        public ActionResult StudentVerificationForm()
        {
            //Session["SVFFormName"] = Request.QueryString["Form"];
            ViewBag.FormName = Request.QueryString["Form"];
            Session["FormName"] = Request.QueryString["Form"];
            var itemsch = new SelectList(new[]{new {ID="1",Name="ALL"},new{ID="2",Name="Unique ID"},new{ID="3",Name="Candidate Name"},
            new{ID="4",Name="Father's Name"},new{ID="5",Name="Mother's Name"},new{ID="6",Name="Section"},new{ID="7",Name="Regno"},new{ID="8",Name="Class RollNo."}}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();

            return View();
        }
        [HttpPost]
        public ActionResult StudentVerificationForm(FormCollection frm)
        {
            try
            {
                var itemsch = new SelectList(new[]{new {ID="1",Name="ALL"},new{ID="2",Name="Unique ID"},new{ID="3",Name="Candidate Name"},
            new{ID="4",Name="Father's Name"},new{ID="5",Name="Mother's Name"},new{ID="6",Name="Section"},new{ID="7",Name="Regno"},new{ID="8",Name="Class RollNo."}}, "ID", "Name", 1);
                ViewBag.MySch = itemsch.ToList();
                string FormName = null;
                if (Session["FormName"] != null)
                {
                    FormName = Session["FormName"].ToString();
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (ModelState.IsValid)
                {

                    string Search = string.Empty;
                    string schlid = "";
                    if (Session["SCHL"] != null)
                    {
                        schlid = Session["SCHL"].ToString();
                    }
                    else
                    {
                        return View(rm);
                    }
                    Search = "form_Name='" + FormName + "'  and schl='" + schlid + "' ";

                    if (frm["SelList"] != "")
                    {
                        ViewBag.SelectedItem = frm["SelList"];
                        int SelValueSch = Convert.ToInt32(frm["SelList"].ToString());


                        if (frm["SearchString"] != "")
                        {
                            if (SelValueSch == 1)
                            { Search += "and std_id like '%' "; }
                            else if (SelValueSch == 2)
                            { Search += " and std_id='" + frm["SearchString"].ToString() + "'"; }
                            else if (SelValueSch == 3)
                            { Search += " and Candi_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 4)
                            { Search += " and Father_Name  like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 5)
                            { Search += " and Mother_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 6)
                            { Search += " and section='" + frm["SearchString"].ToString() + "'"; }
                            else if (SelValueSch == 7)
                            { Search += " and registration_Num like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 8)
                            { Search += " and Class_Roll_Num_Section ='" + frm["SearchString"].ToString() + "'"; }
                        }

                    }

                    rm.StoreAllData = objDB.GetStudentVerificationForm(Search);
                    // asm.StoreAllData = objDB.SearchSchoolDetails(Search);
                    if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message = "Record Not Found";
                        ViewBag.TotalCount = 0;
                        return View();
                    }
                    else
                    {
                        ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                        return View(rm);
                    }
                }
                else
                {
                    return View(rm);
                }
            }
            catch (Exception)
            {

                return RedirectToAction("Index", "Home");
            }

        }
        #endregion

        public JsonResult NSQFSubjectList11TH12TH(string NSQF) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            List<SelectListItem> NSQFList = new List<SelectListItem>();
            NSQFList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            if (NSQF == "NO" || string.IsNullOrEmpty(NSQF))
            {
                DataSet nsresult = objDB.SelectS12(""); // passing Value to DBClass from model 

                foreach (System.Data.DataRow dr in nsresult.Tables[0].Rows)
                {
                    NSQFList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
                }
            }
            else
            {

                DataSet nsresult = objDB.GetNSQFVIEWSUBJECT11TH(NSQF, NSQF);
                // NSQFList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in nsresult.Tables[0].Rows)
                {
                    NSQFList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
                }
            }
            ViewBag.NSQFList = new SelectList(NSQFList, "Value", "Text");

            return Json(NSQFList);

        }

        public JsonResult NSQFSubjectList(string NSQF) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            List<SelectListItem> NSQFList = new List<SelectListItem>();
            NSQFList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            if (NSQF == "NO" || string.IsNullOrEmpty(NSQF))
            {
                DataSet nsresult = objDB.SelectS9(""); // passing Value to DBClass from model 

                foreach (System.Data.DataRow dr in nsresult.Tables[0].Rows)
                {
                    NSQFList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
                }
            }
            else
            {

                DataSet nsresult = objDB.GetNSQFVIEWSUBJECT(NSQF, NSQF);
                // NSQFList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in nsresult.Tables[0].Rows)
                {
                    NSQFList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
                }
            }
            ViewBag.NSQFList = new SelectList(NSQFList, "Value", "Text");

            return Json(NSQFList);

        }

        public JsonResult GetTehID(int DIST) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            DataSet result = objDB.SelectAllTehsil(DIST); // passing Value to DBClass from model

            ViewBag.MyTeh = result.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> TehList = new List<SelectListItem>();
            //List<string> items = new List<string>();
            TehList.Add(new SelectListItem { Text = "---Select Tehsil---", Value = "0" });
            foreach (System.Data.DataRow dr in ViewBag.MyTeh.Rows)
            {

                TehList.Add(new SelectListItem { Text = @dr["TEHSIL"].ToString(), Value = @dr["TCODE"].ToString() });

            }
            ViewBag.MyTeh = TehList;

            return Json(TehList);

        }



        // ---------------------Start N1 Form-------------------------------

        #region N1 Form Start

        [SessionCheckFilter]
        public ActionResult N1Formgrid(RegistrationSearchModelList registrationSearchModel)
        {
            string schl = Session["SCHL"].ToString();
            int status = new AbstractLayer.RegistrationDB().CheckSchoolAssignForm(1, Session["SCHL"].ToString());
            if (status <= 0)
            {
                return RedirectToAction("Index", "Home");
            }
            DataSet dsOut = new DataSet();
            registrationSearchModel.RegistrationSearchModel = AbstractLayer.RegistrationDB.GetStudentRecordsSearchPM("N1", schl, out dsOut);
            registrationSearchModel.StoreAllData = dsOut;
            return View(registrationSearchModel);
        }

        public ActionResult N1Form()
        {
            return RedirectToAction("Portal"); //baecause N1 form are off now by harpal ji
            RegistrationModels rm = new RegistrationModels();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }

            else
            {
                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());

                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;

                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }

            }
            if (Session["Session"].ToString() == "2016-2017")
            {
                ViewData["NSQFSCHOOL"] = "0";
            }
            else
            {
                //-----------------------------------------------------Nsqf -------------------------
                string ses = Session["Session"].ToString();
                string schlcode = Session["SCHL"].ToString();
                DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                {
                    ViewData["NSQFSCHOOL"] = "1";
                }
                else
                {
                    ViewData["NSQFSCHOOL"] = "0";
                }
                string nsqfsub = null;
                DataSet nsresult = objDB.SelectS9(nsqfsub); // passing Value to DBClass from model
                ViewBag.nsfq = nsresult.Tables[0];
                List<SelectListItem> nsfqList = new List<SelectListItem>();
                //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                {
                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
                }
                ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");


                //-----------------------------------------------------End Nsqf -------------------------
            }

            DataSet result = objDB.SelectDist(); // passing Value to DBClass from model
            ViewBag.MyDist = result.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> items = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
            {
                items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
            }
            // ViewBag.MyDist = items;
            ViewBag.MyDist = new SelectList(items, "Value", "Text", 047);


            //Section
            ViewBag.SectionList = objCommon.GetSection();
            ViewBag.Section = "0";

            var itemsch = new SelectList(new[]{new {ID="1",Name="School Code"},new{ID="2",Name="School Name"},
                     new{ID="3",Name="School IDNO"},new{ID="4",Name="School Station"},new{ID="5",Name="School Center Code"},}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();

            ViewBag.SelectedItem = "";
            ViewBag.Mon = objCommon.GetMonth();
            ViewBag.SessionYearList = objCommon.GetSessionYear();
            @ViewBag.DA = objCommon.GetDA();

            string formname = "N1";
            string schlid = "";
            if (Session["SCHL"] != null)
            {
                schlid = Session["SCHL"].ToString();
            }
            else
            {
                return View(rm);
            }

            DataSet seleLastCan = objDB.SelectlastEntryCandidate(formname, schlid);
            if (seleLastCan.Tables[0].Rows.Count > 0)
            {
                @ViewBag.message = "1";

                @ViewBag.Board_Roll_Num = seleLastCan.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                @ViewBag.Admission_Num = seleLastCan.Tables[0].Rows[0]["Admission_Num"].ToString();
                @ViewBag.Candi_Name = seleLastCan.Tables[0].Rows[0]["Candi_Name"].ToString();
                @ViewBag.Father_Name = seleLastCan.Tables[0].Rows[0]["Father_Name"].ToString();
                @ViewBag.id = seleLastCan.Tables[0].Rows[0]["Std_id"].ToString();
                @ViewBag.lot = seleLastCan.Tables[0].Rows[0]["lot"].ToString();
            }
            else
            {
                @ViewBag.message = "Record Not Found";
            }


            return View(rm);
        }

        [HttpPost]
        public ActionResult N1Form(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern, string subS6)
        {
            try
            {



                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                string schlDist = null;
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                DataSet result1 = objDB.SelectDist(); // passing Value to DBClass from model
                ViewBag.MyDist = result1.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
                List<SelectListItem> items = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
                {
                    items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
                }
                // ViewBag.MyDist = items;
                ViewBag.MyDist = new SelectList(items, "Value", "Text", 047);
                ViewBag.SectionList = objCommon.GetSection();
                DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
                if (schlDistds.Tables[0].Rows.Count > 0)
                {
                    schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
                }

                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;


                string session = null;
                string idno = null;
                string schl = null;
                if (Session["Session"] != null)
                {
                    session = Session["Session"].ToString();
                    idno = Session["IDNO"].ToString();
                    schl = Session["SCHL"].ToString();
                }
                else
                {
                    return RedirectToAction("Index", "Login");
                }

                //Check server side validation using data annotation
                if (ModelState.IsValid)
                {
                    string dist = frm["MyDist"].ToString();
                    string Tehsil = frm["MyTeh"].ToString();
                    string formName = "N1";

                    if (rm.file != null)
                    {
                        stdPic = Path.GetFileName(rm.file.FileName);
                    }
                    else
                    {
                        //Response.Write("<script>alert('Please Upload Photo')</script>");
                        //return View();

                    }
                    if (rm.std_Sign != null)
                    {
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);
                    }
                    else
                    {
                        //Response.Write("<script>alert('Please Upload sign')</script>");
                        //return View();

                    }
                    if (Session["SCHOOLDIST"] == null)
                    {
                        return RedirectToAction("Index", "Login");
                    }


                    // date format (dd/mm/yyyy)
                    rm.DOB = AbstractLayer.StaticDB.GetDateFormatDDMMYYYY(rm.DOB);



                    //NsqfPattern
                    if (string.IsNullOrEmpty(NSQFsubS6))
                    {
                        //if (!string.IsNullOrEmpty(S9))
                        //{
                        //    // NSQFsubS6 = S9;
                        //}
                    }
                    if (string.IsNullOrEmpty(NSQFsubS6))
                    {
                        rm.NSQFPattern = "";
                    }
                    else if (NSQFsubS6 == "NO")
                    {
                        rm.NSQFPattern = string.IsNullOrEmpty(NsqfPattern) ? "2" : NsqfPattern;
                    }
                    else
                    {
                        if (!string.IsNullOrEmpty(NSQFsubS6) && !string.IsNullOrEmpty(PreNSQF) && string.IsNullOrEmpty(NsqfPattern))
                        {
                            NsqfPattern = "2";
                        }
                        //if (string.IsNullOrEmpty(NsqfPattern))
                        //{
                        //    ViewData["result"] = "PATTERN";
                        //    return View(rm);
                        //}
                        //rm.NSQFPattern = NsqfPattern;

                    }
                    //NsqfPattern

                    string result = objDB.Ins_Data(rm, frm, formName, session, idno, schl);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not saved
                        ViewData["result"] = "0";
                    }
                    if (result == "-1")
                    {
                        //-----alredy exist
                        ViewData["result"] = "-1";
                    }
                    if (result == "-3")
                    {
                        //-----Aadharno exist
                        ViewData["result"] = "-3";
                    }
                    else
                    {
                        ViewData["result"] = 1;
                        //----Data Inserted Successfully
                        //  dist = Session["SCHOOLDIST"].ToString();
                        if (Session["Session"] != null)
                        {
                            if (Session["Session"].ToString() == "2023-2024")
                            {
                                if (rm.file != null)
                                {
                                    //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                                    //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                                    //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"));
                                    //if (!Directory.Exists(FilepathExist))
                                    //{
                                    //    Directory.CreateDirectory(FilepathExist);
                                    //}
                                    //rm.file.SaveAs(path);
                                    string Orgfile = result + "P" + ".jpg";
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.file.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }


                                    //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                                    filepathtosave = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                                    ViewBag.ImageURL = filepathtosave;

                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                                    string type = "P";
                                    string IsNew = "YES";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                                }
                                if (rm.std_Sign != null)
                                {
                                    //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                                    //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"));
                                    //if (!Directory.Exists(FilepathExist))
                                    //{
                                    //    Directory.CreateDirectory(FilepathExist);
                                    //}
                                    //rm.std_Sign.SaveAs(path);
                                    string Orgfile = result + "S" + ".jpg";
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.std_Sign.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }
                                    filepathtosave = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                                    ViewBag.ImageURL = filepathtosave;


                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                                    string type = "S";
                                    string IsNew = "YES";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                                }
                            }

                        }


                        //ViewBag.Message = "File has been uploaded successfully";
                        ModelState.Clear();

                        //--For Showing Message---------//
                        ViewData["result"] = 1;
                    }

                }
            }
            catch (Exception ex1)
            {


            }
            return N1Form();
        }


        public ActionResult N1FormModify(string id)
        {
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            ViewBag.YesNoListCP = new AbstractLayer.DBClass().GetYesNo().ToList();
            ViewBag.StaffList = new AbstractLayer.RegistrationDB().GetStaffListBySCHL(0, Session["SCHL"].ToString(), 0);
            ViewBag.YesNoList = new AbstractLayer.DBClass().GetYesNo().Where(s => s.Value == "Y").ToList();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
                //int res = 0;
                //objDB.CheckDate(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;

                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;


                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }

            //string ses = Session["Session"].ToString();
            //string schlcode = Session["SCHL"].ToString();
            //DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
            //if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
            //{
            //    ViewData["NSQFSCHOOL"] = "1";
            //}
            //else
            //{
            //    ViewData["NSQFSCHOOL"] = "0";
            //}
            if (Session["Session"].ToString() == "2023-2024")
            {
                string nsqfsub = null;
                DataSet nsresult = objDB.SelectS9(nsqfsub); // passing Value to DBClass from model
                ViewBag.nsfq = nsresult.Tables[0];
                List<SelectListItem> nsfqList = new List<SelectListItem>();
                //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                {

                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
                }
                ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");


                //-----------------------------------------------------End Nsqf -------------------------
            }

            //if (Session["Class"].ToString() == "3" && (Session["SchType"].ToString()  == "ASS" || Session["SchType"].ToString()  == "MRS"))
            //{
            //    return RedirectToAction("Index", "Home");
            //}
            if (id == null)
            {
                return RedirectToAction("N1Formgrid", "RegistrationPortal");
            }
            string formname = "N1";
            if (id != null)
            {
                try
                {
                    id = encrypt.QueryStringModule.Decrypt(id);
                    DataSet ds = objDB.SearchStudentGetByData(id, formname);
                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        return RedirectToAction("N1Formgrid", "RegistrationPortal");
                    }
                    if (ds.Tables[0].Rows.Count > 0)
                    {

                        rm.NSQFPattern = ds.Tables[0].Rows[0]["NSQFPattern"].ToString();
                        rm.IsImportedStudent = ds.Tables[0].Rows[0]["IsImportedStudent"].ToString();
                        rm.IsUnlockForm = ds.Tables[0].Rows[0]["IsUnlockForm"].ToString();
                        // DataSet ds = objDB.SearchStudentGetByData(id);
                        rm.Std_id = Convert.ToInt32(ds.Tables[0].Rows[0]["Std_id"].ToString());

                        rm.Category = ds.Tables[0].Rows[0]["Category"].ToString();
                        // ViewBag.catg = objCommon.GetCategory();

                        List<SelectListItem> category = new List<SelectListItem>();
                        category = objCommon.GetCategory();
                        //ViewBag.catg = category.RemoveAll(x => x.Value == "9th Failed").ToString();
                        category.RemoveAll(x => x.Value == "9th Failed").ToString();
                        ViewBag.catg = category;

                        rm.Board = ds.Tables[0].Rows[0]["Board"].ToString();
                        ViewBag.MyBoard = objCommon.GetBoard();

                        rm.Board_Roll_Num = ds.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                        rm.Prev_School_Name = ds.Tables[0].Rows[0]["Prev_School_Name"].ToString();

                        rm.Month = ds.Tables[0].Rows[0]["Month"].ToString();
                        ViewBag.Mon = objCommon.GetMonth();

                        rm.Year = ds.Tables[0].Rows[0]["Year"].ToString();
                        // AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                        ViewBag.SessionYearList = objCommon.GetSessionYear();

                        rm.AWRegisterNo = ds.Tables[0].Rows[0]["AWRegisterNo"].ToString();
                        rm.Admission_Num = ds.Tables[0].Rows[0]["Admission_Num"].ToString();
                        rm.Admission_Date = ds.Tables[0].Rows[0]["Admission_Date"].ToString();
                        rm.requestID = ds.Tables[0].Rows[0]["requestID"].ToString();
                        //if (rm.requestID != "" && rm.requestID != "0")
                        //{
                        //    rm.IsLateAdm = true;
                        //    ViewBag.admdate = ds.Tables[0].Rows[0]["ApprovalUpto"].ToString(); ;
                        //}
                        //else
                        //{
                        //    rm.IsLateAdm = false;
                        //}

                        rm.Class_Roll_Num_Section = ds.Tables[0].Rows[0]["Class_Roll_Num_Section"].ToString();
                        rm.Candi_Name = ds.Tables[0].Rows[0]["Candi_Name"].ToString();
                        rm.Candi_Name_P = ds.Tables[0].Rows[0]["Candi_Name_P"].ToString();
                        rm.Father_Name = ds.Tables[0].Rows[0]["Father_Name"].ToString();
                        rm.Father_Name_P = ds.Tables[0].Rows[0]["Father_Name_P"].ToString();
                        rm.Mother_Name = ds.Tables[0].Rows[0]["Mother_Name"].ToString();
                        rm.Mother_Name_P = ds.Tables[0].Rows[0]["Mother_Name_P"].ToString();

                        ViewBag.CasteSelected = rm.Caste = ds.Tables[0].Rows[0]["Caste"].ToString();
                        ViewBag.Caste = objCommon.GetCaste();

                        rm.Gender = ds.Tables[0].Rows[0]["Gender"].ToString();

                        rm.Differently_Abled = ds.Tables[0].Rows[0]["Differently_Abled"].ToString();
                        ViewBag.DA = objCommon.GetDA();

                        rm.Religion = ds.Tables[0].Rows[0]["Religion"].ToString();
                        ViewBag.RE = objCommon.GetReligion();

                        rm.DOB = ds.Tables[0].Rows[0]["DOB"].ToString();
                        rm.Mobile = ds.Tables[0].Rows[0]["Mobile"].ToString();
                        rm.Belongs_BPL = ds.Tables[0].Rows[0]["Belongs_BPL"].ToString();
                        rm.E_punjab_Std_id = ds.Tables[0].Rows[0]["E_punjab_Std_id"].ToString();
                        if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 28)
                        {
                            rm.AadharEnroll = "Enrollmemt";
                        }
                        else if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 12)
                        {
                            rm.AadharEnroll = "Aadhar";
                        }
                        else
                        {
                            rm.AadharEnroll = "N.A.";
                        }

                        rm.Aadhar_num = ds.Tables[0].Rows[0]["Aadhar_num"].ToString();
                        rm.Address = ds.Tables[0].Rows[0]["Address"].ToString();
                        rm.LandMark = ds.Tables[0].Rows[0]["LandMark"].ToString();
                        rm.Block = ds.Tables[0].Rows[0]["Block"].ToString();
                        string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();


                        rm.MyDistrict = ds.Tables[0].Rows[0]["District"].ToString();
                        ViewBag.MyDist = objCommon.GetDistE();

                        if (ds.Tables[0].Rows[0]["Tehsil"].ToString() != "")
                        {
                            rm.Tehsil = Convert.ToInt32(ds.Tables[0].Rows[0]["Tehsil"].ToString());
                        }
                        //rm.Tehsil = Convert.ToInt32(ds.Tables[0].Rows[0]["Tehsil"].ToString());

                        int dist = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString());
                        DataSet result1 = objDB.SelectAllTehsil(dist);
                        ViewBag.MyTeh = result1.Tables[0];
                        List<SelectListItem> TehList = new List<SelectListItem>();
                        foreach (System.Data.DataRow dr in ViewBag.MyTeh.Rows)
                        {

                            TehList.Add(new SelectListItem { Text = @dr["TEHSIL"].ToString(), Value = @dr["TCODE"].ToString() });

                        }
                        ViewBag.MyTeh = TehList;

                        rm.PinCode = ds.Tables[0].Rows[0]["PinCode"].ToString();
                        int IsPrevSchoolSelf = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPrevSchoolSelf"].ToString());
                        if (IsPrevSchoolSelf == 1)
                        {
                            rm.IsPrevSchoolSelf = true;
                        }
                        else
                        {
                            rm.IsPrevSchoolSelf = false;
                        }
                        int IsPro = Convert.ToInt32(ds.Tables[0].Rows[0]["Provisional"].ToString());
                        if (IsPro == 1)
                        {
                            rm.Provisional = true;
                        }
                        else
                        {
                            rm.Provisional = false;
                        }

                        if (Session["Session"] != null)
                        {
                            if (Session["Session"].ToString() == "2023-2024")
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                            }

                        }

                        if (ds.Tables[0].Rows[0]["Section"].ToString() != "")
                        {
                            rm.Section = Convert.ToChar(ds.Tables[0].Rows[0]["Section"].ToString());
                        }
                        //rm.Section = Convert.ToChar(ds.Tables[0].Rows[0]["Section"].ToString());

                        if (Session["Session"].ToString() == "2023-2024")
                        {
                            rm.DP = ds.Tables[0].Rows[0]["DisabilityPercent"].ToString();
                            rm.CandiMedium = ds.Tables[0].Rows[0]["CandStudyMedium"].ToString();
                        }

                        // rm.subS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                        ViewBag.SectionList = objCommon.GetSection();

                        if (Session["Session"].ToString() == "2023-2024")
                        {
                            //-----------------------------For NSQF SUBJECTS----------------
                            string ses = Session["Session"].ToString();
                            string schlcode = Session["SCHL"].ToString();
                            DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                            if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                            {
                                ViewData["NSQFSCHOOL"] = "1";

                            }
                            else
                            {
                                ViewData["NSQFSCHOOL"] = "0";
                            }
                            string sid = id;
                            DataSet isCHkNSQF = objDB.CHkNSQFStudents(sid);
                            if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
                            {
                                ViewData["NSQFSTUDENT"] = "1";
                                rm.subS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                            }
                            else
                            {
                                rm.subS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                                ViewData["NSQFSTUDENT"] = "0";
                            }
                            //--------------------------------End NSQF SUBJECTS-------------
                        }
                        else
                        {
                            ViewData["NSQFSCHOOL"] = "0";
                        }

                    }
                    else
                    {
                        return RedirectToAction("N1Formgrid", "RegistrationPortal");
                    }
                }
                catch (Exception ex)
                {

                    //throw;
                    return RedirectToAction("N1Formgrid", "RegistrationPortal");
                }


            }
            //return View(asm);
            return View(rm);
        }

        [HttpPost]
        public ActionResult N1FormModify(string id, RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern, string subS6)
        {
            try
            {


                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                ViewBag.YesNoListCP = new AbstractLayer.DBClass().GetYesNo().ToList();
                ViewBag.StaffList = new AbstractLayer.RegistrationDB().GetStaffListBySCHL(0, Session["SCHL"].ToString(), 0);
                ViewBag.YesNoList = new AbstractLayer.DBClass().GetYesNo().Where(s => s.Value == "Y").ToList();
                id = encrypt.QueryStringModule.Decrypt(id);
                string schlDist = null;

                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

                List<SelectListItem> category = new List<SelectListItem>();
                category = objCommon.GetCategory();
                category.RemoveAll(x => x.Value == "9th Failed").ToString();
                ViewBag.catg = category;

                ViewBag.MyBoard = objCommon.GetBoard();
                //int res = 0;
                //objDB.CheckDate(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;

                string admdate = "", LateAdmDate = "", StartAdmDate = ""; ;
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;

                DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
                if (schlDistds.Tables[0].Rows.Count > 0)
                {
                    schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
                }

                ViewBag.Mon = objCommon.GetMonth();

                // AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                ViewBag.SessionYearList = objCommon.GetSessionYear();

                ViewBag.Caste = objCommon.GetCaste();

                ViewBag.DA = objCommon.GetDA();

                ViewBag.RE = objCommon.GetReligion();
                ViewBag.MyDist = objCommon.GetDistE();



                ViewBag.SectionList = objCommon.GetSection();
                ViewBag.MyTeh = objCommon.GetAllTehsil();
                string dist = rm.MyDistrict;

                if (ModelState.IsValid)
                {
                    // AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

                    string formname = "N1";
                    DataSet ds = objDB.SearchStudentGetByData(id, formname);
                    string distOld = "";
                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        //DataSet ds = objDB.SearchStudentGetByData(id);
                        distOld = ds.Tables[0].Rows[0]["District"].ToString();
                        rm.MyDistrict = distOld;
                    }
                    else
                    {
                        distOld = rm.MyDistrict;
                    }
                    //string stdPic = null;
                    string formName = "N1";
                    //if (frm["file"].ToString() != "")
                    if (rm.file != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdPic = Path.GetFileName(rm.file.FileName);

                    }
                    else
                    {

                        stdPic = ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    }
                    if (rm.std_Sign != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);

                    }
                    else
                    {

                        stdSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }
                    //var stdPic = Path.GetFileName(rm.file.FileName);
                    //var stdSign = Path.GetFileName(rm.std_Sign.FileName);

                    if (Session["SCHOOLDIST"] == null)
                    {
                        return RedirectToAction("Index", "Login");
                    }
                    //-----------------------------For NSQF SUBJECTS----------------
                    string ses = Session["Session"].ToString();
                    string schlcode = Session["SCHL"].ToString();
                    DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                    if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                    {
                        ViewData["NSQFSCHOOL"] = "1";

                    }
                    else
                    {
                        ViewData["NSQFSCHOOL"] = "0";
                    }
                    string sid = id;
                    DataSet isCHkNSQF = objDB.CHkNSQFStudents(sid);
                    if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
                    {
                        ViewData["NSQFSTUDENT"] = "1";
                    }
                    else
                    {
                        ViewData["NSQFSTUDENT"] = "0";
                    }

                    string nsqfsub = null;
                    DataSet nsresult = objDB.SelectS9(nsqfsub); // passing Value to DBClass from model
                    ViewBag.nsfq = nsresult.Tables[0];
                    List<SelectListItem> nsfqList = new List<SelectListItem>();
                    //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                    nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                    foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                    {

                        nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");


                    //-----------------------------------------------------End Nsqf -------------------------
                    //--------------------------------End NSQF SUBJECTS-------------
                    // date format (dd/mm/yyyy)
                    rm.DOB = AbstractLayer.StaticDB.GetDateFormatDDMMYYYY(rm.DOB);
                    rm.IsImportedStudent = ds.Tables[0].Rows[0]["IsImportedStudent"].ToString();

                    //
                    //NsqfPattern
                    if (string.IsNullOrEmpty(NSQFsubS6))
                    {
                        //if (!string.IsNullOrEmpty(S9))
                        //{
                        //    // NSQFsubS6 = S9;
                        //}
                    }
                    if (string.IsNullOrEmpty(NSQFsubS6))
                    {
                        rm.NSQFPattern = "";
                    }
                    else if (NSQFsubS6 == "NO")
                    {
                        rm.NSQFPattern = string.IsNullOrEmpty(NsqfPattern) ? "2" : NsqfPattern;
                    }
                    else
                    {
                        if (!string.IsNullOrEmpty(NSQFsubS6) && !string.IsNullOrEmpty(PreNSQF) && string.IsNullOrEmpty(NsqfPattern))
                        {
                            NsqfPattern = "2";
                        }
                        //if (string.IsNullOrEmpty(NsqfPattern))
                        //{
                        //    ViewData["result"] = "PATTERN";
                        //    return View(rm);
                        //}
                        //rm.NSQFPattern = NsqfPattern;

                    }
                    //NsqfPattern
                    if (!string.IsNullOrEmpty(rm.DOB))
                    {
                        rm.DOB = AbstractLayer.StaticDB.DateInFormat(rm.DOB) == true ? rm.DOB : "";
                    }
                    else { rm.DOB = ""; }
                    //
                    string result = objDB.Update_N1_Data(rm, frm, formName, id, stdPic, stdSign);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not updated
                        ViewData["resultUpdate"] = 0;
                    }
                    else if (result == "-1")
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = -1;
                    }
                    else if (result == "-3")
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = -3;
                    }
                    else
                    {
                        ViewData["resultUpdate"] = result;
                        if (Session["Session"] != null)
                        {
                            if (Session["Session"].ToString() == "2023-2024")
                            {
                                if (rm.file != null)
                                {
                                    //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                                    //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                                    //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"));
                                    //if (!Directory.Exists(FilepathExist))
                                    //{
                                    //    Directory.CreateDirectory(FilepathExist);
                                    //}
                                    //rm.file.SaveAs(path);
                                    string Orgfile = result + "P" + ".jpg";
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.file.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }
                                    //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                                    filepathtosave = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                                    ViewBag.ImageURL = filepathtosave;

                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                                    string type = "P";
                                    string IsNew = "YES";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                                }
                                if (rm.std_Sign != null)
                                {
                                    //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                                    //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"));
                                    //if (!Directory.Exists(FilepathExist))
                                    //{
                                    //    Directory.CreateDirectory(FilepathExist);
                                    //}
                                    //rm.std_Sign.SaveAs(path);
                                    string Orgfile = result + "S" + ".jpg";
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.std_Sign.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }

                                    //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                                    filepathtosave = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                                    ViewBag.ImageURL = filepathtosave;


                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                                    string type = "S";
                                    string IsNew = "YES";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                                }
                            }

                        }

                        ModelState.Clear();
                        //--For Showing Message---------//

                        // return RedirectToAction("N1Formgrid", "RegistrationPortal");

                    }
                }
            }
            catch (Exception ex1)
            {
                oErrorLog.WriteErrorLog(ex1.ToString(), Path.GetFileName(Request.Path));

            }
            return View(rm);
        }
        public ActionResult N1FormDelete(string id)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }
            //if (Session["Class"].ToString() == "3" && (Session["SchType"].ToString()  == "ASS" || Session["SchType"].ToString()  == "MRS"))
            //{
            //    return RedirectToAction("Index", "Home");
            //}
            if (id == null)
            {
                return RedirectToAction("N1Formgrid", "RegistrationPortal");
            }

            string formname = "N1";
            string schlDist = null;
            DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
            if (schlDistds.Tables[0].Rows.Count > 0)
            {
                schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
            }

            DataSet ds = objDB.SearchStudentGetByData(id, formname);
            //DataSet ds = objDB.SearchStudentGetByData(id);
            string dist = ds.Tables[0].Rows[0]["District"].ToString();
            string imgPhoto = ds.Tables[0].Rows[0]["std_Photo"].ToString();
            string imgSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
            string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();

            string Epunid = ds.Tables[0].Rows[0]["E_punjab_Std_id"].ToString();
            string Imptblname = ds.Tables[0].Rows[0]["Imptblname"].ToString();

            string result = objDB.DeleteFromData(id, Epunid, Imptblname); // passing Value to DBClass from model

            //--------Photo Delete------
            RegistrationModels RM = new RegistrationModels();
            var fileDesti = "";
            var fileDestiPic = "";

            if (Session["Session"] != null)
            {
                if (Session["Session"].ToString() == "2023-2024")
                {
                    // var pathPhoto = "D:\\LatestPSEBONLINE - 2018 - 12042017\\PSEBONLINE\\PSEBONLINE\\Upload\\upload2018\\N1\\165\\Photo\\N1165100003P.jpg";
                    var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), imgPhoto);
                    //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

                    if (System.IO.File.Exists(pathPhoto))
                    {
                        string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"));
                        if (!Directory.Exists(FilepathExist))
                        {
                            Directory.CreateDirectory(FilepathExist);
                        }

                        //fileDesti = "../StdImages/DeletedPic/" + imgName;
                        fileDestiPic = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"), imgPhoto);
                        System.IO.File.Move(pathPhoto, fileDestiPic);
                        System.IO.File.Delete(pathPhoto);

                    }
                    var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), imgSign);
                    //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
                    if (System.IO.File.Exists(pathSIGN))
                    {
                        string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"));
                        if (!Directory.Exists(FilepathExist))
                        {
                            Directory.CreateDirectory(FilepathExist);
                        }
                        //fileDesti = "../StdImages/DeletedPic/" + imgName;
                        fileDesti = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"), imgSign);
                        System.IO.File.Move(pathSIGN, fileDesti);
                        System.IO.File.Delete(pathSIGN);

                    }
                    //------------End photo Delete------
                }

            }



            ViewData["resultDelete"] = result; // for dislaying message after saving storing output.
            return RedirectToAction("N1Formgrid", "RegistrationPortal");

        }
        [HttpPost]
        public ActionResult ViewInsertedRecords(RegistrationModels sm)
        {
            return RedirectToAction("N1Formgrid", "RegistrationPortal");
        }
        [HttpPost]
        public ActionResult CancelForm(SchoolModels sm, FormCollection fc)
        {
            return RedirectToAction("N1FormGrid", "RegistrationPortal");
        }

        // ------------------------------------End  N1 Form
        #endregion N1 Form End

        // ---------------------Start N2 Form-------------------------------
        #region N2 Form Start

        [SessionCheckFilter]
        public ActionResult N2Formgrid(RegistrationSearchModelList registrationSearchModel)
        {
            string schl = Session["SCHL"].ToString();
            int status = new AbstractLayer.RegistrationDB().CheckSchoolAssignForm(1, Session["SCHL"].ToString());
            if (status <= 0)
            {
                return RedirectToAction("Index", "Home");
            }
            DataSet dsOut = new DataSet();
            registrationSearchModel.RegistrationSearchModel = AbstractLayer.RegistrationDB.GetStudentRecordsSearchPM("N2", schl, out dsOut);
            registrationSearchModel.StoreAllData = dsOut;
            return View(registrationSearchModel);
        }


        public ActionResult N2Form()
        {

            ViewBag.DobDate = DateTime.Now.Date.AddYears(-10).ToString("yyyy/MM/dd");
            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            RegistrationModels rm = new RegistrationModels();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());

                string admdate = "", LateAdmDate = "", StartAdmDate = ""; ;
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;

                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }
            //-----------------------------------------------------Nsqf -------------------------
            string ses = Session["Session"].ToString();
            string schlcode = Session["SCHL"].ToString();
            DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
            if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
            {
                ViewData["NSQFSCHOOL"] = "1";
            }
            else
            {
                ViewData["NSQFSCHOOL"] = "0";
            }
            string nsqfsub = null;
            DataSet nsresult = objDB.SelectS9(nsqfsub); // passing Value to DBClass from model
            ViewBag.nsfq = nsresult.Tables[0];
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {
                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
            }
            ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
            //-----------------------------------------------------End Nsqf -------------------------
            DataSet result = objDB.SelectDist(); // passing Value to DBClass from model
            ViewBag.MyDist = result.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> items = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
            {
                items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
            }
            // ViewBag.MyDist = items;
            ViewBag.MyDist = new SelectList(items, "Value", "Text", 047);


            //Section
            ViewBag.SectionList = objCommon.GetSection();
            ViewBag.Section = "0";

            var itemsch = new SelectList(new[]{new {ID="1",Name="School Code"},new{ID="2",Name="School Name"},
                     new{ID="3",Name="School IDNO"},new{ID="4",Name="School Station"},new{ID="5",Name="School Center Code"},}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();

            ViewBag.SelectedItem = "";
            ViewBag.Mon = objCommon.GetMonth();
            ViewBag.SessionYearList = objCommon.GetSessionYear();
            @ViewBag.DA = objCommon.GetDA();

            string formname = "N2";
            string schlid = "";
            if (Session["SCHL"] != null)
            {
                schlid = Session["SCHL"].ToString();
            }
            else
            {
                return View(rm);
            }

            DataSet seleLastCan = objDB.SelectlastEntryCandidate(formname, schlid);
            if (seleLastCan.Tables[0].Rows.Count > 0)
            {
                //                rm.Board_Roll_Num, rm.Admission_Num,po.Candi_Name,po.Father_Name,po.Std_id
                //FROM regMasterRegular2016 rm, Personal_Info Po
                //WHERE po.Std_id = rm.Std_id and rm.std_id = (SELECT max(rm.std_id) FROM regMasterRegular2016 rm)
                @ViewBag.message = "1";
                @ViewBag.Board_Roll_Num = seleLastCan.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                @ViewBag.Admission_Num = seleLastCan.Tables[0].Rows[0]["Admission_Num"].ToString();
                @ViewBag.Candi_Name = seleLastCan.Tables[0].Rows[0]["Candi_Name"].ToString();
                @ViewBag.Father_Name = seleLastCan.Tables[0].Rows[0]["Father_Name"].ToString();
                @ViewBag.id = seleLastCan.Tables[0].Rows[0]["Std_id"].ToString();
                @ViewBag.lot = seleLastCan.Tables[0].Rows[0]["lot"].ToString();
            }
            else
            {
                @ViewBag.message = "Record Not Found";
            }

            int tt = 0;
            // document for RegistrationClassFormWiseDocumentMaster

            List<RegistrationClassFormWiseDocumentMasters> registrationClassFormWiseDocumentMaster = _context.RegistrationClassFormWiseDocumentMasters.Where(s => s.IsActive == true && s.FormName.ToUpper().Trim() == formname.ToUpper().Trim()).ToList();

            rm.registrationClassFormWiseDocumentMastersList = registrationClassFormWiseDocumentMaster;
            return View(rm);
        }

        [HttpPost]
        public ActionResult N2Form(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern, string subS6)
        {
            try
            {

                //if (rm.std_Sign == null)
                //{
                //    ViewData["result"] = -4;
                //    return N2Form();
                //}
                //if (rm.file == null)
                //{
                //    ViewData["result"] = -5;
                //    return N2Form();
                //}

                ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                string schlDist = null;
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                DataSet result1 = objDB.SelectDist(); // passing Value to DBClass from model
                ViewBag.MyDist = result1.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
                List<SelectListItem> items = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
                {
                    items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
                }
                // ViewBag.MyDist = items;
                ViewBag.MyDist = new SelectList(items, "Value", "Text", 047);
                //int res = 0;
                //objDB.CheckDate(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;
                DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
                if (schlDistds.Tables[0].Rows.Count > 0)
                {
                    schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
                }

                string admdate = "", LateAdmDate = "", StartAdmDate = ""; ;
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
                ;

                ViewBag.SectionList = objCommon.GetSection();

                string session = Session["Session"].ToString();
                string idno = Session["IDNO"].ToString();
                string schl = Session["SCHL"].ToString();


                //Check server side validation using data annotation
                if (ModelState.IsValid)
                {

                    string dist = frm["MyDist"].ToString();
                    string Tehsil = frm["MyTeh"].ToString();
                    string formName = "N2";

                    if (rm.file != null)
                    {
                        stdPic = Path.GetFileName(rm.file.FileName);
                    }

                    if (rm.std_Sign != null)
                    {
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);
                    }



                    if (rm.DocProofCertificate != null)
                    {
                        rm.ProofCertificate = Path.GetFileName(rm.DocProofCertificate.FileName);
                    }

                    if (rm.DocProofNRICandidates != null)
                    {
                        rm.ProofNRICandidates = Path.GetFileName(rm.DocProofNRICandidates.FileName);
                    }



                    if (Session["SCHOOLDIST"] == null)
                    {
                        return RedirectToAction("Index", "Login");
                    }

                    // date format (dd/mm/yyyy)
                    rm.DOB = AbstractLayer.StaticDB.GetDateFormatDDMMYYYY(rm.DOB);

                    //IsNRICandidate
                    if (rm.IsNRICandidate == true && (rm.DocProofNRICandidates != null || !string.IsNullOrEmpty(rm.ProofNRICandidates)))
                    {
                        rm.IsNRICandidate = true;
                    }
                    else
                    {
                        rm.IsNRICandidate = false;
                        rm.ProofNRICandidates = "";
                        rm.DocProofNRICandidates = null;
                    }

                    //NsqfPattern
                    if (string.IsNullOrEmpty(NSQFsubS6))
                    {
                        //if (!string.IsNullOrEmpty(S9))
                        //{
                        //    // NSQFsubS6 = S9;
                        //}
                    }
                    if (string.IsNullOrEmpty(NSQFsubS6))
                    {
                        rm.NSQFPattern = "";
                    }
                    else if (NSQFsubS6 == "NO")
                    {
                        rm.NSQFPattern = string.IsNullOrEmpty(NsqfPattern) ? "2" : NsqfPattern;
                    }
                    else
                    {
                        if (!string.IsNullOrEmpty(NSQFsubS6) && !string.IsNullOrEmpty(PreNSQF) && string.IsNullOrEmpty(NsqfPattern))
                        {
                            NsqfPattern = "2";
                        }
                        //if (string.IsNullOrEmpty(NsqfPattern))
                        //{
                        //    ViewData["result"] = "PATTERN";
                        //    return View(rm);
                        //}
                        //rm.NSQFPattern = NsqfPattern;

                    }
                    //NsqfPattern

                    string result = objDB.Ins_Data(rm, frm, formName, session, idno, schl);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not saved
                        ViewData["result"] = 0;
                    }
                    if (result == "-1")
                    {
                        //-----alredy exist
                        ViewData["result"] = -1;
                    }
                    if (result == "-3")
                    {
                        //-----alredy exist
                        ViewData["result"] = -3;
                    }
                    else
                    {
                        ViewData["result"] = 1;
                        //----Data Inserted Successfully
                        // dist = Session["SCHOOLDIST"].ToString();
                        if (Session["Session"] != null)
                        {
                            if (Session["Session"].ToString() == "2023-2024")
                            {
                                if (rm.file != null)
                                {

                                    string Orgfile = result + "P" + ".jpg";
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            ///file.CopyTo(newMemoryStream);

                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.file.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }

                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                                    string type = "P";
                                    string IsNew = "YES";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                                }
                                if (rm.std_Sign != null)
                                {

                                    string Orgfile = result + "S" + ".jpg";
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            ///file.CopyTo(newMemoryStream);

                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.std_Sign.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }


                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                                    string type = "S";
                                    string IsNew = "YES";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                                }

                                // Documents

                                if (rm.DocProofCertificate != null)
                                {
                                    string fileExt = Path.GetExtension(rm.DocProofCertificate.FileName);

                                    string Orgfile = result + "C" + fileExt;
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            ///file.CopyTo(newMemoryStream);

                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.DocProofCertificate.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }

                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate" + "/" + result + "C" + fileExt;
                                    string type = "C";
                                    string UpdatePicC = objDB.Updated_Pic_Data(result, PhotoName, type);
                                }


                                if (rm.DocProofNRICandidates != null && rm.IsNRICandidate)
                                {
                                    string fileExt = Path.GetExtension(rm.DocProofNRICandidates.FileName);
                                    string pathName = formName + "/" + schlDist + "/ProofNRICandidates";

                                    string Orgfile = result + "NRI" + fileExt;
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            ///file.CopyTo(newMemoryStream);

                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.DocProofNRICandidates.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidates/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }


                                    string PhotoName = "allfiles/Upload2024/" + pathName + "/" + result + "NRI" + fileExt;
                                    string type = "NRI";
                                    string UpdatePicN = objDB.Updated_Pic_Data(result, PhotoName, type);
                                }

                            }

                        }


                        //ViewBag.Message = "File has been uploaded successfully";
                        ModelState.Clear();

                        //--For Showing Message---------//
                        ViewData["result"] = 1;
                    }

                }

            }
            catch (Exception ex1)
            {


            }
            return N2Form();
        }


        public ActionResult ViewN2Records(RegistrationModels sm)
        {
            return RedirectToAction("N2Formgrid", "RegistrationPortal");
        }

        public ActionResult N2FormModify(string id)
        {
            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());

                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;


                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }
            //if (Session["Class"].ToString() == "3" && (Session["SchType"].ToString()  == "ASS" || Session["SchType"].ToString()  == "MRS"))
            //{
            //    return RedirectToAction("Index", "Home");
            //}
            //-------------------------------------Start NSQF------------------------
            string nsqfsub = null;
            DataSet nsresult = objDB.SelectS9(nsqfsub); // passing Value to DBClass from model
            ViewBag.nsfq = nsresult.Tables[0];
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {

                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
            }
            ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");

            //-----------------------------------------------------End Nsqf -------------------------
            if (id == null)
            {
                return RedirectToAction("N2Formgrid", "RegistrationPortal");
            }

            string formname = "N2";
            if (id != null)
            {
                try
                {
                    id = encrypt.QueryStringModule.Decrypt(id);
                    DataSet ds = objDB.SearchStudentGetByData(id, formname);
                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        return RedirectToAction("N2Formgrid", "RegistrationPortal");
                    }
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        rm.old_std_Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                        rm.old_std_sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                        rm.NSQFPattern = ds.Tables[0].Rows[0]["NSQFPattern"].ToString();
                        rm.IsUnlockForm = ds.Tables[0].Rows[0]["IsUnlockForm"].ToString();
                        rm.IsNRICandidate = ds.Tables[0].Rows[0]["IsNRICandidate"] == null ? false : ds.Tables[0].Rows[0]["IsNRICandidate"].ToString() == "0" ? false : ds.Tables[0].Rows[0]["IsNRICandidate"].ToString().ToLower() == "false" ? false : true;
                        // DataSet ds = objDB.SearchStudentGetByData(id);
                        rm.Std_id = Convert.ToInt32(ds.Tables[0].Rows[0]["Std_id"].ToString());

                        rm.Category = ds.Tables[0].Rows[0]["Category"].ToString();
                        ViewBag.catg = objCommon.GetCategory();

                        rm.Board = ds.Tables[0].Rows[0]["Board"].ToString();
                        ViewBag.MyBoard = objCommon.GetN2Board();


                        rm.Other_Board = ds.Tables[0].Rows[0]["Other_Board"].ToString();

                        rm.Board_Roll_Num = ds.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                        rm.Prev_School_Name = ds.Tables[0].Rows[0]["Prev_School_Name"].ToString();

                        rm.Month = ds.Tables[0].Rows[0]["Month"].ToString();
                        ViewBag.Mon = objCommon.GetMonth();

                        rm.Year = ds.Tables[0].Rows[0]["Year"].ToString();
                        //  AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                        ViewBag.SessionYearList = objCommon.GetSessionYear();
                        int IsPro = Convert.ToInt32(ds.Tables[0].Rows[0]["Provisional"].ToString());
                        if (IsPro == 1)
                        {
                            rm.Provisional = true;
                        }
                        else
                        {
                            rm.Provisional = false;
                        }
                        int IsPSEBRegNum = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPSEBRegNum"].ToString() == "" ? "0" : ds.Tables[0].Rows[0]["IsPSEBRegNum"].ToString());

                        if (IsPSEBRegNum == 1)
                        {
                            rm.IsPSEBRegNum = true;
                            rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                        }
                        else
                        {
                            rm.IsPSEBRegNum = false;
                            rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                        }
                        rm.AWRegisterNo = ds.Tables[0].Rows[0]["AWRegisterNo"].ToString();
                        rm.Admission_Num = ds.Tables[0].Rows[0]["Admission_Num"].ToString();
                        rm.requestID = ds.Tables[0].Rows[0]["requestID"].ToString();
                        if (rm.requestID != "" && rm.requestID != "0")
                        {
                            rm.IsLateAdm = true;
                            ViewBag.admdate = ds.Tables[0].Rows[0]["ApprovalUpto"].ToString(); ;
                        }
                        else
                        {
                            rm.IsLateAdm = false;
                        }
                        rm.Admission_Date = ds.Tables[0].Rows[0]["Admission_Date"].ToString();
                        rm.Class_Roll_Num_Section = ds.Tables[0].Rows[0]["Class_Roll_Num_Section"].ToString();
                        rm.Candi_Name = ds.Tables[0].Rows[0]["Candi_Name"].ToString();
                        rm.Candi_Name_P = ds.Tables[0].Rows[0]["Candi_Name_P"].ToString();
                        rm.Father_Name = ds.Tables[0].Rows[0]["Father_Name"].ToString();
                        rm.Father_Name_P = ds.Tables[0].Rows[0]["Father_Name_P"].ToString();
                        rm.Mother_Name = ds.Tables[0].Rows[0]["Mother_Name"].ToString();
                        rm.Mother_Name_P = ds.Tables[0].Rows[0]["Mother_Name_P"].ToString();

                        ViewBag.CasteSelected = rm.Caste = ds.Tables[0].Rows[0]["Caste"].ToString();
                        ViewBag.Caste = objCommon.GetCaste();

                        rm.Gender = ds.Tables[0].Rows[0]["Gender"].ToString();

                        rm.Differently_Abled = ds.Tables[0].Rows[0]["Differently_Abled"].ToString();
                        ViewBag.DA = objCommon.GetDA();

                        rm.Religion = ds.Tables[0].Rows[0]["Religion"].ToString();
                        ViewBag.RE = objCommon.GetReligion();

                        rm.DOB = ds.Tables[0].Rows[0]["DOB"].ToString();
                        rm.Mobile = ds.Tables[0].Rows[0]["Mobile"].ToString();
                        rm.Belongs_BPL = ds.Tables[0].Rows[0]["Belongs_BPL"].ToString();
                        rm.E_punjab_Std_id = ds.Tables[0].Rows[0]["E_punjab_Std_id"].ToString();
                        if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 28)
                        {
                            rm.AadharEnroll = "Enrollmemt";
                        }
                        else if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 12)
                        {
                            rm.AadharEnroll = "Aadhar";
                        }
                        else
                        {
                            rm.AadharEnroll = "N.A.";
                        }
                        rm.Aadhar_num = ds.Tables[0].Rows[0]["Aadhar_num"].ToString();
                        rm.Address = ds.Tables[0].Rows[0]["Address"].ToString();
                        rm.LandMark = ds.Tables[0].Rows[0]["LandMark"].ToString();
                        rm.Block = ds.Tables[0].Rows[0]["Block"].ToString();
                        string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();

                        //DataSet result = objDB.SelectDist(); // passing Value to DBClass from model
                        //ViewBag.MyDist = result.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
                        //List<SelectListItem> items = new List<SelectListItem>();
                        //foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
                        //{
                        //    items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
                        //}
                        //ViewBag.MyDist = items;
                        rm.MyDistrict = ds.Tables[0].Rows[0]["District"].ToString();
                        //rm.District = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString());
                        ViewBag.MyDist = objCommon.GetDistE();

                        rm.Tehsil = Convert.ToInt32(ds.Tables[0].Rows[0]["Tehsil"].ToString());

                        int dist = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString());
                        DataSet result1 = objDB.SelectAllTehsil(dist);
                        ViewBag.MyTeh = result1.Tables[0];
                        List<SelectListItem> TehList = new List<SelectListItem>();
                        foreach (System.Data.DataRow dr in ViewBag.MyTeh.Rows)
                        {

                            TehList.Add(new SelectListItem { Text = @dr["TEHSIL"].ToString(), Value = @dr["TCODE"].ToString() });

                        }
                        ViewBag.MyTeh = TehList;

                        rm.PinCode = ds.Tables[0].Rows[0]["PinCode"].ToString();

                        rm.Section = Convert.ToChar(ds.Tables[0].Rows[0]["Section"].ToString());
                        rm.DP = ds.Tables[0].Rows[0]["DisabilityPercent"].ToString();
                        rm.CandiMedium = ds.Tables[0].Rows[0]["CandStudyMedium"].ToString();
                        ViewBag.SectionList = objCommon.GetSection();
                        rm.PreNSQF = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();

                        @ViewBag.Photo = ds.Tables[0].Rows[0]["std_Photo"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        @ViewBag.sign = ds.Tables[0].Rows[0]["std_Sign"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();

                        rm.ProofCertificate = ds.Tables[0].Rows[0]["ProofCertificate"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["ProofCertificate"].ToString();
                        if (rm.IsNRICandidate)
                            rm.ProofNRICandidates = ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString();
                        else
                            rm.ProofNRICandidates = "";

                        //-----------------------------For NSQF SUBJECTS----------------
                        string ses = Session["Session"].ToString();
                        string schlcode = Session["SCHL"].ToString();
                        DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                        if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                        {
                            ViewData["NSQFSCHOOL"] = "1";

                        }
                        else
                        {
                            ViewData["NSQFSCHOOL"] = "0";
                        }
                        string sid = id;
                        DataSet isCHkNSQF = objDB.CHkNSQFStudents(sid);
                        if (rm.Category == "8TH PASSED")
                        {
                            List<SelectListItem> nssub8pass = new List<SelectListItem>();
                            nssub8pass.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            ViewBag.nsqfcatg = nssub8pass;
                            if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
                            {
                                ViewData["NSQFSTUDENT"] = "1";
                                rm.subS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                            }
                            else
                            {
                                rm.subS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                                ViewData["NSQFSTUDENT"] = "0";
                            }
                        }
                        else if (rm.Category == "9TH FAILED")
                        {
                            if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
                            {
                                ViewData["NSQFSTUDENT"] = "1";
                                rm.NsqfsubS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                                //DataSet nsTextresult = objDB.SelectNSQFTEXT(rm.NsqfsubS6);
                                DataSet nsTextresult = objDB.GetNSQFVIEWSUBJECT(rm.NsqfsubS6, rm.PreNSQF);

                                List<SelectListItem> nssub6 = new List<SelectListItem>();
                                if (rm.PreNSQF == "NO")
                                {
                                    nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                                    ViewBag.nsqfcatg = nssub6;
                                }
                                else
                                {
                                    if (nsTextresult.Tables[0].Rows.Count > 0)
                                    {
                                        nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                                        nssub6.Add(new SelectListItem { Text = nsTextresult.Tables[0].Rows[0]["Name_ENG"].ToString(), Value = rm.NsqfsubS6 });
                                        ViewBag.nsqfcatg = nssub6;
                                    }
                                    else
                                    {

                                        nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                                        nssub6.Add(new SelectListItem { Text = nsTextresult.Tables[1].Rows[0]["Name_ENG"].ToString(), Value = rm.PreNSQF });
                                        ViewBag.nsqfcatg = nssub6;
                                    }
                                }
                            }
                            else
                            {
                                rm.NsqfsubS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                                // ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
                                ViewData["NSQFSTUDENT"] = "0";
                            }
                        }

                        //--------------------------------End NSQF SUBJECTS-------------
                    }
                    else
                    {
                        return RedirectToAction("N2Formgrid", "RegistrationPortal");
                    }
                }
                catch (Exception ex)
                {
                    return RedirectToAction("N2Formgrid", "RegistrationPortal");
                }

            }
            //return View(asm);
            return View(rm);
        }
        [HttpPost]
        public ActionResult N2FormModify(string id, RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern, string subS6)
        {
            try
            {

                ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                id = encrypt.QueryStringModule.Decrypt(id);
                string schlDist = null;
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                ViewBag.catg = objCommon.GetCategory();
                ViewBag.MyBoard = objCommon.GetN2Board();


                ViewBag.Mon = objCommon.GetMonth();
                //AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                ViewBag.SessionYearList = objCommon.GetSessionYear();
                //int res = 0;
                //objDB.CheckDate(Session["SCHL"].ToString(),out res);
                // ViewBag.dsts = res;
                DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
                if (schlDistds.Tables[0].Rows.Count > 0)
                {
                    schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
                }

                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;



                ViewBag.Caste = objCommon.GetCaste();

                ViewBag.DA = objCommon.GetDA();

                ViewBag.RE = objCommon.GetReligion();
                ViewBag.MyDist = objCommon.GetDistE();


                ViewBag.SectionList = objCommon.GetSection();
                ViewBag.MyTeh = objCommon.GetAllTehsil();
                string dist = rm.MyDistrict;

                if (ModelState.IsValid)
                {
                    // AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

                    string formname = "N2";
                    DataSet ds = objDB.SearchStudentGetByData(id, formname);
                    string distOld = "";
                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        //DataSet ds = objDB.SearchStudentGetByData(id);
                        //distOld = ds.Tables[0].Rows[0]["District"].ToString();
                        rm.MyDistrict = distOld;
                    }
                    else
                    {
                        distOld = rm.MyDistrict;
                    }
                    string formName = "N2";
                    //if (frm["file"].ToString() != "")
                    if (rm.file != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdPic = Path.GetFileName(rm.file.FileName);

                    }
                    else
                    {

                        stdPic = ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    }
                    if (rm.std_Sign != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);

                    }
                    else
                    {

                        stdSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }

                    if (rm.DocProofCertificate != null)
                    {
                        rm.ProofCertificate = Path.GetFileName(rm.DocProofCertificate.FileName);
                    }
                    else
                    {

                        rm.ProofCertificate = ds.Tables[0].Rows[0]["ProofCertificate"].ToString();
                    }


                    if (rm.DocProofNRICandidates != null)
                    {
                        rm.ProofNRICandidates = Path.GetFileName(rm.DocProofNRICandidates.FileName);
                    }
                    else
                    {

                        rm.ProofNRICandidates = ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString();
                    }



                    if (Session["SCHOOLDIST"] == null)
                    {
                        return RedirectToAction("Index", "Login");
                    }
                    //-----------------------------For NSQF SUBJECTS----------------

                    string ses = Session["Session"].ToString();
                    string schlcode = Session["SCHL"].ToString();
                    DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                    if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                    {
                        ViewData["NSQFSCHOOL"] = "1";

                    }
                    else
                    {
                        ViewData["NSQFSCHOOL"] = "0";
                    }
                    string sid = id;
                    DataSet isCHkNSQF = objDB.CHkNSQFStudents(sid);
                    if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
                    {
                        ViewData["NSQFSTUDENT"] = "1";
                    }
                    else
                    {
                        ViewData["NSQFSTUDENT"] = "0";
                    }

                    string nsqfsub = null;
                    DataSet nsresult = objDB.SelectS9(nsqfsub); // passing Value to DBClass from model
                    ViewBag.nsfq = nsresult.Tables[0];
                    List<SelectListItem> nsfqList = new List<SelectListItem>();
                    //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                    nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                    foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                    {

                        nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
                    ViewBag.nsqfcatg = new SelectList(nsfqList, "Value", "Text");

                    //-----------------------------------------------------End Nsqf -------------------------
                    //--------------------------------End NSQF SUBJECTS-------------
                    // date format (dd/mm/yyyy)
                    rm.DOB = AbstractLayer.StaticDB.GetDateFormatDDMMYYYY(rm.DOB);


                    //IsNRICandidate
                    if (rm.IsNRICandidate == true && (rm.DocProofNRICandidates != null || !string.IsNullOrEmpty(rm.ProofNRICandidates)))
                    {
                        rm.IsNRICandidate = true;
                    }
                    else
                    {
                        rm.IsNRICandidate = false;
                        rm.ProofNRICandidates = "";
                        rm.DocProofNRICandidates = null;
                    }

                    //NsqfPattern
                    if (string.IsNullOrEmpty(NSQFsubS6))
                    {
                        //if (!string.IsNullOrEmpty(S9))
                        //{
                        //    // NSQFsubS6 = S9;
                        //}
                    }
                    if (string.IsNullOrEmpty(NSQFsubS6))
                    {
                        rm.NSQFPattern = "";
                    }
                    else if (NSQFsubS6 == "NO")
                    {
                        rm.NSQFPattern = string.IsNullOrEmpty(NsqfPattern) ? "2" : NsqfPattern;
                    }
                    else
                    {
                        if (!string.IsNullOrEmpty(NSQFsubS6) && !string.IsNullOrEmpty(PreNSQF) && string.IsNullOrEmpty(NsqfPattern))
                        {
                            NsqfPattern = "2";
                        }
                        //if (string.IsNullOrEmpty(NsqfPattern))
                        //{
                        //    ViewData["result"] = "PATTERN";
                        //    return View(rm);
                        //}
                        //rm.NSQFPattern = NsqfPattern;

                    }
                    //NsqfPattern
                    if (!string.IsNullOrEmpty(rm.DOB))
                    {
                        rm.DOB = AbstractLayer.StaticDB.DateInFormat(rm.DOB) == true ? rm.DOB : "";
                    }
                    else { rm.DOB = ""; }
                    string result = objDB.Update_N1_Data(rm, frm, formName, id, stdPic, stdSign);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not updated
                        ViewData["resultUpdate"] = 0;
                        return View();
                    }
                    else if (result == "-1")
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = -1;
                        return View();
                    }
                    else if (result == "-3")
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = -3;
                        return View();
                    }
                    else
                    {
                        ViewData["resultUpdate"] = 1;
                        // distOld = Session["SCHOOLDIST"].ToString();
                        if (rm.file != null)
                        {
                            //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.file.SaveAs(path);
                            //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                            //ViewBag.ImageURL = filepathtosave;

                            string Orgfile = result + "P" + ".jpg";
                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.file.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                            string type = "P";
                            string IsNew = "YES";
                            string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                        }
                        if (rm.std_Sign != null)
                        {
                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.std_Sign.SaveAs(path);
                            //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                            //ViewBag.ImageURL = filepathtosave;
                            string Orgfile = result + "S" + ".jpg";
                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.std_Sign.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                            string type = "S";
                            string IsNew = "YES";
                            string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                        }

                        // Documents

                        if (rm.DocProofCertificate != null)
                        {
                            string fileExt = Path.GetExtension(rm.DocProofCertificate.FileName);

                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"), result + "C" + fileExt);
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.DocProofCertificate.SaveAs(path);
                            string Orgfile = result + "C" + fileExt;

                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {

                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.DocProofCertificate.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }
                            rm.ProofCertificate = "allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate" + "/" + result + "C" + fileExt;
                            string type = "C";
                            string UpdatePicC = objDB.Updated_Pic_Data(result, rm.ProofCertificate, type);
                        }

                        if (rm.DocProofNRICandidates != null && rm.IsNRICandidate)
                        {
                            string fileExt = Path.GetExtension(rm.DocProofNRICandidates.FileName);
                            string pathName = formName + "/" + schlDist + "/ProofNRICandidates";

                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + pathName), result + "NRI" + fileExt);
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + pathName));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.DocProofNRICandidates.SaveAs(path);
                            string Orgfile = result + "NRI" + fileExt;

                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    ///file.CopyTo(newMemoryStream);

                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.DocProofNRICandidates.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidates/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            rm.ProofNRICandidates = "allfiles/Upload2024/" + pathName + "/" + result + "NRI" + fileExt;
                            string type = "NRI";
                            string UpdatePicN = objDB.Updated_Pic_Data(result, rm.ProofNRICandidates, type);
                        }

                    }

                    ModelState.Clear();
                    //--For Showing Message---------//
                    ViewData["resultUpdate"] = 1;
                    //return RedirectToAction("N2Formgrid", "RegistrationPortal");

                }
            }
            catch (Exception ex1)
            {
                oErrorLog.WriteErrorLog(ex1.ToString(), Path.GetFileName(Request.Path));

            }
            return View(rm);
            //return N2FormModify(id);

        }
        public ActionResult N2FormDelete(string id)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }
            //if (Session["Class"].ToString() == "3" && (Session["SchType"].ToString()  == "ASS" || Session["SchType"].ToString()  == "MRS"))
            //{
            //    return RedirectToAction("Index", "Home");
            //}
            if (id == null)
            {
                return RedirectToAction("N2Formgrid", "RegistrationPortal");
            }
            string formname = "N2";
            string schlDist = null;
            DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
            if (schlDistds.Tables[0].Rows.Count > 0)
            {
                schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
            }
            DataSet ds = objDB.SearchStudentGetByData(id, formname);
            //DataSet ds = objDB.SearchStudentGetByData(id);
            string dist = ds.Tables[0].Rows[0]["District"].ToString();
            string imgPhoto = ds.Tables[0].Rows[0]["std_Photo"].ToString();
            string imgSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
            string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();

            string ProofCertificate = ds.Tables[0].Rows[0]["ProofCertificate"].ToString();
            string ProofNRICandidates = ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString();


            string result = objDB.DeleteFromDataN2(id); // passing Value to DBClass from model

            //--------Photo Delete------
            RegistrationModels RM = new RegistrationModels();
            var fileDesti = ""; var fileDestiPic = ""; var fileDestiProof = ""; var fileDestiNRI = "";


            // var pathPhoto = "D:\\LatestPSEBONLINE - 2018 - 12042017\\PSEBONLINE\\PSEBONLINE\\Upload\\upload2018\\N1\\165\\Photo\\N1165100003P.jpg";

            //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

            //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), imgPhoto);
            //if (System.IO.File.Exists(pathPhoto))
            //{
            //    string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"));
            //    if (!Directory.Exists(FilepathExist))
            //    {
            //        Directory.CreateDirectory(FilepathExist);
            //    }

            //    //fileDesti = "../StdImages/DeletedPic/" + imgName;
            //    fileDestiPic = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"), imgPhoto);
            //    System.IO.File.Move(pathPhoto, fileDestiPic);
            //    System.IO.File.Delete(pathPhoto);

            //}

            //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
            //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), imgSign);
            //if (System.IO.File.Exists(pathSIGN))
            //{
            //    string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"));
            //    if (!Directory.Exists(FilepathExist))
            //    {
            //        Directory.CreateDirectory(FilepathExist);
            //    }
            //    //fileDesti = "../StdImages/DeletedPic/" + imgName;
            //    fileDesti = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"), imgSign);
            //    System.IO.File.Move(pathSIGN, fileDesti);
            //    System.IO.File.Delete(pathSIGN);

            //}
            //------------End photo Delete------




            // var pathPhoto = "D:\\LatestPSEBONLINE - 2018 - 12042017\\PSEBONLINE\\PSEBONLINE\\Upload\\upload2018\\N1\\165\\Photo\\N1165100003P.jpg";

            //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

            //var pathProofCertificate = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"), ProofCertificate);
            //if (System.IO.File.Exists(pathProofCertificate))
            //{
            //    string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificateD"));
            //    if (!Directory.Exists(FilepathExist))
            //    {
            //        Directory.CreateDirectory(FilepathExist);
            //    }

            //    //fileDesti = "../StdImages/DeletedPic/" + imgName;
            //    fileDestiProof = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificateD"), ProofCertificate);
            //    System.IO.File.Move(pathProofCertificate, fileDestiProof);
            //    System.IO.File.Delete(pathProofCertificate);

            //}

            //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
            //var pathProofNRICandidates = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidates"), ProofNRICandidates);
            //if (System.IO.File.Exists(pathProofNRICandidates))
            //{
            //    string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidatesD"));
            //    if (!Directory.Exists(FilepathExist))
            //    {
            //        Directory.CreateDirectory(FilepathExist);
            //    }
            //    //fileDesti = "../StdImages/DeletedPic/" + imgName;
            //    fileDestiNRI = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidatesD"), ProofNRICandidates);
            //    System.IO.File.Move(pathProofNRICandidates, fileDestiNRI);
            //    System.IO.File.Delete(pathProofNRICandidates);

            //}

            ViewData["resultDelete"] = result; // for dislaying message after saving storing output.
            return RedirectToAction("N2Formgrid", "RegistrationPortal");
        }

        #endregion N2 Form Start

        //----------------------Start N3 Forms-------------------------------
        #region N3 Form Start
        [HttpPost]
        public ActionResult ViewN3Records(RegistrationModels sm)
        {
            return RedirectToAction("N3Formgrid", "RegistrationPortal");
        }


        [SessionCheckFilter]
        public ActionResult N3Formgrid(RegistrationSearchModelList registrationSearchModel)
        {
            string schl = Session["SCHL"].ToString();
            int status = new AbstractLayer.RegistrationDB().CheckSchoolAssignForm(1, Session["SCHL"].ToString());
            if (status <= 0)
            {
                return RedirectToAction("Index", "Home");
            }
            DataSet dsOut = new DataSet();
            registrationSearchModel.RegistrationSearchModel = AbstractLayer.RegistrationDB.GetStudentRecordsSearchPM("N3", schl, out dsOut);
            registrationSearchModel.StoreAllData = dsOut;
            return View(registrationSearchModel);
        }

        public ActionResult N3Form()
        {

            return RedirectToAction("N3master", "RegistrationPortal");

            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            RegistrationModels rm = new RegistrationModels();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
                //int res = 0;
                //objDB.CheckDate(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.

                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;


                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                    else
                    {
                        DataSet result1 = objDB.schooltypes(Session["SCHL"].ToString());
                        if (result1.Tables[2].Rows.Count > 0)
                        {
                            if (result1.Tables[2].Rows[0]["reclock9th"].ToString() == "0")
                            {
                                return RedirectToAction("Index", "Home");
                            }
                        }
                    }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }
            //if (Session["Class"].ToString() == "3" && (Session["SchType"].ToString()  == "ASS" || Session["SchType"].ToString()  == "MRS"))
            //{
            //    return RedirectToAction("Index", "Home");
            //}
            if (Session["Session"].ToString() == "2016-2017")
            {
                ViewData["NSQFSCHOOL"] = "0";
            }
            else
            {
                //-----------------------------------------------------Nsqf -------------------------
                string ses = Session["Session"].ToString();
                string schlcode = Session["SCHL"].ToString();
                DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                {
                    ViewData["NSQFSCHOOL"] = "1";
                }
                else
                {
                    ViewData["NSQFSCHOOL"] = "0";
                }
                string nsqfsub = null;
                DataSet nsresult = objDB.SelectS9(nsqfsub); // passing Value to DBClass from model
                ViewBag.nsfq = nsresult.Tables[0];
                List<SelectListItem> nsfqList = new List<SelectListItem>();
                //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                {
                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
                }
                ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");


                //-----------------------------------------------------End Nsqf -------------------------
            }
            DataSet result = objDB.SelectDist(); // passing Value to DBClass from model
            ViewBag.MyDist = result.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> items = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
            {
                items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
            }
            // ViewBag.MyDist = items;
            ViewBag.MyDist = new SelectList(items, "Value", "Text", 047);


            //Section
            ViewBag.SectionList = objCommon.GetSection();
            ViewBag.Section = "0";

            var itemsch = new SelectList(new[]{new {ID="1",Name="School Code"},new{ID="2",Name="School Name"},
                     new{ID="3",Name="School IDNO"},new{ID="4",Name="School Station"},new{ID="5",Name="School Center Code"},}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();

            ViewBag.SelectedItem = "";
            ViewBag.Mon = objCommon.GetMonth();
            ViewBag.SessionYearList = objCommon.GetSessionYear();
            @ViewBag.DA = objCommon.GetDA();

            string formname = "N3";
            string schlid = "";
            if (Session["SCHL"] != null)
            {
                schlid = Session["SCHL"].ToString();
            }
            else
            {
                return View(rm);
            }

            DataSet seleLastCan = objDB.SelectlastEntryCandidate(formname, schlid);
            if (seleLastCan.Tables[0].Rows.Count > 0)
            {
                @ViewBag.message = "1";
                @ViewBag.Board_Roll_Num = seleLastCan.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                @ViewBag.Admission_Num = seleLastCan.Tables[0].Rows[0]["Admission_Num"].ToString();
                @ViewBag.Candi_Name = seleLastCan.Tables[0].Rows[0]["Candi_Name"].ToString();
                @ViewBag.Father_Name = seleLastCan.Tables[0].Rows[0]["Father_Name"].ToString();
                @ViewBag.id = seleLastCan.Tables[0].Rows[0]["Std_id"].ToString();
                @ViewBag.lot = seleLastCan.Tables[0].Rows[0]["lot"].ToString();
            }
            else
            {
                @ViewBag.message = "Record Not Found";
            }


            return View(rm);
        }

        [HttpPost]
        public ActionResult N3Form(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern, string subS6)
        {
            try
            {


                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                string schlDist = null;
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                DataSet result1 = objDB.SelectDist(); // passing Value to DBClass from model
                ViewBag.MyDist = result1.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
                List<SelectListItem> items = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
                {
                    items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
                }
                // ViewBag.MyDist = items;
                ViewBag.MyDist = new SelectList(items, "Value", "Text", 047);

                ViewBag.SectionList = objCommon.GetSection();
                //int res = 0;
                //objDB.CheckDate(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.
                DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
                if (schlDistds.Tables[0].Rows.Count > 0)
                {
                    schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
                }
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;

                string session = null;
                string idno = null;
                string schl = null;
                if (Session["Session"] != null)
                {
                    session = Session["Session"].ToString();
                    idno = Session["IDNO"].ToString();
                    schl = Session["SCHL"].ToString();
                }
                else
                {
                    return RedirectToAction("Index", "Login");
                }

                //Check server side validation using data annotation
                if (ModelState.IsValid)
                {

                    string dist = frm["MyDist"].ToString();
                    string Tehsil = frm["MyTeh"].ToString();
                    string formName = "N3";

                    if (rm.file != null)
                    {
                        stdPic = Path.GetFileName(rm.file.FileName);
                    }
                    else
                    {
                        //Response.Write("<script>alert('Please Upload Photo')</script>");
                        //return View();

                    }
                    if (rm.std_Sign != null)
                    {
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);
                    }
                    else
                    {
                        //Response.Write("<script>alert('Please Upload sign')</script>");
                        //return View();

                    }

                    if (Session["SCHOOLDIST"] == null)
                    {
                        return RedirectToAction("Index", "Login");
                    }
                    // date format (dd/mm/yyyy)
                    rm.DOB = AbstractLayer.StaticDB.GetDateFormatDDMMYYYY(rm.DOB);

                    //NsqfPattern
                    if (string.IsNullOrEmpty(NSQFsubS6))
                    {
                        //if (!string.IsNullOrEmpty(S9))
                        //{
                        //    // NSQFsubS6 = S9;
                        //}
                    }
                    if (string.IsNullOrEmpty(NSQFsubS6))
                    {
                        rm.NSQFPattern = "";
                    }
                    else if (NSQFsubS6 == "NO")
                    {
                        rm.NSQFPattern = string.IsNullOrEmpty(NsqfPattern) ? "2" : NsqfPattern;
                    }
                    else
                    {
                        if (!string.IsNullOrEmpty(NSQFsubS6) && !string.IsNullOrEmpty(PreNSQF) && string.IsNullOrEmpty(NsqfPattern))
                        {
                            NsqfPattern = "2";
                        }
                        //if (string.IsNullOrEmpty(NsqfPattern))
                        //{
                        //    ViewData["result"] = "PATTERN";
                        //    return View(rm);
                        //}
                        //rm.NSQFPattern = NsqfPattern;

                    }
                    //NsqfPattern

                    string result = objDB.Ins_Data(rm, frm, formName, session, idno, schl);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not saved
                        ViewData["result"] = 0;
                    }
                    if (result == "-1")
                    {
                        //-----alredy exist
                        ViewData["result"] = -1;
                    }
                    if (result == "-3")
                    {
                        //-----alredy exist
                        ViewData["result"] = -3;
                    }
                    else
                    {
                        ViewData["result"] = 1;
                        //----Data Inserted Successfully

                        //   dist = Session["SCHOOLDIST"].ToString();
                        if (Session["Session"] != null)
                        {
                            if (Session["Session"].ToString() == "2023-2024")
                            {
                                if (rm.file != null)
                                {
                                    //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                                    //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                                    //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"));
                                    //if (!Directory.Exists(FilepathExist))
                                    //{
                                    //    Directory.CreateDirectory(FilepathExist);
                                    //}
                                    //rm.file.SaveAs(path);
                                    //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                                    //ViewBag.ImageURL = filepathtosave;
                                    string Orgfile = result + "P" + ".jpg";
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.file.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }

                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                                    string type = "P";
                                    string IsNew = "YES";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                                }
                                if (rm.std_Sign != null)
                                {
                                    //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                                    //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"));
                                    //if (!Directory.Exists(FilepathExist))
                                    //{
                                    //    Directory.CreateDirectory(FilepathExist);
                                    //}
                                    //rm.std_Sign.SaveAs(path);
                                    //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                                    //ViewBag.ImageURL = filepathtosave;
                                    string Orgfile = result + "S" + ".jpg";
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.std_Sign.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }

                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                                    string type = "S";
                                    string IsNew = "YES";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                                }
                            }

                        }


                        //ViewBag.Message = "File has been uploaded successfully";
                        ModelState.Clear();

                        //--For Showing Message---------//
                        ViewData["result"] = 1;
                    }

                }
            }
            catch (Exception ex1)
            {


            }
            return N3Form();
        }

        public ActionResult N3FormModify(string id)
        {
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            ViewBag.YesNoListCP = new AbstractLayer.DBClass().GetYesNo().ToList();
            ViewBag.StaffList = new AbstractLayer.RegistrationDB().GetStaffListBySCHL(0, Session["SCHL"].ToString(), 0);
            ViewBag.YesNoList = new AbstractLayer.DBClass().GetYesNo().Where(s => s.Value == "Y").ToList();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
                //int res = 0;
                //objDB.CheckDate(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.

                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;

                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                    else
                    {
                        DataSet result1 = objDB.schooltypes(Session["SCHL"].ToString());
                        if (result1.Tables[2].Rows.Count > 0)
                        {
                            if (result1.Tables[2].Rows[0]["reclock9th"].ToString() == "0")
                            {
                                return RedirectToAction("Index", "Home");
                            }
                        }
                    }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }
            //if (Session["Class"].ToString() == "3" && (Session["SchType"].ToString()  == "ASS" || Session["SchType"].ToString()  == "MRS"))
            //{
            //    return RedirectToAction("Index", "Home");
            //}

            //-------------------------------------Start NSQF------------------------
            string nsqfsub = null;
            DataSet nsresult = objDB.SelectS9(nsqfsub); // passing Value to DBClass from model
            ViewBag.nsfq = nsresult.Tables[0];
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {

                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
            }
            ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");


            //-----------------------------------------------------End Nsqf -------------------------
            if (id == null)
            {
                return RedirectToAction("N3Formgrid", "RegistrationPortal");
            }

            string formname = "N3";
            if (id != null)
            {
                try
                {
                    id = encrypt.QueryStringModule.Decrypt(id);
                    DataSet ds = objDB.SearchStudentGetByData(id, formname);
                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        return RedirectToAction("N3Formgrid", "RegistrationPortal");
                    }
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        rm.old_std_Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                        rm.old_std_sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                        rm.NSQFPattern = ds.Tables[0].Rows[0]["NSQFPattern"].ToString();
                        rm.IsImportedStudent = ds.Tables[0].Rows[0]["IsImportedStudent"].ToString();
                        rm.IsUnlockForm = ds.Tables[0].Rows[0]["IsUnlockForm"].ToString();
                        // DataSet ds = objDB.SearchStudentGetByData(id);
                        rm.Std_id = Convert.ToInt32(ds.Tables[0].Rows[0]["Std_id"].ToString());

                        rm.Category = ds.Tables[0].Rows[0]["Category"].ToString();
                        ViewBag.catg = objCommon.GetCategory();

                        rm.Board = ds.Tables[0].Rows[0]["Board"].ToString();
                        ViewBag.MyBoard = objCommon.GetBoard();

                        rm.Board_Roll_Num = ds.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                        rm.Prev_School_Name = ds.Tables[0].Rows[0]["Prev_School_Name"].ToString();

                        rm.Month = ds.Tables[0].Rows[0]["Month"].ToString();
                        ViewBag.Mon = objCommon.GetMonth();

                        rm.Year = ds.Tables[0].Rows[0]["Year"].ToString();
                        //  AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                        ViewBag.SessionYearList = objCommon.GetSessionYear();
                        rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                        rm.AWRegisterNo = ds.Tables[0].Rows[0]["AWRegisterNo"].ToString();
                        rm.Admission_Num = ds.Tables[0].Rows[0]["Admission_Num"].ToString();
                        rm.requestID = ds.Tables[0].Rows[0]["requestID"].ToString();
                        if (rm.requestID != "" && rm.requestID != "0")
                        {
                            rm.IsLateAdm = true;
                            ViewBag.admdate = ds.Tables[0].Rows[0]["ApprovalUpto"].ToString(); ;
                        }
                        else
                        {
                            rm.IsLateAdm = false;
                        }
                        rm.Admission_Date = ds.Tables[0].Rows[0]["Admission_Date"].ToString() == "" ? "31/07/2023" : ds.Tables[0].Rows[0]["Admission_Date"].ToString();
                        rm.Class_Roll_Num_Section = ds.Tables[0].Rows[0]["Class_Roll_Num_Section"].ToString();
                        rm.Candi_Name = ds.Tables[0].Rows[0]["Candi_Name"].ToString();
                        rm.Candi_Name_P = ds.Tables[0].Rows[0]["Candi_Name_P"].ToString();
                        rm.Father_Name = ds.Tables[0].Rows[0]["Father_Name"].ToString();
                        rm.Father_Name_P = ds.Tables[0].Rows[0]["Father_Name_P"].ToString();
                        rm.Mother_Name = ds.Tables[0].Rows[0]["Mother_Name"].ToString();
                        rm.Mother_Name_P = ds.Tables[0].Rows[0]["Mother_Name_P"].ToString();

                        ViewBag.CasteSelected = rm.Caste = ds.Tables[0].Rows[0]["Caste"].ToString();
                        ViewBag.Caste = objCommon.GetCaste();

                        rm.Gender = ds.Tables[0].Rows[0]["Gender"].ToString();

                        rm.Differently_Abled = ds.Tables[0].Rows[0]["Differently_Abled"].ToString();
                        ViewBag.DA = objCommon.GetDA();

                        rm.Religion = ds.Tables[0].Rows[0]["Religion"].ToString();
                        ViewBag.RE = objCommon.GetReligion();

                        rm.DOB = ds.Tables[0].Rows[0]["DOB"].ToString();
                        rm.Mobile = ds.Tables[0].Rows[0]["Mobile"].ToString();
                        rm.Belongs_BPL = ds.Tables[0].Rows[0]["Belongs_BPL"].ToString();
                        rm.E_punjab_Std_id = ds.Tables[0].Rows[0]["E_punjab_Std_id"].ToString();
                        if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 28)
                        {
                            rm.AadharEnroll = "Enrollmemt";
                        }
                        else if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 12)
                        {
                            rm.AadharEnroll = "Aadhar";
                        }
                        else
                        {
                            rm.AadharEnroll = "N.A.";
                        }
                        rm.Aadhar_num = ds.Tables[0].Rows[0]["Aadhar_num"].ToString();
                        rm.Address = ds.Tables[0].Rows[0]["Address"].ToString();
                        rm.LandMark = ds.Tables[0].Rows[0]["LandMark"].ToString();
                        rm.Block = ds.Tables[0].Rows[0]["Block"].ToString();
                        string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();


                        rm.MyDistrict = ds.Tables[0].Rows[0]["District"].ToString();
                        //rm.District = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString());
                        ViewBag.MyDist = objCommon.GetDistE();

                        rm.Tehsil = Convert.ToInt32(ds.Tables[0].Rows[0]["Tehsil"].ToString());

                        int dist = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString());
                        DataSet result1 = objDB.SelectAllTehsil(dist);
                        ViewBag.MyTeh = result1.Tables[0];
                        List<SelectListItem> TehList = new List<SelectListItem>();
                        foreach (System.Data.DataRow dr in ViewBag.MyTeh.Rows)
                        {

                            TehList.Add(new SelectListItem { Text = @dr["TEHSIL"].ToString(), Value = @dr["TCODE"].ToString() });

                        }
                        ViewBag.MyTeh = TehList;

                        rm.PinCode = ds.Tables[0].Rows[0]["PinCode"].ToString();

                        int IsPrevSchoolSelf = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPrevSchoolSelf"].ToString());
                        if (IsPrevSchoolSelf == 1)
                        {
                            rm.IsPrevSchoolSelf = true;
                        }
                        else
                        {
                            rm.IsPrevSchoolSelf = false;
                        }
                        int IsPro = Convert.ToInt32(ds.Tables[0].Rows[0]["Provisional"].ToString());
                        if (IsPro == 1)
                        {
                            rm.Provisional = true;
                        }
                        else
                        {
                            rm.Provisional = false;
                        }

                        if (Session["Session"].ToString() == "2023-2024")
                        {
                            //@ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"]  + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            //@ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"]  + ds.Tables[0].Rows[0]["std_Sign"].ToString();

                            if (ds.Tables[0].Rows[0]["std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["std_Photo"].ToString() != "")
                            {
                                //  not imported
                                rm.checkCategory = "";
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                //string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                                //if (oldyear.ToString() == "2023")
                                //{
                                //    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                                //    {
                                //        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                //        {

                                //            @ViewBag.Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                                //        }
                                //        else
                                //        {
                                //            //@ViewBag.Photo = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                //        }
                                //    }
                                //    else
                                //    {
                                //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                                //    }
                                //}
                                //else if (oldyear.ToString() == "2022")
                                //{
                                //    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                                //    {
                                //        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                //        {

                                //            @ViewBag.Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                                //        }
                                //        else
                                //        {
                                //            //@ViewBag.Photo = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                //        }
                                //    }
                                //    else
                                //    {
                                //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                                //    }
                                //}
                                //else if (oldyear.ToString() == "2021")
                                //{
                                //    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                                //    {
                                //        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                //        {

                                //            @ViewBag.Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                                //        }
                                //        else
                                //        {
                                //            //@ViewBag.Photo = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                //        }
                                //    }
                                //    else
                                //    {
                                //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                                //    }
                                //}

                                //else
                                //{
                                //    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                                //    {
                                //        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                //        {

                                //            @ViewBag.Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                                //        }
                                //        else
                                //        {
                                //            //@ViewBag.Photo = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                //        }
                                //    }
                                //    else
                                //    {
                                //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                                //    }
                                //}
                            }
                            //-------------------------------------------For Sign---------------------------

                            if (ds.Tables[0].Rows[0]["std_Sign"].ToString() != null && ds.Tables[0].Rows[0]["std_Sign"].ToString() != "")
                            {
                                //  not imported

                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                                //string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                                //if (oldyear.ToString() == "2023")
                                //{
                                //    if (ds.Tables[0].Rows[0]["std_Sign"].ToString() == null || ds.Tables[0].Rows[0]["std_Sign"].ToString() == "")
                                //    {
                                //        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                //        {
                                //            @ViewBag.sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                //        }
                                //        else
                                //        {
                                //            //@ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                                //        }
                                //    }
                                //    else
                                //    {
                                //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                                //    }
                                //}
                                //else if (oldyear.ToString() == "2022")
                                //{
                                //    if (ds.Tables[0].Rows[0]["std_Sign"].ToString() == null || ds.Tables[0].Rows[0]["std_Sign"].ToString() == "")
                                //    {
                                //        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                //        {
                                //            @ViewBag.sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                //        }
                                //        else
                                //        {
                                //            //@ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                                //        }
                                //    }
                                //    else
                                //    {
                                //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                                //    }
                                //}
                                //else if (oldyear.ToString() == "2021")
                                //{
                                //    if (ds.Tables[0].Rows[0]["std_Sign"].ToString() == null || ds.Tables[0].Rows[0]["std_Sign"].ToString() == "")
                                //    {
                                //        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                //        {
                                //            @ViewBag.sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                //        }
                                //        else
                                //        {
                                //            //@ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                                //        }
                                //    }
                                //    else
                                //    {
                                //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                                //    }
                                //}
                                //else
                                //{
                                //    if (ds.Tables[0].Rows[0]["std_Sign"].ToString() == null || ds.Tables[0].Rows[0]["std_Sign"].ToString() == "")
                                //    {
                                //        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                //        {
                                //            @ViewBag.sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                //        }
                                //        else
                                //        {
                                //            //@ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                                //        }
                                //    }
                                //    else
                                //    {
                                //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                                //    }
                                //}
                            }

                        }

                        #region check photo sign exists

                        //if (!string.IsNullOrEmpty(rm.old_std_Photo))
                        //{
                        //    string CandPhotoTempPath = rm.old_std_Photo;
                        //    if (!string.IsNullOrEmpty(CandPhotoTempPath))
                        //    {
                        //        CandPhotoTempPath = CandPhotoTempPath.Replace("https://registration2022.pseb.ac.in/upload/", "");
                        //        CandPhotoTempPath = CandPhotoTempPath.Replace("https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/", "");
                        //    }
                        //    string PhotoExist = Path.Combine(Server.MapPath("~/Upload/" + CandPhotoTempPath));
                        //    if (!System.IO.File.Exists(PhotoExist))
                        //    {
                        //        //Photo Not Exist
                        //        rm.PhotoExist = "";
                        //    }
                        //    else { rm.PhotoExist = PhotoExist; }
                        //}


                        //if (!string.IsNullOrEmpty(rm.old_std_sign))
                        //{
                        //    string CandSignTempPath = rm.old_std_sign;
                        //    if (!string.IsNullOrEmpty(CandSignTempPath))
                        //    {
                        //        CandSignTempPath = CandSignTempPath.Replace("https://registration2022.pseb.ac.in/upload/", "");
                        //        CandSignTempPath = CandSignTempPath.Replace("https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/", "");
                        //    }
                        //    string SignExist = Path.Combine(Server.MapPath("~/Upload/" + CandSignTempPath));
                        //    if (!System.IO.File.Exists(SignExist))
                        //    {
                        //        //Photo Not Exist
                        //        rm.SignExist = "";
                        //    }
                        //    else { rm.SignExist = SignExist; }
                        //}


                        #endregion


                        rm.ProofCertificate = ds.Tables[0].Rows[0]["ProofCertificate"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["ProofCertificate"].ToString();
                        rm.ProofNRICandidates = ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString();

                        //rm.Section = Convert.ToChar(ds.Tables[0].Rows[0]["Section"].ToString());
                        if (ds.Tables[0].Rows[0]["section"].ToString() == "")
                        {
                            rm.Section = '0';
                            ViewBag.SectionList = objCommon.GetSection();
                        }
                        else
                        {
                            rm.Section = Convert.ToChar(ds.Tables[0].Rows[0]["section"].ToString());
                            ViewBag.SectionList = objCommon.GetSection();
                        }

                        rm.DP = ds.Tables[0].Rows[0]["DisabilityPercent"].ToString();
                        rm.CandiMedium = ds.Tables[0].Rows[0]["CandStudyMedium"].ToString();
                        rm.oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                        rm.LOT = ds.Tables[0].Rows[0]["LOT"].ToString();
                        ViewBag.SectionList = objCommon.GetSection();
                        //-----------------------------For NSQF SUBJECTS----------------
                        string ses = Session["Session"].ToString();
                        string schlcode = Session["SCHL"].ToString();
                        DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                        if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                        {
                            ViewData["NSQFSCHOOL"] = "1";

                        }
                        else
                        {
                            ViewData["NSQFSCHOOL"] = "0";
                        }
                        string sid = id;
                        DataSet isCHkNSQF = objDB.CHkNSQFStudents(sid);
                        if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
                        {
                            ViewData["NSQFSTUDENT"] = "1";
                            rm.subS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                        }
                        else
                        {
                            rm.subS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                            ViewData["NSQFSTUDENT"] = "0";
                        }
                        //--------------------------------End NSQF SUBJECTS-------------
                    }
                    else
                    {
                        return RedirectToAction("N3Formgrid", "RegistrationPortal");
                    }
                }
                catch (Exception Ex)
                {
                    return RedirectToAction("N3Formgrid", "RegistrationPortal");
                }

            }
            //return View(asm);
            return View(rm);
        }
        [HttpPost]
        public ActionResult N3FormModify(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern, string subS6)
        {
            try
            {


                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                ViewBag.YesNoListCP = new AbstractLayer.DBClass().GetYesNo().ToList();
                ViewBag.StaffList = new AbstractLayer.RegistrationDB().GetStaffListBySCHL(0, Session["SCHL"].ToString(), 0);
                ViewBag.YesNoList = new AbstractLayer.DBClass().GetYesNo().Where(s => s.Value == "Y").ToList();
                string schlDist = null;
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

                ViewBag.catg = objCommon.GetCategory();
                ViewBag.MyBoard = objCommon.GetBoard();


                ViewBag.Mon = objCommon.GetMonth();

                // AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                ViewBag.SessionYearList = objCommon.GetSessionYear();

                ViewBag.Caste = objCommon.GetCaste();

                ViewBag.DA = objCommon.GetDA();

                DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
                if (schlDistds.Tables[0].Rows.Count > 0)
                {
                    schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
                }
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;

                ViewBag.RE = objCommon.GetReligion();
                ViewBag.MyDist = objCommon.GetDistE();


                ViewBag.SectionList = objCommon.GetSection();
                ViewBag.MyTeh = objCommon.GetAllTehsil();
                string dist = rm.MyDistrict;

                if (ModelState.IsValid)
                {
                    // AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                    string id = rm.Std_id.ToString();
                    string formname = "N3";
                    DataSet ds = objDB.SearchStudentGetByData(id, formname);
                    string distOld = "";
                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        //DataSet ds = objDB.SearchStudentGetByData(id);
                        distOld = ds.Tables[0].Rows[0]["District"].ToString();
                        rm.MyDistrict = distOld;
                    }
                    else
                    {
                        distOld = rm.MyDistrict;
                    }
                    //string stdPic = null;
                    string formName = "N3";
                    rm.IsImportedStudent = ds.Tables[0].Rows[0]["IsImportedStudent"].ToString();
                    rm.oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                    //if (frm["file"].ToString() != "")
                    if (rm.file != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdPic = Path.GetFileName(rm.file.FileName);

                    }
                    else
                    {

                        stdPic = ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    }
                    if (rm.std_Sign != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);

                    }
                    else
                    {

                        stdSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }
                    //-----------------------------For NSQF SUBJECTS----------------
                    string ses = Session["Session"].ToString();
                    string schlcode = Session["SCHL"].ToString();
                    DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                    if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                    {
                        ViewData["NSQFSCHOOL"] = "1";

                    }
                    else
                    {
                        ViewData["NSQFSCHOOL"] = "0";
                    }
                    string sid = id;
                    DataSet isCHkNSQF = objDB.CHkNSQFStudents(sid);
                    if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
                    {
                        ViewData["NSQFSTUDENT"] = "1";
                    }
                    else
                    {
                        ViewData["NSQFSTUDENT"] = "0";
                    }

                    string nsqfsub = null;
                    DataSet nsresult = objDB.SelectS9(nsqfsub); // passing Value to DBClass from model
                    ViewBag.nsfq = nsresult.Tables[0];
                    List<SelectListItem> nsfqList = new List<SelectListItem>();
                    //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                    nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                    foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                    {

                        nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");


                    //-----------------------------------------------------End Nsqf -------------------------
                    //--------------------------------End NSQF SUBJECTS-------------



                    //-------------------Std PHOTO and Sign----------------

                    #region Photo and Sign
                    string filePath = "";
                    string filePathSign = "";
                    string Upload = System.Configuration.ConfigurationManager.AppSettings["Upload"];

                    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["std_Photo"].ToString() != "")
                    {
                        //  not imported
                        rm.checkCategory = "";
                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    }
                    else
                    {

                        string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                        if (oldyear.ToString() == "2023")
                        {
                            if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                {

                                    @ViewBag.Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                    filePath = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2022")
                        {
                            if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                {

                                    @ViewBag.Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                    filePath = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2021")
                        {
                            if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                {

                                    @ViewBag.Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                    filePath = @"C:\ClusterStorage\Volume1\upload\upload2020\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2020/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2020")
                        {
                            if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                {

                                    @ViewBag.Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                                    filePath = @"C:\ClusterStorage\Volume1\upload\upload2019\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2019", "");


                                }
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            }
                        }
                        else
                        {
                            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        }
                    }
                    //---------------------------------------------------------For Sign------------------------------------------

                    if (ds.Tables[0].Rows[0]["std_sign"].ToString() != null && ds.Tables[0].Rows[0]["std_sign"].ToString() != "")
                    {
                        //  not imported
                        rm.checkCategory = "";
                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }
                    else
                    {
                        string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                        if (oldyear.ToString() == "2023")
                        {
                            if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                {
                                    @ViewBag.sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                    filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2022")
                        {
                            if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                {
                                    @ViewBag.sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                    filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2021")
                        {
                            if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                {

                                    @ViewBag.sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                    filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2020\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2020/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2020")
                        {
                            if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                {
                                    @ViewBag.sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                    filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2019\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2019/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                            }
                        }

                        else
                        {
                            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                        }
                    }

                    #endregion
                    //--------------------PhotoSign----------------------





                    // date format (dd/mm/yyyy)
                    rm.DOB = AbstractLayer.StaticDB.GetDateFormatDDMMYYYY(rm.DOB);
                    if (!string.IsNullOrEmpty(rm.DOB))
                    {
                        rm.DOB = AbstractLayer.StaticDB.DateInFormat(rm.DOB) == true ? rm.DOB : "";
                    }
                    else { rm.DOB = ""; }

                    //NsqfPattern
                    if (string.IsNullOrEmpty(NSQFsubS6))
                    {
                        //if (!string.IsNullOrEmpty(S9))
                        //{
                        //    // NSQFsubS6 = S9;
                        //}
                    }
                    if (string.IsNullOrEmpty(NSQFsubS6))
                    {
                        rm.NSQFPattern = "";
                    }
                    else if (NSQFsubS6 == "NO")
                    {
                        rm.NSQFPattern = string.IsNullOrEmpty(NsqfPattern) ? "2" : NsqfPattern;
                    }
                    else
                    {
                        if (!string.IsNullOrEmpty(NSQFsubS6) && !string.IsNullOrEmpty(PreNSQF) && string.IsNullOrEmpty(NsqfPattern))
                        {
                            NsqfPattern = "2";
                        }
                        //if (string.IsNullOrEmpty(NsqfPattern))
                        //{
                        //    ViewData["result"] = "PATTERN";
                        //    return View(rm);
                        //}
                        //rm.NSQFPattern = NsqfPattern;
                    }
                    //NsqfPattern
                    string result = objDB.Update_N1_Data(rm, frm, formName, id, stdPic, stdSign);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not updated
                        ViewData["resultUpdate"] = 0;
                    }
                    else if (result == "-1")
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = -1;
                    }
                    else if (result == "-3")
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = -3;
                    }
                    else
                    {
                        ViewData["resultUpdate"] = result;
                        // distOld = Session["SCHOOLDIST"].ToString();
                        if (Session["Session"] != null)
                        {
                            if (Session["Session"].ToString() == "2023-2024")
                            {
                                if (rm.file != null)
                                {
                                    //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                                    //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                                    //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"));
                                    //if (!Directory.Exists(FilepathExist))
                                    //{
                                    //    Directory.CreateDirectory(FilepathExist);
                                    //}
                                    //rm.file.SaveAs(path);
                                    //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                                    //ViewBag.ImageURL = filepathtosave;
                                    string Orgfile = result + "P" + ".jpg";
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.file.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }

                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                                    string type = "P";
                                    string IsNew = "YES";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                                }
                                else
                                {

                                    //var filePath1 = Path.Combine(Server.MapPath(filePath));
                                    var filePath1 = filePath;
                                    if ((ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "") && (filePath != null && filePath != ""))
                                    {
                                        //var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                                        //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Photo"));
                                        //if (!Directory.Exists(FilepathExist))
                                        //{
                                        //    Directory.CreateDirectory(FilepathExist);
                                        //}
                                        //if (System.IO.File.Exists(path))
                                        //{
                                        //    System.IO.File.Delete(path);
                                        //}
                                        //System.IO.File.Copy(filePath1, path);
                                        //filepathtosave = "../Upload/Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                                        //ViewBag.ImageURL = filepathtosave;
                                        string Orgfile = result + "P" + ".jpg";
                                        using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                        {
                                            using (var newMemoryStream = new MemoryStream())
                                            {
                                                var uploadRequest = new TransferUtilityUploadRequest
                                                {
                                                    InputStream = rm.file.InputStream,
                                                    Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                                    BucketName = BUCKET_NAME,
                                                    CannedACL = S3CannedACL.PublicRead
                                                };

                                                var fileTransferUtility = new TransferUtility(client);
                                                fileTransferUtility.Upload(uploadRequest);
                                            }
                                        }

                                        string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                                        string type = "P";
                                        string IsNew = "NO";
                                        string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);


                                    }
                                }
                                if (rm.std_Sign != null)
                                {
                                    //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                                    //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"));
                                    //if (!Directory.Exists(FilepathExist))
                                    //{
                                    //    Directory.CreateDirectory(FilepathExist);
                                    //}
                                    //rm.std_Sign.SaveAs(path);
                                    //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                                    //ViewBag.ImageURL = filepathtosave;
                                    string Orgfile = result + "S" + ".jpg";
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.std_Sign.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }


                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                                    string type = "S";
                                    string IsNew = "YES";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                                }
                                else
                                {
                                    // var filePathS = Path.Combine(Server.MapPath(filePathSign));
                                    var filePathS = filePathSign;
                                    if ((ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "") && (filePathSign != null && filePathSign != ""))
                                    {
                                        //var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                                        //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Sign"));
                                        //if (!Directory.Exists(FilepathExist))
                                        //{
                                        //    Directory.CreateDirectory(FilepathExist);
                                        //}
                                        //if (System.IO.File.Exists(path))
                                        //{
                                        //    System.IO.File.Delete(path);
                                        //}
                                        //System.IO.File.Copy(filePathS, path);
                                        //filepathtosave = "../Upload/Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                                        //ViewBag.ImageURL = filepathtosave;
                                        string Orgfile = result + "S" + ".jpg";
                                        using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                        {
                                            using (var newMemoryStream = new MemoryStream())
                                            {
                                                var uploadRequest = new TransferUtilityUploadRequest
                                                {
                                                    InputStream = rm.std_Sign.InputStream,
                                                    Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                                    BucketName = BUCKET_NAME,
                                                    CannedACL = S3CannedACL.PublicRead
                                                };

                                                var fileTransferUtility = new TransferUtility(client);
                                                fileTransferUtility.Upload(uploadRequest);
                                            }
                                        }

                                        string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                                        string type = "S";
                                        string IsNew = "NO";
                                        string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);


                                    }
                                }
                            }

                        }

                        ModelState.Clear();
                        //--For Showing Message---------//
                        ViewData["resultUpdate"] = result;
                        // return RedirectToAction("N3Formgrid", "RegistrationPortal");
                    }
                }
            }
            catch (Exception ex1)
            {
                oErrorLog.WriteErrorLog(ex1.ToString(), Path.GetFileName(Request.Path));

            }
            return View(rm);
        }

        public ActionResult N3FormDelete(string id)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }

            //if (Session["Class"].ToString() == "3" && (Session["SchType"].ToString()  == "ASS" || Session["SchType"].ToString()  == "MRS"))
            //{
            //    return RedirectToAction("Index", "Home");
            //}
            if (id == null)
            {
                return RedirectToAction("N3Formgrid", "RegistrationPortal");
            }
            string formname = "N3";
            string schlDist = null;
            DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
            if (schlDistds.Tables[0].Rows.Count > 0)
            {
                schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
            }
            DataSet ds = objDB.SearchStudentGetByData(id, formname);
            //DataSet ds = objDB.SearchStudentGetByData(id);
            string dist = ds.Tables[0].Rows[0]["District"].ToString();
            string imgPhoto = ds.Tables[0].Rows[0]["std_Photo"].ToString();
            string imgSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
            string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();

            string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
            string Imptblname = ds.Tables[0].Rows[0]["Imptblname"].ToString();
            string oldid = ds.Tables[0].Rows[0]["oldid"].ToString();

            string result = objDB.DeleteFromDataN3(id, oldid, oldyear, Imptblname); // passing Value to DBClass from model

            //--------Photo Delete------
            RegistrationModels RM = new RegistrationModels();
            var fileDesti = "";
            var fileDestiPic = "";
            //if (Session["Session"] != null)
            //{
            //    if (Session["Session"].ToString() == "2023-2024")
            //    {
            //        // var pathPhoto = "D:\\LatestPSEBONLINE - 2018 - 12042017\\PSEBONLINE\\PSEBONLINE\\Upload\\upload2018\\N1\\165\\Photo\\N1165100003P.jpg";
            //        var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), imgPhoto);
            //        //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

            //        if (System.IO.File.Exists(pathPhoto))
            //        {
            //            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"));
            //            if (!Directory.Exists(FilepathExist))
            //            {
            //                Directory.CreateDirectory(FilepathExist);
            //            }

            //            //fileDesti = "../StdImages/DeletedPic/" + imgName;
            //            fileDestiPic = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"), imgPhoto);
            //            System.IO.File.Move(pathPhoto, fileDestiPic);
            //            System.IO.File.Delete(pathPhoto);

            //        }
            //        var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), imgSign);
            //        //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
            //        if (System.IO.File.Exists(pathSIGN))
            //        {
            //            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"));
            //            if (!Directory.Exists(FilepathExist))
            //            {
            //                Directory.CreateDirectory(FilepathExist);
            //            }
            //            //fileDesti = "../StdImages/DeletedPic/" + imgName;
            //            fileDesti = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"), imgSign);
            //            System.IO.File.Move(pathSIGN, fileDesti);
            //            System.IO.File.Delete(pathSIGN);

            //        }
            //        //------------End photo Delete------
            //    }
            //}

            TempData["resultDelete"] = result; // for dislaying message after saving storing output.            
            return RedirectToAction("N3Formgrid", "RegistrationPortal");
        }

        #endregion N3 Form Start

        //-----------------------------------Old result Data-----------------------



        #region E1 Starts
        //----------------------------------E1 Starts--------------------
        public JsonResult GetE1Year(string s) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            List<SelectListItem> yearlist = objCommon.GetSessionYear(); // passing Value to DBClass from model   
                                                                        // List<SelectListItem> yearlist1 = objCommon.GetSessionYear();
            if (s.ToUpper().Contains("FAILED"))
            {
                yearlist.RemoveRange(3, 45);
                yearlist.Remove(yearlist[0]);
                //yearlist.Remove(yearlist[0]);
                // yearlist.ToList().Where(s => Convert.ToInt32(s.Value) >= 2013);
                ViewBag.SessionYearListPrev = yearlist;
            }
            else
            {
                //yearlist.RemoveRange(0, 1);
                ViewBag.SessionYearListPrev = yearlist;
            }
            return Json(yearlist);
        }
        public JsonResult GetE1YearMatric(string s) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            List<SelectListItem> yearlist = objCommon.GetSessionYear(); // passing Value to DBClass from model   
            List<SelectListItem> yearlist1 = objCommon.GetSessionYear();
            if (s.ToUpper().Contains("FAILED"))
            {
                yearlist.Remove(yearlist[0]);
                ViewBag.SessionYearListPrev = yearlist;
            }
            else
            {
                yearlist.RemoveRange(0, 1);
                ViewBag.SessionYearListPrev = yearlist;
            }
            return Json(yearlist);
        }

        public JsonResult GetMatric_NSQF_AdditionSubList(string val, string isNSQF) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            if (val == "2")// fr seniorn 11th
            {

                DataSet nsresult = objDB.SelectS11("");
                nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in nsresult.Tables[0].Rows)
                {
                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
                }
            }
            else if (val == "10")// for matric and ninth
            {

                DataSet nsresult = objDB.SelectMatricNsqfSub("");
                nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in nsresult.Tables[0].Rows)
                {
                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
            }
            //
            return Json(nsfqList);
        }



        public JsonResult GetNSQFSUB6_ByNSQF_Pattern(string val) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            if (val == "2")// fr seniorn 11th
            {

                DataSet nsresult = objDB.SelectS11("");
                nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in nsresult.Tables[0].Rows)
                {
                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
                }
            }
            else if (val == "10")// for matric and ninth
            {

                DataSet nsresult = objDB.SelectMatricNsqfSub("");
                nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });

                foreach (System.Data.DataRow dr in nsresult.Tables[0].Rows)
                {
                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
            }
            //
            return Json(nsfqList);
        }


        public ActionResult E1Form()
        {
             return RedirectToAction("Portal"); //baecause E1 form are off now by harpal ji
            RegistrationModels rm = new RegistrationModels();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());
                //int res = 0;
                //objDB.CheckDateE1E2T1T2(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;

                //int res = 0;
                //objDB.CheckDateE1E2T1T2(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;


                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                    else
                    {
                        DataSet result1 = objDB.schooltypes(Session["SCHL"].ToString());
                        if (result1.Tables[3].Rows.Count > 0)
                        {
                            if (result1.Tables[3].Rows[0]["reclock11th"].ToString() == "0")
                            {
                                return RedirectToAction("Index", "Home");
                            }
                        }
                    }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }

            if (Session["Session"].ToString() == "2016-2017")
            {
                ViewData["NSQFSCHOOL"] = "0";
            }
            else
            {
                //-----------------------------------------------------Nsqf -------------------------
                string ses = Session["Session"].ToString();
                string schlcode = Session["SCHL"].ToString();
                DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                {
                    ViewData["NSQFSCHOOL"] = "1";
                }
                else
                {
                    ViewData["NSQFSCHOOL"] = "0";
                }
                string nsqfsub = null;
                DataSet nsresult = objDB.SelectS11(nsqfsub); // passing Value to DBClass from model
                ViewBag.nsfq = nsresult.Tables[0];
                List<SelectListItem> nsfqList = new List<SelectListItem>();
                //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                {
                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
                }
                ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");


                //-----------------------------------------------------End Nsqf -------------------------
            }

            //if (Session["Class"].ToString() == "2" && (Session["SchType"].ToString() == "ASS" || Session["SchType"].ToString() == "MRS"))
            //{
            //    return RedirectToAction("Index", "Home");
            //}
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();

            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
            ViewBag.MyBoard = objCommon.GetN2Board();
            ViewBag.MyMatricResult = objCommon.GetMatricResult();
            ViewBag.SectionList = objCommon.GetSection();
            ViewBag.Section = "0";

            ViewBag.SelectedItem = "";
            ViewBag.Mon = objCommon.GetMonth();
            ViewBag.SessionYearList = objCommon.GetSessionYear().Where(x => Convert.ToInt32(x.Value) <= 2022).ToList();
            ViewBag.MetricYearList = objCommon.GetSessionYear().Where(x => Convert.ToInt32(x.Value) <= 2022).ToList();

            @ViewBag.DA = objCommon.GetDA();
            ViewBag.MyDist = objCommon.GetDistE();
            List<SelectListItem> MyGroupList = objCommon.GroupName();
            // ViewBag.MyGroup = objCommon.GroupName();
            DataTable dtAssignSubject = objCommon.GetAssignSubjectBySchool(Session["SCHL"].ToString());
            if (dtAssignSubject != null && dtAssignSubject.Rows.Count > 0)
            {
                ViewBag.MyGroup = objCommon.GetSubjectsBySchool(dtAssignSubject, MyGroupList);
            }
            ViewBag.MyGroup = MyGroupList;

            string formname = "E1";
            string schlid = "";
            if (Session["SCHL"] != null)
            {
                schlid = Session["SCHL"].ToString();
            }
            else
            {
                return View(rm);
            }

            DataSet seleLastCan = objDB.SelectlastEntryCandidate(formname, schlid);
            // DataSet seleLastCan = objDB.SelectlastEntry_E1_E2_Candidate(formname);
            if (seleLastCan.Tables[0].Rows.Count > 0)
            {
                //rm.Board_Roll_Num, rm.Admission_Num,po.Candi_Name,po.Father_Name,po.Std_id
                //FROM regMasterRegular2016 rm, Personal_Info Po
                //WHERE po.Std_id = rm.Std_id and rm.std_id = (SELECT max(rm.std_id) FROM regMasterRegular2016 rm)
                @ViewBag.message = "1";
                @ViewBag.Board_Roll_Num = seleLastCan.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                @ViewBag.Admission_Num = seleLastCan.Tables[0].Rows[0]["Admission_Num"].ToString();
                @ViewBag.Candi_Name = seleLastCan.Tables[0].Rows[0]["Candi_Name"].ToString();
                @ViewBag.Father_Name = seleLastCan.Tables[0].Rows[0]["Father_Name"].ToString();
                @ViewBag.id = seleLastCan.Tables[0].Rows[0]["Std_id"].ToString();
                @ViewBag.lot = seleLastCan.Tables[0].Rows[0]["lot"].ToString();
                @ViewBag.Importfalg = seleLastCan.Tables[0].Rows[0]["importflag"].ToString();
            }
            else
            {
                @ViewBag.message = "Record Not Found";
            }


            return View(rm);
        }
        [HttpPost]
        public ActionResult E1Form(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern)
        {

            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            DataSet result1 = objDB.SelectDist(); // passing Value to DBClass from model
            ViewBag.MyDist = result1.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> items = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
            {
                items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
            }
            // ViewBag.MyDist = items;
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();

            ViewBag.MyDist = new SelectList(items, "Value", "Text", 047);
            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
            ViewBag.MyBoard = objCommon.GetN2Board();
            ViewBag.SectionList = objCommon.GetSection();
            ViewBag.MyMatricResult = objCommon.GetMatricResult();
            //int res = 0;
            //objDB.CheckDateE1E2T1T2(Session["SCHL"].ToString(), out res);
            //ViewBag.dsts = res;.
            if (Session["Session"].ToString() == "2023-2024")
            {
                //-----------------------------------------------------Nsqf -------------------------
                string ses = Session["Session"].ToString();
                string schlcode = Session["SCHL"].ToString();
                DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                {
                    ViewData["NSQFSCHOOL"] = "1";
                }
                else
                {
                    ViewData["NSQFSCHOOL"] = "0";
                }
                string nsqfsub = null;
                DataSet nsresult = objDB.SelectS11(nsqfsub); // passing Value to DBClass from model
                ViewBag.nsfq = nsresult.Tables[0];
                List<SelectListItem> nsfqList = new List<SelectListItem>();
                //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                {
                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
                }
                ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
                //-----------------------------------------------------End Nsqf -------------------------
            }


            string admdate = "", LateAdmDate = "", StartAdmDate = "";
            objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
            ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
            string session = null;
            string idno = null;
            string schl = null;
            if (Session["Session"] != null)
            {
                session = Session["Session"].ToString();
                idno = Session["IDNO"].ToString();
                schl = Session["SCHL"].ToString();
            }
            else
            {
                return RedirectToAction("Index", "Login");
            }

            //Check server side validation using data annotation
            if (ModelState.IsValid)
            {
                string dist = frm["MyDist"].ToString();
                string Tehsil = frm["MyTeh"].ToString();
                string formName = "E1";

                if (rm.file != null)
                {
                    stdPic = Path.GetFileName(rm.file.FileName);
                }
                else
                {
                    //Response.Write("<script>alert('Please Upload Photo')</script>");
                    //return View();

                }
                if (rm.std_Sign != null)
                {
                    stdSign = Path.GetFileName(rm.std_Sign.FileName);
                }
                else
                {
                    //Response.Write("<script>alert('Please Upload sign')</script>");
                    //return View();

                }

                if (Session["SCHOOLDIST"] == null)
                {
                    return RedirectToAction("Index", "Login");
                }
                string sldist = Session["SCHOOLDIST"].ToString();
                // date format (dd/mm/yyyy)
                rm.DOB = AbstractLayer.StaticDB.GetDateFormatDDMMYYYY(rm.DOB);
                //

                if (string.IsNullOrEmpty(PreNSQF))
                {
                    rm.NSQFPattern = "";
                }
                else if (PreNSQF == "NO")
                {
                    rm.NSQFPattern = "";
                    if (!string.IsNullOrEmpty(NSQFsubS6))
                    {
                        rm.NSQFPattern = "2";

                    }
                }
                else
                {
                    rm.NSQFPattern = NsqfPattern;

                    if (string.IsNullOrEmpty(rm.NSQFPattern) || string.IsNullOrEmpty(NSQFsubS6))
                    {
                        ViewData["resultUpdate"] = "NSQFPattern";
                    }

                }
                //rm.OTID = 5;
                rm.Imptblname = "NewEntry";
                string result = objDB.Ins_E_Form_Data(rm, frm, formName, session, idno, schl);
                string filepathtosave = "";
                if (result == "0" || result == null)
                {
                    //--------------Not saved
                    ViewData["result"] = 0;
                }
                else if (result == "-1")
                {
                    //-----alredy exist
                    ViewData["result"] = -1;
                }
                else if (result == "-3")
                {
                    //-----alredy exist
                    ViewData["result"] = -3;
                }
                else
                {
                    ViewData["result"] = 1;
                    //----Data Inserted Successfully
                    //dist = Session["SCHOOLDIST"].ToString();

                    if (Session["Session"] != null)
                    {
                        if (Session["Session"].ToString() == "2023-2024")
                        {
                            if (rm.file != null)
                            {
                                //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                                //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + sldist + "/Photo"), result + "P" + ".jpg");
                                //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + sldist + "/Photo"));
                                //if (!Directory.Exists(FilepathExist))
                                //{
                                //    Directory.CreateDirectory(FilepathExist);
                                //}
                                //rm.file.SaveAs(path);
                                string Orgfile = result + "P" + ".jpg";
                                using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                {
                                    using (var newMemoryStream = new MemoryStream())
                                    {
                                        var uploadRequest = new TransferUtilityUploadRequest
                                        {
                                            InputStream = rm.file.InputStream,
                                            Key = string.Format("allfiles/Upload2024/" + formName + "/" + sldist + "/Photo/{0}", Orgfile),
                                            BucketName = BUCKET_NAME,
                                            CannedACL = S3CannedACL.PublicRead
                                        };

                                        var fileTransferUtility = new TransferUtility(client);
                                        fileTransferUtility.Upload(uploadRequest);
                                    }
                                }


                                //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + sldist + "/Photo/" + result + "P" + ".jpg";
                                filepathtosave = "allfiles/Upload2024/" + formName + "/" + sldist + "/Photo/" + result + "P" + ".jpg";
                                ViewBag.ImageURL = filepathtosave;

                                string PhotoName = "allfiles/Upload2024/" + formName + "/" + sldist + "/Photo" + "/" + result + "P" + ".jpg";
                                string type = "P";
                                string IsNew = "YES";
                                string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                            }
                            if (rm.std_Sign != null)
                            {
                                //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + sldist + "/Sign"), result + "S" + ".jpg");
                                //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + sldist + "/Sign"));
                                //if (!Directory.Exists(FilepathExist))
                                //{
                                //    Directory.CreateDirectory(FilepathExist);
                                //}
                                //rm.std_Sign.SaveAs(path);
                                string Orgfile = result + "S" + ".jpg";
                                using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                {
                                    using (var newMemoryStream = new MemoryStream())
                                    {
                                        var uploadRequest = new TransferUtilityUploadRequest
                                        {
                                            InputStream = rm.std_Sign.InputStream,
                                            Key = string.Format("allfiles/Upload2024/" + formName + "/" + sldist + "/Sign/{0}", Orgfile),
                                            BucketName = BUCKET_NAME,
                                            CannedACL = S3CannedACL.PublicRead
                                        };

                                        var fileTransferUtility = new TransferUtility(client);
                                        fileTransferUtility.Upload(uploadRequest);
                                    }
                                }
                                //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + sldist + "/Sign/" + result + "S" + ".jpg";
                                filepathtosave = "allfiles/Upload2024/" + formName + "/" + sldist + "/Sign/" + result + "S" + ".jpg";
                                ViewBag.ImageURL = filepathtosave;


                                string PhotoName = "allfiles/Upload2024/" + formName + "/" + sldist + "/Sign" + "/" + result + "S" + ".jpg";
                                string type = "S";
                                string IsNew = "YES";
                                string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                            }
                        }

                    }


                    //ViewBag.Message = "File has been uploaded successfully";
                    ModelState.Clear();

                    //--For Showing Message---------//
                    ViewData["result"] = 1;
                }

            }

            return E1Form();
        }




        [SessionCheckFilter]
        public ActionResult E1Formgrid(RegistrationSearchModelList registrationSearchModel)
        {
            string schl = Session["SCHL"].ToString();
            int status = new AbstractLayer.RegistrationDB().CheckSchoolAssignForm(2, schl);
            if (status <= 0)
            {
                return RedirectToAction("Index", "Home");
            }
            else
            {
                DataSet result1 = new AbstractLayer.RegistrationDB().schooltypes(schl);
                if (result1.Tables[3].Rows.Count > 0)
                {
                    if (result1.Tables[3].Rows[0]["reclock11th"].ToString() == "0")
                    {
                        return RedirectToAction("Index", "Home");
                    }
                }
            }
            DataSet dsOut = new DataSet();
            registrationSearchModel.RegistrationSearchModel = AbstractLayer.RegistrationDB.GetStudentRecordsSearchPM("E1", schl, out dsOut);
            registrationSearchModel.StoreAllData = dsOut;
            return View(registrationSearchModel);
        }


        public ActionResult E1FormModify(string id)
        {
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();

            ViewBag.StaffList = new AbstractLayer.RegistrationDB().GetStaffListBySCHL(0, Session["SCHL"].ToString(), 0);
            ViewBag.YesNoListCP = new AbstractLayer.DBClass().GetYesNo().ToList();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());

                //int res = 0;
                //objDB.CheckDateE1E2T1T2(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                    else
                    {
                        DataSet result1 = objDB.schooltypes(Session["SCHL"].ToString());
                        if (result1.Tables[3].Rows.Count > 0)
                        {
                            if (result1.Tables[3].Rows[0]["reclock11th"].ToString() == "0")
                            {
                                return RedirectToAction("Index", "Home");
                            }
                        }
                    }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }

            if (Session["Session"].ToString() == "2016-2017")
            {
                ViewData["NSQFSCHOOL"] = "0";
            }
            else
            {
                //-----------------------------------------------------Nsqf -------------------------
                string ses = Session["Session"].ToString();
                string schlcode = Session["SCHL"].ToString();
                DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                {
                    ViewData["NSQFSCHOOL"] = "1";
                }
                else
                {
                    ViewData["NSQFSCHOOL"] = "0";
                }
                string nsqfsub = null;
                DataSet nsresult = objDB.SelectS11(nsqfsub); // passing Value to DBClass from model
                ViewBag.nsfq = nsresult.Tables[0];
                List<SelectListItem> nsfqList = new List<SelectListItem>();
                //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                {
                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
                }
                nsfqList.Add(new SelectListItem { Text = "SECURITY", Value = "N05" });
                ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");


                //-----------------------------------------------------End Nsqf -------------------------
            }
            //if (Session["Class"].ToString() == "2" && (Session["SchType"].ToString() == "ASS" || Session["SchType"].ToString() == "MRS"))
            //{
            //    return RedirectToAction("Index", "Home");
            //}
            if (id == null)
            {
                return RedirectToAction("E1Formgrid", "RegistrationPortal");
            }
            string formname = "E1";
            if (id != null)
            {
                try
                {
                    id = encrypt.QueryStringModule.Decrypt(id);
                    DataSet ds = objDB.SearchStudentGetByData_E(id, formname);
                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        return RedirectToAction("E1Formgrid", "RegistrationPortal");
                    }
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        rm.old_std_Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                        rm.old_std_sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                        rm.NSQFPattern = ds.Tables[0].Rows[0]["NSQFPattern"].ToString();
                        rm.IsImportedStudent = ds.Tables[0].Rows[0]["IsImportedStudent"].ToString();
                        rm.IsUnlockForm = ds.Tables[0].Rows[0]["IsUnlockForm"].ToString();

                        if (Session["Session"].ToString() == "2023-2024")
                        {
                            //@ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"]  + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            //@ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"]  + ds.Tables[0].Rows[0]["std_Sign"].ToString();

                            if (ds.Tables[0].Rows[0]["std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["std_Photo"].ToString() != "")
                            {
                                //  not imported
                                rm.checkCategory = "";
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            }
                            else
                            {
                                string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                                if (oldyear.ToString() == "2023")
                                {
                                    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                                    {
                                        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                        {

                                            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                                        }
                                        else
                                        {
                                            //@ViewBag.Photo = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                        }
                                    }
                                    else
                                    {
                                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                                    }
                                }
                                else if (oldyear.ToString() == "2022")
                                {
                                    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                                    {
                                        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                        {

                                            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                                        }
                                        else
                                        {
                                            //@ViewBag.Photo = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                        }
                                    }
                                    else
                                    {
                                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                                    }
                                }
                                else if (oldyear.ToString() == "2021")
                                {
                                    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                                    {
                                        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                        {

                                            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                                        }
                                        else
                                        {
                                            //@ViewBag.Photo = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                        }
                                    }
                                    else
                                    {
                                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                                    }
                                }
                                else
                                {
                                    @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                                }
                            }
                            //-------------------------------------------For Sign---------------------------

                            if (ds.Tables[0].Rows[0]["std_Sign"].ToString() != null && ds.Tables[0].Rows[0]["std_Sign"].ToString() != "")
                            {
                                //  not imported

                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                            }
                            else
                            {
                                string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                                if (oldyear.ToString() == "2023")
                                {
                                    if (ds.Tables[0].Rows[0]["std_Sign"].ToString() == null || ds.Tables[0].Rows[0]["std_Sign"].ToString() == "")
                                    {
                                        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                        {
                                            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                        }
                                        else
                                        {
                                            //@ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                                        }
                                    }
                                    else
                                    {
                                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                                    }
                                }
                                else if (oldyear.ToString() == "2022")
                                {
                                    if (ds.Tables[0].Rows[0]["std_Sign"].ToString() == null || ds.Tables[0].Rows[0]["std_Sign"].ToString() == "")
                                    {
                                        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                        {
                                            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                        }
                                        else
                                        {
                                            //@ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                                        }
                                    }
                                    else
                                    {
                                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                                    }
                                }
                                else if (oldyear.ToString() == "2021")
                                {
                                    if (ds.Tables[0].Rows[0]["std_Sign"].ToString() == null || ds.Tables[0].Rows[0]["std_Sign"].ToString() == "")
                                    {
                                        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                        {
                                            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                        }
                                        else
                                        {
                                            //@ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                                        }
                                    }
                                    else
                                    {
                                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                                    }
                                }
                                else
                                {
                                    @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                                }
                            }

                        }

                        ViewBag.lot = Convert.ToInt32(ds.Tables[0].Rows[0]["lot"].ToString());

                        rm.Std_id = Convert.ToInt32(ds.Tables[0].Rows[0]["Std_id"].ToString());

                        rm.Category = ds.Tables[0].Rows[0]["Category"].ToString();
                        if (rm.checkCategory == "R")
                        {
                            ViewBag.catg = objCommon.GetECategories();

                        }
                        else
                        {
                            ViewBag.catg = objCommon.GetE2andE1Category();
                        }



                        rm.Board = ViewBag.MyBoard2 = ds.Tables[0].Rows[0]["Board"].ToString();
                        ViewBag.MyBoard = objCommon.GetBoard();

                        rm.Other_Board = ds.Tables[0].Rows[0]["Other_Board"].ToString();
                        rm.Board_Roll_Num = ds.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                        rm.Prev_School_Name = ds.Tables[0].Rows[0]["Prev_School_NameNew"].ToString();

                        rm.Month = ds.Tables[0].Rows[0]["Month"].ToString();
                        //ViewBag.Mon = objCommon.GetMonth();

                        List<SelectListItem> monthlist = objCommon.GetMonth();
                        if (ds.Tables[0].Rows[0]["oldid"].ToString() == null || ds.Tables[0].Rows[0]["oldid"].ToString() == "")
                        {
                            ViewBag.Mon = monthlist;
                        }
                        else
                        {
                            // monthlist.RemoveRange(1, 2); 
                            //monthlist.Remove(monthlist[0]);
                            //monthlist.Remove(monthlist[0]);
                            ViewBag.Mon = monthlist;
                        }

                        rm.Year = ds.Tables[0].Rows[0]["Year"].ToString();
                        // AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                        // ViewBag.SessionYearList = objCommon.GetSessionYear();
                        List<SelectListItem> yearlist = objCommon.GetSessionYear();
                        if (ds.Tables[0].Rows[0]["oldid"].ToString() == null || ds.Tables[0].Rows[0]["oldid"].ToString() == "")
                        {

                            ViewBag.SessionYearListPrev = ViewBag.SessionYearList = objCommon.GetSessionYear().Where(x => Convert.ToInt32(x.Value) <= 2022).ToList();

                        }
                        else
                        {
                            ViewBag.SessionYearListPrev = ViewBag.SessionYearList = objCommon.GetSessionYear();
                        }



                        // ViewBag.MetricYearList = objCommon.GetSessionYear().Where(x => Convert.ToInt32(x.Value) <= 2015).ToList();

                        rm.MyGroup = ds.Tables[0].Rows[0]["Group_name"].ToString().Trim();
                        //  ViewBag.MyGroup1 = objCommon.GroupName();
                        List<SelectListItem> MyGroupList = objCommon.GroupName();
                        DataTable dtAssignSubject = objCommon.GetAssignSubjectBySchool(Session["SCHL"].ToString());
                        if (dtAssignSubject != null && dtAssignSubject.Rows.Count > 0)
                        {
                            ViewBag.MyGroup1 = objCommon.GetSubjectsBySchool(dtAssignSubject, MyGroupList);
                        }


                        //---------------------------tEST cASE-----------

                        rm.AWRegisterNo = ds.Tables[0].Rows[0]["AWRegisterNo"].ToString();
                        rm.Admission_Num = ds.Tables[0].Rows[0]["Admission_Num"].ToString();
                        rm.requestID = ds.Tables[0].Rows[0]["requestID"].ToString();
                        if (rm.requestID != "" && rm.requestID != "0")
                        {
                            rm.IsLateAdm = true;
                            ViewBag.admdate = ds.Tables[0].Rows[0]["ApprovalUpto"].ToString(); ;
                        }
                        else
                        {
                            rm.IsLateAdm = false;
                        }
                        rm.Admission_Date = ds.Tables[0].Rows[0]["Admission_Date"].ToString();
                        rm.Class_Roll_Num_Section = ds.Tables[0].Rows[0]["Class_Roll_Num_Section"].ToString();
                        if (ds.Tables[0].Rows[0]["Section"].ToString() != "")
                        {
                            rm.Section = Convert.ToChar(ds.Tables[0].Rows[0]["Section"].ToString());
                        }

                        //--------------------------------eND--------------

                        ViewBag.SectionList = objCommon.GetSection();
                        rm.Candi_Name = ds.Tables[0].Rows[0]["Candi_Name"].ToString();
                        rm.Candi_Name_P = ds.Tables[0].Rows[0]["Candi_Name_P"].ToString();
                        rm.Father_Name = ds.Tables[0].Rows[0]["Father_Name"].ToString();
                        rm.Father_Name_P = ds.Tables[0].Rows[0]["Father_Name_P"].ToString();
                        rm.Mother_Name = ds.Tables[0].Rows[0]["Mother_Name"].ToString();
                        rm.Mother_Name_P = ds.Tables[0].Rows[0]["Mother_Name_P"].ToString();

                        ViewBag.CasteSelected = rm.Caste = ds.Tables[0].Rows[0]["Caste"].ToString();
                        ViewBag.Caste = objCommon.GetCaste();
                        if (ds.Tables[0].Rows[0]["Gender"].ToString() == "F")
                        {
                            rm.Gender = "Female";
                        }
                        else if (ds.Tables[0].Rows[0]["Gender"].ToString() == "M")
                        {
                            rm.Gender = "Male";
                        }
                        else
                        {
                            rm.Gender = ds.Tables[0].Rows[0]["Gender"].ToString();
                        }

                        // rm.Gender = ds.Tables[0].Rows[0]["Gender"].ToString();

                        rm.Differently_Abled = ds.Tables[0].Rows[0]["Differently_Abled"].ToString();
                        ViewBag.DA = objCommon.GetDA();
                        rm.Religion = ds.Tables[0].Rows[0]["Religion"].ToString();
                        ViewBag.RE = objCommon.GetReligion();

                        rm.DOB = ds.Tables[0].Rows[0]["DOB"].ToString();
                        if (!string.IsNullOrEmpty(rm.DOB))
                        {
                            rm.DOB = AbstractLayer.StaticDB.DateInFormat(rm.DOB) == true ? rm.DOB : "";
                        }
                        else { rm.DOB = ""; }
                        rm.Mobile = ds.Tables[0].Rows[0]["Mobile"].ToString();
                        rm.Belongs_BPL = ds.Tables[0].Rows[0]["Belongs_BPL"].ToString();
                        rm.E_punjab_Std_id = ds.Tables[0].Rows[0]["E_punjab_Std_id"].ToString();
                        if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 28)
                        {
                            rm.AadharEnroll = "Enrollmemt";
                        }
                        else if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 12)
                        {
                            rm.AadharEnroll = "Aadhar";
                        }
                        else
                        {
                            rm.AadharEnroll = "N.A.";
                        }
                        rm.Aadhar_num = ds.Tables[0].Rows[0]["Aadhar_num"].ToString();
                        rm.Address = ds.Tables[0].Rows[0]["Address"].ToString();
                        rm.LandMark = ds.Tables[0].Rows[0]["LandMark"].ToString();
                        rm.Block = ds.Tables[0].Rows[0]["Block"].ToString();
                        string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();


                        rm.MyDistrict = ds.Tables[0].Rows[0]["District"].ToString();

                        ViewBag.MyDist = objCommon.GetDistE();
                        if (ds.Tables[0].Rows[0]["Tehsil"].ToString() != "")
                        {
                            rm.Tehsil = Convert.ToInt32(ds.Tables[0].Rows[0]["Tehsil"].ToString());
                        }
                        int dist = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString());
                        DataSet result1 = objDB.SelectAllTehsil(dist);
                        ViewBag.MyTeh = result1.Tables[0];
                        List<SelectListItem> TehList = new List<SelectListItem>();
                        foreach (System.Data.DataRow dr in ViewBag.MyTeh.Rows)
                        {
                            TehList.Add(new SelectListItem { Text = @dr["TEHSIL"].ToString(), Value = @dr["TCODE"].ToString() });
                        }
                        ViewBag.MyTeh = TehList;

                        rm.PinCode = ds.Tables[0].Rows[0]["PinCode"].ToString();
                        if (ds.Tables[0].Rows[0]["IsPrevSchoolSelf"].ToString() != "")
                        {
                            int IsPrevSchoolSelf = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPrevSchoolSelf"].ToString());
                            if (IsPrevSchoolSelf == 1)
                            {
                                rm.IsPrevSchoolSelf = true;
                            }
                            else
                            {
                                rm.IsPrevSchoolSelf = false;
                            }
                        }

                        if (ds.Tables[0].Rows[0]["IsPSEBRegNum"].ToString() != "")
                        {
                            int IsPSEBRegNum = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPSEBRegNum"].ToString());
                            if (IsPSEBRegNum == 1)
                            {
                                rm.IsPSEBRegNum = true;
                                rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                            }
                            else
                            {
                                rm.IsPSEBRegNum = false;
                                rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                            }
                        }
                        if (ds.Tables[0].Rows[0]["Provisional"].ToString() != "")
                        {
                            int IsPro = Convert.ToInt32(ds.Tables[0].Rows[0]["Provisional"].ToString());
                            if (IsPro == 1)
                            {
                                rm.Provisional = true;
                            }
                            else
                            {
                                rm.Provisional = false;
                            }
                        }
                        // rm.fname= ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        // @ViewBag.ImageURL = "../../StdImages/Upload/" + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        //rm.PhotoString= "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["std_Photo"].ToString();

                        rm.MetricYear = ds.Tables[0].Rows[0]["MetricYear"].ToString();
                        rm.MetricMonth = ds.Tables[0].Rows[0]["MetricMonth"].ToString();
                        rm.Metric_Roll_Num = ds.Tables[0].Rows[0]["MetricRollNum"].ToString();
                        rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();

                        if (Session["Session"].ToString() == "2023-2024")
                        {
                            rm.MatricResult = ds.Tables[0].Rows[0]["MatricResult"].ToString();
                            ViewBag.MyMatricResult = objCommon.GetMatricResult();
                            rm.DP = ds.Tables[0].Rows[0]["disabilityPercent"].ToString();
                            rm.NSQF = ds.Tables[0].Rows[0]["NSQF_flag"].ToString();
                            rm.MetricBoard = ds.Tables[0].Rows[0]["MatricBoard"].ToString();
                            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
                            rm.CandiMedium = ds.Tables[0].Rows[0]["CandStudyMedium"].ToString();
                            rm.PreNSQF = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();

                            //-----------------------------For NSQF SUBJECTS----------------
                            string sid = id;
                            DataSet isCHkNSQF = objDB.CHkNSQFStudents(sid);

                            if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
                            {
                                ViewData["NSQFSTUDENT"] = "1";
                                if (rm.NsqfsubS6 == null)
                                {
                                    rm.NsqfsubS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                                }
                                DataSet nsTextresult = objDB.GetNSQFVIEWSUBJECT11TH(rm.NsqfsubS6, rm.PreNSQF);
                                List<SelectListItem> nssub6 = new List<SelectListItem>();
                                if (rm.PreNSQF == "NO")
                                {
                                    ViewBag.nsqfcatg = ViewBag.nsfqList;
                                }
                                else
                                {
                                    if (nsTextresult.Tables[0].Rows.Count > 0)
                                    {
                                        nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                                        nssub6.Add(new SelectListItem { Text = nsTextresult.Tables[0].Rows[0]["Name_ENG"].ToString(), Value = rm.NsqfsubS6 });
                                        ViewBag.nsqfcatg = nssub6;
                                    }
                                    else
                                    {
                                        nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                                        ViewBag.nsqfcatg = nssub6;
                                    }

                                }

                            }
                            else
                            {
                                //List<SelectListItem> nssub6 = new List<SelectListItem>();
                                //nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                                //ViewBag.nsqfcatg = nssub6;
                                ViewBag.nsqfcatg = ViewBag.nsfqList;

                            }


                            //--------------------------------End NSQF SUBJECTS-------------
                        }


                        if (ds.Tables[0].Rows[0]["oldid"].ToString() == null || ds.Tables[0].Rows[0]["oldid"].ToString() == "")
                        {
                            //  not imported
                            rm.IsImported = 0;
                        }
                        else
                        {
                            rm.IsImported = 1;
                            //rm.Board_Roll_Num = ds.Tables[0].Rows[0]["ORoll"].ToString();
                        }
                        //  rm.std_Sign = "";


                        #region check photo sign exists

                        if (!string.IsNullOrEmpty(rm.old_std_Photo))
                        {
                            string CandPhotoTempPath = rm.old_std_Photo;
                            if (!string.IsNullOrEmpty(CandPhotoTempPath))
                            {
                                CandPhotoTempPath = CandPhotoTempPath.Replace("https://registration2022.pseb.ac.in/upload/", "");
                                CandPhotoTempPath = CandPhotoTempPath.Replace("https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/", "");
                            }
                            string PhotoExist = Path.Combine(Server.MapPath("~/Upload/" + CandPhotoTempPath));
                            if (!System.IO.File.Exists(PhotoExist))
                            {
                                //Photo Not Exist
                                rm.PhotoExist = "";
                            }
                            else { rm.PhotoExist = PhotoExist; }
                        }


                        if (!string.IsNullOrEmpty(rm.old_std_sign))
                        {
                            string CandSignTempPath = rm.old_std_sign;
                            if (!string.IsNullOrEmpty(CandSignTempPath))
                            {
                                CandSignTempPath = CandSignTempPath.Replace("https://registration2022.pseb.ac.in/upload/", "");
                                CandSignTempPath = CandSignTempPath.Replace("https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/", "");
                            }
                            string SignExist = Path.Combine(Server.MapPath("~/Upload/" + CandSignTempPath));
                            if (!System.IO.File.Exists(SignExist))
                            {
                                //Photo Not Exist
                                rm.SignExist = "";
                            }
                            else { rm.SignExist = SignExist; }
                        }


                        #endregion

                    }
                    else
                    {
                        return RedirectToAction("E1Formgrid", "RegistrationPortal");
                    }
                }
                catch (Exception ex)
                {
                    return RedirectToAction("E1Formgrid", "RegistrationPortal");
                }

            }
            //return View(asm);
            return View(rm);
        }
        [HttpPost]
        public ActionResult E1FormModify(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern)
        {
            try
            {

                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();

                ViewBag.StaffList = new AbstractLayer.RegistrationDB().GetStaffListBySCHL(0, Session["SCHL"].ToString(), 0);
                //ViewBag.YesNoList = new AbstractLayer.DBClass().GetYesNo().Where(s=>s.Value == "Y").ToList();
                ViewBag.YesNoListCP = new AbstractLayer.DBClass().GetYesNo().ToList();
                if (rm.Board == null)
                {
                    rm.Board = "BOARD";
                }



                if (rm.Prev_School_Name == null)
                {
                    //   rm.Prev_School_Name = frm[""].ToString();
                }
                List<SelectListItem> yearlist = objCommon.GetSessionYear();
                ViewBag.SessionYearListPrev = yearlist;
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                ViewBag.catg = objCommon.GetECategories();
                //ViewBag.MyBoard = objCommon.GetN2Board();
                ViewBag.MyBoard = objCommon.GetBoard();
                ViewBag.MyMatricResult = objCommon.GetMatricResult();
                ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
                ViewBag.MyGroup1 = objCommon.GroupName();
                //int res = 0;
                //objDB.CheckDateE1E2T1T2(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
                ViewBag.Mon = objCommon.GetMonth();

                // AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                ViewBag.SessionYearList = objCommon.GetSessionYear();

                ViewBag.Caste = objCommon.GetCaste();

                ViewBag.DA = objCommon.GetDA();

                ViewBag.RE = objCommon.GetReligion();
                ViewBag.MyDist = objCommon.GetDistE();


                ViewBag.SectionList = objCommon.GetSection();
                ViewBag.MyTeh = objCommon.GetAllTehsil();
                string dist = rm.MyDistrict;
                if (Session["Session"].ToString() == "2023-2024")
                {
                    //-----------------------------------------------------Nsqf -------------------------
                    string ses = Session["Session"].ToString();
                    string schlcode = Session["SCHL"].ToString();
                    DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                    if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                    {
                        ViewData["NSQFSCHOOL"] = "1";
                    }
                    else
                    {
                        ViewData["NSQFSCHOOL"] = "0";
                    }
                    string nsqfsub = null;
                    DataSet nsresult = objDB.SelectS11(nsqfsub); // passing Value to DBClass from model
                    ViewBag.nsfq = nsresult.Tables[0];
                    List<SelectListItem> nsfqList = new List<SelectListItem>();
                    //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                    nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                    foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                    {
                        nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
                    }
                    ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");

                    ViewBag.nsqfcatg = new SelectList(nsfqList, "Value", "Text");
                    //-----------------------------------------------------End Nsqf -------------------------
                }
                else
                {
                    ViewData["NSQFSCHOOL"] = "0";
                }


                if (ModelState.IsValid)
                {
                    // AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                    string id = rm.Std_id.ToString();
                    string formname = "E1";
                    DataSet ds = objDB.SearchStudentGetByData_E(id, formname);
                    //DataSet ds = objDB.SearchStudentGetByData(id);
                    string distOld = "";
                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        //DataSet ds = objDB.SearchStudentGetByData(id);
                        distOld = ds.Tables[0].Rows[0]["District"].ToString();
                        rm.MyDistrict = distOld;
                    }
                    else
                    {
                        distOld = rm.MyDistrict;
                    }
                    //string stdPic = null;
                    string formName = "E1";
                    //if (frm["file"].ToString() != "")
                    if (rm.file != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdPic = Path.GetFileName(rm.file.FileName);

                    }
                    else
                    {

                        stdPic = ds.Tables[0].Rows[0]["std_Photo"].ToString();

                    }
                    if (rm.std_Sign != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);

                    }
                    else
                    {

                        stdSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }
                    //var stdPic = Path.GetFileName(rm.file.FileName);
                    //var stdSign = Path.GetFileName(rm.std_Sign.FileName);

                    //-------------------Std PHOTO and Sign----------------

                    #region Photo and Sign
                    string filePath = "";
                    string filePathSign = "";
                    string Upload = System.Configuration.ConfigurationManager.AppSettings["Upload"];
                    // string UploadView = System.Configuration.ConfigurationManager.AppSettings["UploadView"];

                    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["std_Photo"].ToString() != "")
                    {
                        //  not imported
                        rm.checkCategory = "";
                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    }
                    else
                    {
                        @ViewBag.Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                        //string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                        //if (oldyear.ToString() == "2022")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                        //        {

                        //            @ViewBag.Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                        //            filePath = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                        //            // filePath =  UploadView.ToString() +  "\upload2022\ + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        //    }
                        //}
                        //else if (oldyear.ToString() == "2021")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                        //        {

                        //            @ViewBag.Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                        //            filePath = @"C:\ClusterStorage\Volume1\upload\upload2020\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2020/", "");
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        //    }
                        //}
                        //else if (oldyear.ToString() == "2020")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                        //        {

                        //            @ViewBag.Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                        //            filePath = @"C:\ClusterStorage\Volume1\upload\upload2019\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2019", "");

                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        //    }
                        //}
                        //else
                        //{
                        //    @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        //}
                    }
                    //---------------------------------------------------------For Sign------------------------------------------

                    if (ds.Tables[0].Rows[0]["std_sign"].ToString() != null && ds.Tables[0].Rows[0]["std_sign"].ToString() != "")
                    {
                        //  not imported
                        rm.checkCategory = "";
                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }
                    else
                    {
                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();


                        //string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                        //if (oldyear.ToString() == "2022")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                        //        {
                        //            @ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/upload2022/" + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                        //            filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                        //    }
                        //}
                        //else if (oldyear.ToString() == "2021")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                        //        {

                        //            @ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/upload2020/" + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                        //            filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2020\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2020/", "");
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                        //    }
                        //}
                        //else if (oldyear.ToString() == "2020")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                        //        {
                        //            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                        //            filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2019\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2019/", "");
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                        //    }
                        //}

                        //else
                        //{
                        //    @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                        //}
                    }

                    #endregion

                    if (Session["SCHOOLDIST"] == null)
                    {
                        return RedirectToAction("Index", "Login");
                    }
                    string sldist = Session["SCHOOLDIST"].ToString();
                    rm.IsImportedStudent = ds.Tables[0].Rows[0]["IsImportedStudent"].ToString();


                    // Change for E1 Form
                    if (ViewData["NSQFSCHOOL"].ToString() == "1")
                    {
                        if (rm.MyGroup != "HUMANITIES")
                        { rm.NSQFPattern = ""; rm.NsqfsubS6 = ""; }
                        else
                        {
                            if (string.IsNullOrEmpty(PreNSQF))
                            {
                                rm.NSQFPattern = "";
                            }
                            else if (PreNSQF == "NO")
                            {
                                rm.NSQFPattern = "2";
                                if (string.IsNullOrEmpty(NSQFsubS6))
                                {
                                    rm.NsqfsubS6 = "NO";
                                }
                            }
                            else
                            {
                                rm.NSQFPattern = NsqfPattern;
                                if (string.IsNullOrEmpty(rm.NSQFPattern) || string.IsNullOrEmpty(NSQFsubS6))
                                {
                                    ViewData["resultUpdate"] = "NSQFPattern";
                                }

                            }
                        }
                    }



                    if (!string.IsNullOrEmpty(rm.DOB))
                    {
                        rm.DOB = AbstractLayer.StaticDB.DateInFormat(rm.DOB) == true ? rm.DOB : "";
                    }
                    else { rm.DOB = ""; }
                    string result = objDB.Update_E_Data(rm, frm, formName, id, stdPic, stdSign);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not updated
                        ViewData["resultUpdate"] = 0;
                    }
                    else if (result == "-1")
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = -1;
                    }
                    else if (result == "-3")
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = -3;
                    }
                    else
                    {
                        ViewData["resultUpdate"] = result;
                        //  distOld = Session["SCHOOLDIST"].ToString();
                        if (Session["Session"].ToString() == "2023-2024")
                        {
                            //-----------------------------------Session "2023-2024"------------
                            if (rm.file != null)
                            {
                                //var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + sldist + "/Photo"), result + "P" + ".jpg");
                                //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + sldist + "/Photo"));
                                //if (!Directory.Exists(FilepathExist))
                                //{
                                //    Directory.CreateDirectory(FilepathExist);
                                //}
                                //rm.file.SaveAs(path);
                                string Orgfile = result + "P" + ".jpg";
                                using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                {
                                    using (var newMemoryStream = new MemoryStream())
                                    {
                                        var uploadRequest = new TransferUtilityUploadRequest
                                        {
                                            InputStream = rm.file.InputStream,
                                            Key = string.Format("allfiles/Upload2024/" + formName + "/" + sldist + "/Photo/{0}", Orgfile),
                                            BucketName = BUCKET_NAME,
                                            CannedACL = S3CannedACL.PublicRead
                                        };

                                        var fileTransferUtility = new TransferUtility(client);
                                        fileTransferUtility.Upload(uploadRequest);
                                    }
                                }

                                //filepathtosave = "../Upload/Upload2024/" + formName + "/" + sldist + "/Photo/" + result + "P" + ".jpg";
                                filepathtosave = "allfiles/Upload2024/" + formName + "/" + sldist + "/Photo/" + result + "P" + ".jpg";
                                ViewBag.ImageURL = filepathtosave;

                                string PhotoName = "allfiles/Upload2024/" + formName + "/" + sldist + "/Photo" + "/" + result + "P" + ".jpg";
                                string type = "P";
                                string IsNew = "YES";
                                string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                            }
                            else
                            {

                                var filePath1 = filePath;
                                if ((ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "") && (filePath != null && filePath != ""))
                                {
                                    var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + sldist + "/Photo"), result + "P" + ".jpg");
                                    string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + sldist + "/Photo"));
                                    if (!Directory.Exists(FilepathExist))
                                    {
                                        Directory.CreateDirectory(FilepathExist);
                                    }
                                    if (System.IO.File.Exists(path))
                                    {
                                        System.IO.File.Delete(path);
                                    }
                                    System.IO.File.Copy(filePath1, path);
                                    //filepathtosave = "../Upload/Upload2024/" + formName + "/" + sldist + "/Photo/" + result + "P" + ".jpg";
                                    filepathtosave = "allfiles/Upload2024/" + formName + "/" + sldist + "/Photo/" + result + "P" + ".jpg";
                                    ViewBag.ImageURL = filepathtosave;

                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + sldist + "/Photo" + "/" + result + "P" + ".jpg";
                                    string type = "P";
                                    string IsNew = "NO";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);


                                }
                            }
                            if (rm.std_Sign != null)
                            {
                                //var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + sldist + "/Sign"), result + "S" + ".jpg");
                                //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + sldist + "/Sign"));
                                //if (!Directory.Exists(FilepathExist))
                                //{
                                //    Directory.CreateDirectory(FilepathExist);
                                //}
                                //rm.std_Sign.SaveAs(path);
                                string Orgfile = result + "S" + ".jpg";
                                using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                {
                                    using (var newMemoryStream = new MemoryStream())
                                    {
                                        var uploadRequest = new TransferUtilityUploadRequest
                                        {
                                            InputStream = rm.std_Sign.InputStream,
                                            Key = string.Format("allfiles/Upload2024/" + formName + "/" + sldist + "/Sign/{0}", Orgfile),
                                            BucketName = BUCKET_NAME,
                                            CannedACL = S3CannedACL.PublicRead
                                        };

                                        var fileTransferUtility = new TransferUtility(client);
                                        fileTransferUtility.Upload(uploadRequest);
                                    }
                                }
                                //filepathtosave = "../Upload/Upload2024/" + formName + "/" + sldist + "/Sign/" + result + "S" + ".jpg";
                                filepathtosave = "allfiles/Upload2024/" + formName + "/" + sldist + "/Sign/" + result + "S" + ".jpg";
                                ViewBag.ImageURL = filepathtosave;

                                string PhotoName = "allfiles/Upload2024/" + formName + "/" + sldist + "/Sign" + "/" + result + "S" + ".jpg";
                                string type = "S";
                                string IsNew = "YES";
                                string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                            }
                            else
                            {
                                var filePathS = filePathSign;
                                if ((ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "") && (filePathSign != null && filePathSign != ""))
                                {
                                    var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + sldist + "/Sign"), result + "S" + ".jpg");
                                    string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + sldist + "/Sign"));
                                    if (!Directory.Exists(FilepathExist))
                                    {
                                        Directory.CreateDirectory(FilepathExist);
                                    }
                                    if (System.IO.File.Exists(path))
                                    {
                                        System.IO.File.Delete(path);
                                    }
                                    System.IO.File.Copy(filePathS, path);
                                    //filepathtosave = "../Upload/Upload2024/" + formName + "/" + sldist + "/Sign/" + result + "S" + ".jpg";
                                    filepathtosave = "allfiles/Upload2024/" + formName + "/" + sldist + "/Sign/" + result + "S" + ".jpg";
                                    ViewBag.ImageURL = filepathtosave;

                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + sldist + "/Sign" + "/" + result + "S" + ".jpg";
                                    string type = "S";
                                    string IsNew = "NO";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);


                                }
                            }
                            // //-----------------------------------End  Session "2023-2024"------------
                        }

                        ModelState.Clear();
                        //--For Showing Message---------//

                        //return RedirectToAction("E1Formgrid", "RegistrationPortal");

                    }
                }
            }
            catch (Exception ex1)
            {

                oErrorLog.WriteErrorLog(ex1.ToString(), Path.GetFileName(Request.Path));
            }
            return View(rm);
        }
        public ActionResult E1FormDelete(string id)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            //if (Session["Class"].ToString() == "2" && (Session["SchType"].ToString() == "ASS" || Session["SchType"].ToString() == "MRS"))
            //{
            //    return RedirectToAction("Index", "Home");
            //}
            if (id == null)
            {
                return RedirectToAction("E1Formgrid", "RegistrationPortal");
            }
            string formname = "E1";
            string schlDist = null;
            DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
            if (schlDistds.Tables[0].Rows.Count > 0)
            {
                schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
            }
            DataSet ds = objDB.SearchStudentGetByData_E(id, formname);
            //DataSet ds = objDB.SearchStudentGetByData(id);
            string dist = ds.Tables[0].Rows[0]["District"].ToString();
            string imgPhoto = ds.Tables[0].Rows[0]["std_Photo"].ToString();
            string imgSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
            string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();
            string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
            string Imptblname = ds.Tables[0].Rows[0]["Imptblname"].ToString();
            string oldid = ds.Tables[0].Rows[0]["oldid"].ToString();

            string result = objDB.Delete_E_FromData(id, oldid, oldyear, Imptblname); // passing Value to DBClass from model

            //string result = objDB.Delete_E_FromData(id, OTID, OLDID, tcref); // passing Value to DBClass from model

            //--------Photo Delete------
            //RegistrationModels RM = new RegistrationModels();
            Import RM = new Import();
            var fileDesti = "";
            var fileDestiPic = "";

            if (Session["Session"] != null)
            {
                if (Session["Session"].ToString() == "2023-2024")
                {
                    // var pathPhoto = "D:\\LatestPSEBONLINE - 2018 - 12042017\\PSEBONLINE\\PSEBONLINE\\Upload\\upload2018\\N1\\165\\Photo\\N1165100003P.jpg";
                    var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), imgPhoto);
                    //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

                    if (System.IO.File.Exists(pathPhoto))
                    {
                        string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"));
                        if (!Directory.Exists(FilepathExist))
                        {
                            Directory.CreateDirectory(FilepathExist);
                        }

                        //fileDesti = "../StdImages/DeletedPic/" + imgName;
                        fileDestiPic = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"), imgPhoto);
                        System.IO.File.Move(pathPhoto, fileDestiPic);
                        System.IO.File.Delete(pathPhoto);

                    }
                    var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), imgSign);
                    //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
                    if (System.IO.File.Exists(pathSIGN))
                    {
                        string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"));
                        if (!Directory.Exists(FilepathExist))
                        {
                            Directory.CreateDirectory(FilepathExist);
                        }
                        //fileDesti = "../StdImages/DeletedPic/" + imgName;
                        fileDesti = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"), imgSign);
                        System.IO.File.Move(pathSIGN, fileDesti);
                        System.IO.File.Delete(pathSIGN);

                    }
                    //------------End photo Delete------
                }
            }

            TempData["resultDelete"] = result; // for dislaying message after saving storing output.
            return RedirectToAction("E1Formgrid", "RegistrationPortal");
        }
        //-----------------------------------E1 End----------------------
        #endregion E1 END

        //----------------------------------E2 Starts----------------
        #region E2 Starts
        public ActionResult E2Form()
        {
            RegistrationModels rm = new RegistrationModels();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());

                //int res = 0;
                //objDB.CheckDateE1E2T1T2(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }

            }

            //-----------------------------------------------------Nsqf -------------------------
            string ses = Session["Session"].ToString();
            string schlcode = Session["SCHL"].ToString();
            DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
            if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
            {
                ViewData["NSQFSCHOOL"] = "1";
            }
            else
            {
                ViewData["NSQFSCHOOL"] = "0";
            }
            string nsqfsub = null;
            DataSet nsresult = objDB.SelectS11(nsqfsub); // passing Value to DBClass from model
            ViewBag.nsfq = nsresult.Tables[0];
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {
                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
            }
            nsfqList.Add(new SelectListItem { Text = "SECURITY", Value = "N05" });
            ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
            //-----------------------------------------------------End Nsqf -------------------------

            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
            ViewBag.MyMatricResult = objCommon.GetMatricResult();
            ViewBag.MyBoard = objCommon.GetN2Board();
            ViewBag.SectionList = objCommon.GetSection();
            ViewBag.Section = "0";
            //var itemsch = new SelectList(new[]{new {ID="1",Name="School Code"},new{ID="2",Name="School Name"},
            //         new{ID="3",Name="School IDNO"},new{ID="4",Name="School Station"},new{ID="5",Name="School Center Code"},}, "ID", "Name", 1);
            //ViewBag.MySch = itemsch.ToList();

            ViewBag.SelectedItem = "";
            ViewBag.Mon = objCommon.GetMonth();
            ViewBag.SessionYearList = objCommon.GetSessionYear();
            @ViewBag.DA = objCommon.GetDA();
            ViewBag.MyDist = objCommon.GetDistE();
            ViewBag.MyGroup = objCommon.GroupName();

            List<SelectListItem> MyGroupList = objCommon.GroupName();
            // ViewBag.MyGroup = objCommon.GroupName();
            DataTable dtAssignSubject = objCommon.GetAssignSubjectBySchool(Session["SCHL"].ToString());
            if (dtAssignSubject != null && dtAssignSubject.Rows.Count > 0)
            {
                ViewBag.MyGroup = objCommon.GetSubjectsBySchool(dtAssignSubject, MyGroupList);
            }
            ViewBag.MyGroup = MyGroupList;


            string formname = "E2";
            string schlid = "";
            if (Session["SCHL"] != null)
            {
                schlid = Session["SCHL"].ToString();
            }
            else
            {
                return View(rm);
            }

            DataSet seleLastCan = objDB.SelectlastEntryCandidate(formname, schlid);
            // DataSet seleLastCan = objDB.SelectlastEntry_E2_Candidate(formname);
            if (seleLastCan.Tables[0].Rows.Count > 0)
            {
                //                rm.Board_Roll_Num, rm.Admission_Num,po.Candi_Name,po.Father_Name,po.Std_id
                //FROM regMasterRegular2016 rm, Personal_Info Po
                //WHERE po.Std_id = rm.Std_id and rm.std_id = (SELECT max(rm.std_id) FROM regMasterRegular2016 rm)
                @ViewBag.message = "1";
                @ViewBag.Board_Roll_Num = seleLastCan.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                @ViewBag.Admission_Num = seleLastCan.Tables[0].Rows[0]["Admission_Num"].ToString();
                @ViewBag.Candi_Name = seleLastCan.Tables[0].Rows[0]["Candi_Name"].ToString();
                @ViewBag.Father_Name = seleLastCan.Tables[0].Rows[0]["Father_Name"].ToString();
                @ViewBag.id = seleLastCan.Tables[0].Rows[0]["Std_id"].ToString();
                @ViewBag.lot = seleLastCan.Tables[0].Rows[0]["lot"].ToString();
            }
            else
            {
                @ViewBag.message = "Record Not Found";
            }


            return View(rm);
        }
        [HttpPost]
        public ActionResult E2Form(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern)
        {
            try
            {


                string schlDist = null;
                //if (Session["Class"].ToString() == "2" && (Session["SchType"].ToString() == "ASS" || Session["SchType"].ToString() == "MRS"))
                //{
                //    return RedirectToAction("Index", "Home");
                //}
                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                DataSet result1 = objDB.SelectDist(); // passing Value to DBClass from model
                ViewBag.MyDist = result1.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
                List<SelectListItem> items = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
                {
                    items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
                }
                // ViewBag.MyDist = items;
                ViewBag.MyDist = new SelectList(items, "Value", "Text", 047);
                ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
                ViewBag.MyMatricResult = objCommon.GetMatricResult();
                ViewBag.MyBoard = objCommon.GetN2Board();
                ViewBag.SectionList = objCommon.GetSection();
                ViewBag.MyGroup = objCommon.GroupName();

                DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
                if (schlDistds.Tables[0].Rows.Count > 0)
                {
                    schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
                }


                //-----------------------------------------------------Nsqf -------------------------
                string ses = Session["Session"].ToString();
                string schlcode = Session["SCHL"].ToString();
                DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                {
                    ViewData["NSQFSCHOOL"] = "1";
                }
                else
                {
                    ViewData["NSQFSCHOOL"] = "0";
                }
                string nsqfsub = null;
                DataSet nsresult = objDB.SelectS11(nsqfsub); // passing Value to DBClass from model
                ViewBag.nsfq = nsresult.Tables[0];
                List<SelectListItem> nsfqList = new List<SelectListItem>();
                //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                {
                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
                }
                nsfqList.Add(new SelectListItem { Text = "SECURITY", Value = "N05" });
                ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
                //-----------------------------------------------------End Nsqf -------------------------
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
                List<SelectListItem> MyGroupList = objCommon.GroupName();
                // ViewBag.MyGroup = objCommon.GroupName();
                DataTable dtAssignSubject = objCommon.GetAssignSubjectBySchool(Session["SCHL"].ToString());
                if (dtAssignSubject != null && dtAssignSubject.Rows.Count > 0)
                {
                    ViewBag.MyGroup = objCommon.GetSubjectsBySchool(dtAssignSubject, MyGroupList);
                }
                ViewBag.MyGroup = MyGroupList;

                string session = null;
                string idno = null;
                string schl = null;
                if (Session["Session"] != null)
                {
                    session = Session["Session"].ToString();
                    idno = Session["IDNO"].ToString();
                    schl = Session["SCHL"].ToString();
                }
                else
                {
                    return RedirectToAction("Index", "Login");
                }

                //Check server side validation using data annotation
                if (ModelState.IsValid)
                {
                    string group = rm.MyGroup;
                    string dist = frm["MyDist"].ToString();
                    string Tehsil = frm["MyTeh"].ToString();
                    //string Mygroup = frm["MyGroup"];
                    string formName = "E2";

                    if (rm.file != null)
                    {
                        stdPic = Path.GetFileName(rm.file.FileName);
                    }
                    else
                    {
                        //Response.Write("<script>alert('Please Upload Photo')</script>");
                        //return View();

                    }
                    if (rm.std_Sign != null)
                    {
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);
                    }
                    else
                    {
                        //Response.Write("<script>alert('Please Upload sign')</script>");
                        //return View();

                    }

                    if (rm.DocProofCertificate != null)
                    {
                        rm.ProofCertificate = Path.GetFileName(rm.DocProofCertificate.FileName);
                    }



                    if (rm.DocProofNRICandidates != null)
                    {
                        rm.ProofNRICandidates = Path.GetFileName(rm.DocProofNRICandidates.FileName);
                    }


                    // date format (dd/mm/yyyy)
                    rm.DOB = AbstractLayer.StaticDB.GetDateFormatDDMMYYYY(rm.DOB);

                    //IsNRICandidate
                    if (rm.IsNRICandidate == true && (rm.DocProofNRICandidates != null || !string.IsNullOrEmpty(rm.ProofNRICandidates)))
                    {
                        rm.IsNRICandidate = true;
                    }
                    else
                    {
                        rm.IsNRICandidate = false;
                        rm.ProofNRICandidates = "";
                        rm.DocProofNRICandidates = null;
                    }
                    ///////////
                    if (ViewData["NSQFSCHOOL"].ToString() == "1")
                    {
                        if (rm.MyGroup != "HUMANITIES")
                        { rm.NSQFPattern = ""; rm.NsqfsubS6 = ""; }
                        else
                        {
                            if (string.IsNullOrEmpty(PreNSQF))
                            {
                                rm.NSQFPattern = "";
                            }
                            else if (PreNSQF == "NO")
                            {
                                rm.NSQFPattern = "2";
                                if (string.IsNullOrEmpty(NSQFsubS6))
                                {
                                    rm.NsqfsubS6 = "NO";
                                }
                            }
                            else
                            {
                                rm.NSQFPattern = NsqfPattern;
                                if (string.IsNullOrEmpty(rm.NSQFPattern) || string.IsNullOrEmpty(NSQFsubS6))
                                {
                                    ViewData["resultUpdate"] = "NSQFPattern";
                                }

                            }
                        }
                    }
                    else { rm.PreNSQF = ""; }

                    string result = objDB.Ins_E_Form_Data(rm, frm, formName, session, idno, schl);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not saved
                        ViewData["result"] = 0;
                    }
                    if (result == "-1")
                    {
                        //-----alredy exist
                        ViewData["result"] = -1;
                    }
                    if (result == "-3")
                    {
                        //-----alredy exist
                        ViewData["result"] = -3;
                    }
                    else
                    {
                        ViewData["result"] = 1;
                        //----Data Inserted Successfully
                        // dist = Session["SCHOOLDIST"].ToString();
                        if (Session["Session"] != null)
                        {
                            if (Session["Session"].ToString() == "2023-2024")
                            {
                                if (rm.file != null)
                                {
                                    string Orgfile = result + "P" + ".jpg";
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.file.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }

                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                                    string type = "P";
                                    string IsNew = "YES";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                                }
                                if (rm.std_Sign != null)
                                {
                                    string Orgfile = result + "S" + ".jpg";
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.std_Sign.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }

                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                                    string type = "S";
                                    string IsNew = "YES";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                                }


                                if (rm.DocProofCertificate != null)
                                {
                                    string fileExt = Path.GetExtension(rm.DocProofCertificate.FileName);
                                    string Orgfile = result + "C" + fileExt;

                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {

                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.DocProofCertificate.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }
                                    rm.ProofCertificate = "allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate" + "/" + result + "C" + fileExt;
                                    string type = "C";
                                    string UpdatePicC = objDB.Updated_Pic_Data(result, rm.ProofCertificate, type);
                                }

                                if (rm.DocProofNRICandidates != null)
                                {
                                    string fileExt = Path.GetExtension(rm.DocProofNRICandidates.FileName);
                                    string pathName = formName + "/" + schlDist + "/ProofNRICandidates";
                                    string Orgfile = result + "NRI" + fileExt;

                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            ///file.CopyTo(newMemoryStream);

                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.DocProofNRICandidates.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + pathName + "/" + schlDist + "/ProofNRICandidates/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }

                                    rm.ProofNRICandidates = "allfiles/Upload2024/" + pathName + "/" + result + "NRI" + fileExt;
                                    string type = "NRI";
                                    string UpdatePicN = objDB.Updated_Pic_Data(result, rm.ProofNRICandidates, type);
                                }



                            }

                        }
                        //ViewBag.Message = "File has been uploaded successfully";
                        ModelState.Clear();

                        //--For Showing Message---------//

                    }

                }
            }
            catch (Exception ex1)
            {


            }
            return E2Form();
        }

        [SessionCheckFilter]
        public ActionResult E2Formgrid(RegistrationSearchModelList registrationSearchModel)
        {
            string schl = Session["SCHL"].ToString();
            int status = new AbstractLayer.RegistrationDB().CheckSchoolAssignForm(2, Session["SCHL"].ToString());
            if (status <= 0)
            {
                return RedirectToAction("Index", "Home");
            }
            DataSet dsOut = new DataSet();
            registrationSearchModel.RegistrationSearchModel = AbstractLayer.RegistrationDB.GetStudentRecordsSearchPM("E2", schl, out dsOut);
            registrationSearchModel.StoreAllData = dsOut;
            return View(registrationSearchModel);
        }



        public ActionResult E2FormModify(string id)
        {
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();

            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());

                //int res = 0;
                //objDB.CheckDateE1E2T1T2(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }

            }
            //if (Session["Class"].ToString() == "2" && (Session["SchType"].ToString() == "ASS" || Session["SchType"].ToString() == "MRS"))
            //{
            //    return RedirectToAction("Index", "Home");
            //}

            //-----------------------------------------------------Nsqf -------------------------
            string ses = Session["Session"].ToString();
            string schlcode = Session["SCHL"].ToString();
            DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
            if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
            {
                ViewData["NSQFSCHOOL"] = "1";
            }
            else
            {
                ViewData["NSQFSCHOOL"] = "0";
            }
            string nsqfsub = null;
            DataSet nsresult = objDB.SelectS11(nsqfsub); // passing Value to DBClass from model
            ViewBag.nsfq = nsresult.Tables[0];
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {
                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
            }
            nsfqList.Add(new SelectListItem { Text = "SECURITY", Value = "N05" });
            ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
            //-----------------------------------------------------End Nsqf -------------------------

            if (id == null)
            {
                return RedirectToAction("E2Formgrid", "RegistrationPortal");
            }

            string formname = "E2";
            if (id != null)
            {
                try
                {

                    id = encrypt.QueryStringModule.Decrypt(id);
                    DataSet ds = objDB.SearchStudentGetByData_E(id, formname);
                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        return RedirectToAction("E2Formgrid", "RegistrationPortal");
                    }
                    rm.old_std_Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                    rm.old_std_sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                    rm.NSQFPattern = ds.Tables[0].Rows[0]["NSQFPattern"].ToString();
                    rm.IsUnlockForm = ds.Tables[0].Rows[0]["IsUnlockForm"].ToString();
                    // DataSet ds = objDB.SearchStudentGetByData(id);
                    ViewBag.lot = Convert.ToInt32(ds.Tables[0].Rows[0]["lot"].ToString());
                    rm.Std_id = Convert.ToInt32(ds.Tables[0].Rows[0]["Std_id"].ToString());

                    rm.IsNRICandidate = ds.Tables[0].Rows[0]["IsNRICandidate"] == null ? false : ds.Tables[0].Rows[0]["IsNRICandidate"].ToString() == "0" ? false : ds.Tables[0].Rows[0]["IsNRICandidate"].ToString().ToLower() == "false" ? false : true;
                    rm.Category = ds.Tables[0].Rows[0]["Category"].ToString();
                    ViewBag.catg = objCommon.GetE2andE1Category();

                    rm.Board = ds.Tables[0].Rows[0]["Board"].ToString();
                    ViewBag.MyBoard = objCommon.GetN2Board();

                    rm.Other_Board = ds.Tables[0].Rows[0]["Other_Board"].ToString();

                    rm.Board_Roll_Num = ds.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                    rm.Prev_School_Name = ds.Tables[0].Rows[0]["Prev_School_Name"].ToString();

                    rm.Month = ds.Tables[0].Rows[0]["Month"].ToString();
                    ViewBag.Mon = objCommon.GetMonth();

                    rm.Year = ds.Tables[0].Rows[0]["Year"].ToString();
                    // AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                    ViewBag.SessionYearList = objCommon.GetSessionYear();

                    rm.MyGroup = ds.Tables[0].Rows[0]["Group_name"].ToString().Trim();
                    ViewBag.MyGroup1 = objCommon.GroupName();

                    rm.AWRegisterNo = ds.Tables[0].Rows[0]["AWRegisterNo"].ToString();
                    rm.Admission_Num = ds.Tables[0].Rows[0]["Admission_Num"].ToString();
                    rm.Admission_Date = ds.Tables[0].Rows[0]["Admission_Date"].ToString();
                    rm.Class_Roll_Num_Section = ds.Tables[0].Rows[0]["Class_Roll_Num_Section"].ToString();
                    rm.Candi_Name = ds.Tables[0].Rows[0]["Candi_Name"].ToString();
                    rm.Candi_Name_P = ds.Tables[0].Rows[0]["Candi_Name_P"].ToString();
                    rm.Father_Name = ds.Tables[0].Rows[0]["Father_Name"].ToString();
                    rm.Father_Name_P = ds.Tables[0].Rows[0]["Father_Name_P"].ToString();
                    rm.Mother_Name = ds.Tables[0].Rows[0]["Mother_Name"].ToString();
                    rm.Mother_Name_P = ds.Tables[0].Rows[0]["Mother_Name_P"].ToString();

                    ViewBag.CasteSelected = rm.Caste = ds.Tables[0].Rows[0]["Caste"].ToString();
                    ViewBag.Caste = objCommon.GetCaste();

                    rm.Gender = ds.Tables[0].Rows[0]["Gender"].ToString();

                    rm.Differently_Abled = ds.Tables[0].Rows[0]["Differently_Abled"].ToString();
                    ViewBag.DA = objCommon.GetDA();

                    rm.Religion = ds.Tables[0].Rows[0]["Religion"].ToString();
                    ViewBag.RE = objCommon.GetReligion();

                    rm.DOB = ds.Tables[0].Rows[0]["DOB"].ToString();
                    rm.Mobile = ds.Tables[0].Rows[0]["Mobile"].ToString();
                    rm.Belongs_BPL = ds.Tables[0].Rows[0]["Belongs_BPL"].ToString();
                    rm.E_punjab_Std_id = ds.Tables[0].Rows[0]["E_punjab_Std_id"].ToString();
                    if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 28)
                    {
                        rm.AadharEnroll = "Enrollmemt";
                    }
                    else if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 12)
                    {
                        rm.AadharEnroll = "Aadhar";
                    }
                    else
                    {
                        rm.AadharEnroll = "N.A.";
                    }
                    rm.Aadhar_num = ds.Tables[0].Rows[0]["Aadhar_num"].ToString();
                    rm.Address = ds.Tables[0].Rows[0]["Address"].ToString();
                    rm.LandMark = ds.Tables[0].Rows[0]["LandMark"].ToString();
                    rm.Block = ds.Tables[0].Rows[0]["Block"].ToString();
                    string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();

                    rm.MyDistrict = ds.Tables[0].Rows[0]["District"].ToString();
                    //rm.District = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString());
                    ViewBag.MyDist = objCommon.GetDistE();

                    rm.Tehsil = Convert.ToInt32(ds.Tables[0].Rows[0]["Tehsil"].ToString());

                    int dist = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString());
                    DataSet result1 = objDB.SelectAllTehsil(dist);
                    ViewBag.MyTeh = result1.Tables[0];
                    List<SelectListItem> TehList = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.MyTeh.Rows)
                    {
                        TehList.Add(new SelectListItem { Text = @dr["TEHSIL"].ToString(), Value = @dr["TCODE"].ToString() });
                    }
                    ViewBag.MyTeh = TehList;
                    rm.PinCode = ds.Tables[0].Rows[0]["PinCode"].ToString();
                    int IsPrevSchoolSelf = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPrevSchoolSelf"].ToString());
                    if (IsPrevSchoolSelf == 1)
                    {
                        rm.IsPrevSchoolSelf = true;
                    }
                    else
                    {
                        rm.IsPrevSchoolSelf = false;
                    }
                    int IsPSEBRegNum = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPSEBRegNum"].ToString() == "" ? "0" : ds.Tables[0].Rows[0]["IsPSEBRegNum"].ToString());

                    if (IsPSEBRegNum == 1)
                    {
                        rm.IsPSEBRegNum = true;
                        rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                    }
                    else
                    {
                        rm.IsPSEBRegNum = false;
                        rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                    }
                    int IsPro = Convert.ToInt32(ds.Tables[0].Rows[0]["Provisional"].ToString());
                    if (IsPro == 1)
                    {
                        rm.Provisional = true;
                    }
                    else
                    {
                        rm.Provisional = false;
                    }
                    // rm.fname= ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    // @ViewBag.ImageURL = "../../StdImages/Upload/" + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    //rm.PhotoString= "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    rm.MatricResult = ds.Tables[0].Rows[0]["MatricResult"].ToString();
                    ViewBag.MyMatricResult = objCommon.GetMatricResult();
                    rm.MetricBoard = ds.Tables[0].Rows[0]["MatricBoard"].ToString();
                    ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
                    rm.MetricYear = ds.Tables[0].Rows[0]["MetricYear"].ToString();
                    rm.MetricMonth = ds.Tables[0].Rows[0]["MetricMonth"].ToString();
                    rm.Metric_Roll_Num = ds.Tables[0].Rows[0]["MetricRollNum"].ToString();
                    rm.CandiMedium = ds.Tables[0].Rows[0]["CandStudyMedium"].ToString();
                    rm.PreNSQF = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();
                    //-----------------------------For NSQF SUBJECTS----------------
                    string sid = id;
                    DataSet isCHkNSQF = objDB.CHkNSQFStudents(sid);

                    if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
                    {
                        ViewData["NSQFSTUDENT"] = "1";
                        if (rm.NsqfsubS6 == null)
                        {
                            rm.NsqfsubS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                        }
                        DataSet nsTextresult = objDB.GetNSQFVIEWSUBJECT11TH(rm.NsqfsubS6, rm.PreNSQF);
                        List<SelectListItem> nssub6 = new List<SelectListItem>();
                        //if (rm.PreNSQF == "NO")
                        //{
                        //    nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                        //    ViewBag.nsqfcatg = nssub6;
                        //}
                        if (rm.PreNSQF == "NO")
                        {
                            ViewBag.nsqfcatg = ViewBag.nsfqList;
                        }
                        else
                        {
                            if (nsTextresult.Tables[0].Rows.Count > 0)
                            {
                                nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                                nssub6.Add(new SelectListItem { Text = nsTextresult.Tables[0].Rows[0]["Name_ENG"].ToString(), Value = rm.NsqfsubS6 });
                                ViewBag.nsqfcatg = nssub6;
                            }
                            else
                            {
                                nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                                ViewBag.nsqfcatg = nssub6;
                            }

                        }

                    }
                    else
                    {
                        List<SelectListItem> nssub6 = new List<SelectListItem>();
                        nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                        ViewBag.nsqfcatg = nssub6;
                    }


                    //--------------------------------End NSQF SUBJECTS-------------


                    @ViewBag.Photo = ds.Tables[0].Rows[0]["std_Photo"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    @ViewBag.sign = ds.Tables[0].Rows[0]["std_Sign"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();

                    rm.ProofCertificate = ds.Tables[0].Rows[0]["ProofCertificate"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["ProofCertificate"].ToString();
                    rm.ProofNRICandidates = ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString();

                    //
                    rm.Section = Convert.ToChar(ds.Tables[0].Rows[0]["Section"].ToString());
                    rm.DP = ds.Tables[0].Rows[0]["DisabilityPercent"].ToString();
                    ViewBag.SectionList = objCommon.GetSection();
                    //
                    List<SelectListItem> MyGroupList = objCommon.GroupName();
                    DataTable dtAssignSubject = objCommon.GetAssignSubjectBySchool(Session["SCHL"].ToString());
                    if (dtAssignSubject != null && dtAssignSubject.Rows.Count > 0)
                    {
                        ViewBag.MyGroup1 = objCommon.GetSubjectsBySchool(dtAssignSubject, MyGroupList);
                    }
                    ViewBag.MyGroup1 = MyGroupList;

                    if (!string.IsNullOrEmpty(rm.Year))
                    {
                        if (rm.Board.Contains("P.S.E.B"))
                        {
                            List<SelectListItem> yearlist1 = objCommon.GetSessionYear();
                            yearlist1.RemoveAll(c => Convert.ToInt32(c.Value) > Convert.ToInt32(2019));
                            ViewBag.SessionYearList = yearlist1;
                        }
                    }
                }

                catch (Exception ex)
                {

                }
            }

            //return View(asm);
            return View(rm);
        }
        [HttpPost]
        public ActionResult E2FormModify(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern)
        {
            try
            {


                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();

                string schlDist = null;
                //if (Session["Class"].ToString() == "2" && (Session["SchType"].ToString() == "ASS" || Session["SchType"].ToString() == "MRS"))
                //{
                //    return RedirectToAction("Index", "Home");
                //}
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
                ViewBag.MyMatricResult = objCommon.GetMatricResult();
                ViewBag.catg = objCommon.GetE2andE1Category();
                ViewBag.MyBoard = objCommon.GetN2Board();
                ViewBag.MyGroup1 = objCommon.GroupName();

                DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
                if (schlDistds.Tables[0].Rows.Count > 0)
                {
                    schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
                }
                //int res = 0;
                //objDB.CheckDateE1E2T1T2(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
                ViewBag.Mon = objCommon.GetMonth();

                // AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                ViewBag.SessionYearList = objCommon.GetSessionYear();

                ViewBag.Caste = objCommon.GetCaste();

                ViewBag.DA = objCommon.GetDA();

                ViewBag.RE = objCommon.GetReligion();
                ViewBag.MyDist = objCommon.GetDistE();


                ViewBag.SectionList = objCommon.GetSection();
                ViewBag.MyTeh = objCommon.GetAllTehsil();
                string dist = rm.MyDistrict;

                List<SelectListItem> MyGroupList = objCommon.GroupName();
                // ViewBag.MyGroup = objCommon.GroupName();
                DataTable dtAssignSubject = objCommon.GetAssignSubjectBySchool(Session["SCHL"].ToString());
                if (dtAssignSubject != null && dtAssignSubject.Rows.Count > 0)
                {
                    ViewBag.MyGroup = objCommon.GetSubjectsBySchool(dtAssignSubject, MyGroupList);
                }
                ViewBag.MyGroup = MyGroupList;
                ViewBag.MyGroup1 = objCommon.GroupName();
                if (ModelState.IsValid)
                {
                    // AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                    string id = rm.Std_id.ToString();
                    string formname = "E2";
                    DataSet ds = objDB.SearchStudentGetByData_E(id, formname);
                    //DataSet ds = objDB.SearchStudentGetByData(id);
                    string distOld = "";
                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        //DataSet ds = objDB.SearchStudentGetByData(id);
                        distOld = ds.Tables[0].Rows[0]["District"].ToString();
                        rm.MyDistrict = distOld;
                    }
                    else
                    {
                        distOld = rm.MyDistrict;
                    }
                    //string stdPic = null;
                    string formName = "E2";

                    //if (frm["file"].ToString() != "")
                    if (rm.file != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdPic = Path.GetFileName(rm.file.FileName);

                    }
                    else
                    {

                        stdPic = ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    }
                    if (rm.std_Sign != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);

                    }
                    else
                    {

                        stdSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }
                    //


                    if (rm.DocProofCertificate != null)
                    {
                        rm.ProofCertificate = Path.GetFileName(rm.DocProofCertificate.FileName);
                    }
                    else
                    {

                        rm.ProofCertificate = ds.Tables[0].Rows[0]["ProofCertificate"].ToString();
                    }


                    if (rm.DocProofNRICandidates != null)
                    {
                        rm.ProofNRICandidates = Path.GetFileName(rm.DocProofNRICandidates.FileName);
                    }
                    else
                    {

                        rm.ProofNRICandidates = ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString();
                    }
                    //var stdPic = Path.GetFileName(rm.file.FileName);
                    //var stdSign = Path.GetFileName(rm.std_Sign.FileName);
                    //-----------------------------------------------------Nsqf -------------------------



                    string ses = Session["Session"].ToString();
                    string schlcode = Session["SCHL"].ToString();
                    DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                    if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                    {
                        ViewData["NSQFSCHOOL"] = "1";
                    }
                    else
                    {
                        ViewData["NSQFSCHOOL"] = "0";
                    }
                    string nsqfsub = null;
                    DataSet nsresult = objDB.SelectS11(nsqfsub); // passing Value to DBClass from model
                    ViewBag.nsfq = nsresult.Tables[0];
                    List<SelectListItem> nsfqList = new List<SelectListItem>();
                    //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                    nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                    foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                    {
                        nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
                    }
                    nsfqList.Add(new SelectListItem { Text = "SECURITY", Value = "N05" });
                    ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");

                    ViewBag.nsqfcatg = new SelectList(nsfqList, "Value", "Text");
                    //-----------------------------------------------------End Nsqf -------------------------

                    if (Session["SCHOOLDIST"] == null)
                    {
                        return RedirectToAction("Index", "Login");
                    }
                    // date format (dd/mm/yyyy)
                    rm.DOB = AbstractLayer.StaticDB.GetDateFormatDDMMYYYY(rm.DOB);


                    //IsNRICandidate
                    if (rm.IsNRICandidate == true && (rm.DocProofNRICandidates != null || !string.IsNullOrEmpty(rm.ProofNRICandidates)))
                    {
                        rm.IsNRICandidate = true;
                    }
                    else
                    {
                        rm.IsNRICandidate = false;
                        rm.ProofNRICandidates = "";
                        rm.DocProofNRICandidates = null;
                    }

                    if (ViewData["NSQFSCHOOL"].ToString() == "1")
                    {
                        if (rm.MyGroup != "HUMANITIES")
                        { rm.NSQFPattern = ""; rm.NsqfsubS6 = ""; }
                        else
                        {
                            if (string.IsNullOrEmpty(PreNSQF))
                            {
                                rm.NSQFPattern = "";
                            }
                            else if (PreNSQF == "NO")
                            {
                                rm.NSQFPattern = "2";
                                if (string.IsNullOrEmpty(NSQFsubS6))
                                {
                                    rm.NsqfsubS6 = "NO";
                                }
                            }
                            else
                            {
                                rm.NSQFPattern = NsqfPattern;
                                if (string.IsNullOrEmpty(rm.NSQFPattern) || string.IsNullOrEmpty(NSQFsubS6))
                                {
                                    ViewData["resultUpdate"] = "NSQFPattern";
                                }

                            }
                        }
                    }
                    else { rm.PreNSQF = ""; }

                    if (!string.IsNullOrEmpty(rm.DOB))
                    {
                        rm.DOB = AbstractLayer.StaticDB.DateInFormat(rm.DOB) == true ? rm.DOB : "";
                    }
                    else { rm.DOB = ""; }
                    string result = objDB.Update_E_Data(rm, frm, formName, id, stdPic, stdSign);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not updated
                        ViewData["resultUpdate"] = 0;
                    }
                    else if (result == "-1")
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = -1;
                    }
                    else if (result == "-3")
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = -3;
                    }
                    else if (result.Length > 5)
                    {
                        ViewData["resultUpdate"] = 1;
                        if (rm.file != null)
                        {
                            //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.file.SaveAs(path);
                            //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                            //ViewBag.ImageURL = filepathtosave;
                            string Orgfile = result + "P" + ".jpg";
                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.file.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                            string type = "P";
                            string IsNew = "YES";
                            string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                        }
                        if (rm.std_Sign != null)
                        {
                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.std_Sign.SaveAs(path);
                            //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                            //ViewBag.ImageURL = filepathtosave;

                            string Orgfile = result + "S" + ".jpg";
                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.std_Sign.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                            string type = "S";
                            string IsNew = "YES";
                            string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                        }

                        // Documents

                        if (rm.DocProofCertificate != null)
                        {
                            string fileExt = Path.GetExtension(rm.DocProofCertificate.FileName);

                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"), result + "C" + fileExt);
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.DocProofCertificate.SaveAs(path);
                            string Orgfile = result + "C" + fileExt;

                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {

                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.DocProofCertificate.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            rm.ProofCertificate = "allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate" + "/" + result + "C" + fileExt;
                            string type = "C";
                            string UpdatePicC = objDB.Updated_Pic_Data(result, rm.ProofCertificate, type);
                        }

                        if (rm.DocProofNRICandidates != null)
                        {
                            string fileExt = Path.GetExtension(rm.DocProofNRICandidates.FileName);
                            string pathName = formName + "/" + schlDist + "/ProofNRICandidates";

                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + pathName), result + "NRI" + fileExt);
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + pathName));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.DocProofNRICandidates.SaveAs(path);

                            string Orgfile = result + "NRI" + fileExt;

                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    ///file.CopyTo(newMemoryStream);

                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.DocProofNRICandidates.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + pathName + "/" + schlDist + "/ProofNRICandidates/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            rm.ProofNRICandidates = "allfiles/Upload2024/" + pathName + "/" + result + "NRI" + fileExt;
                            string type = "NRI";
                            string UpdatePicN = objDB.Updated_Pic_Data(result, rm.ProofNRICandidates, type);
                        }


                        ModelState.Clear();
                        //--For Showing Message---------//
                        ViewData["resultUpdate"] = 1;
                        //return RedirectToAction("E2Formgrid", "RegistrationPortal");

                    }
                    else
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = result;
                    }

                }
            }
            catch (Exception ex1)
            {
                oErrorLog.WriteErrorLog(ex1.ToString(), Path.GetFileName(Request.Path));

            }
            return View(rm);
        }
        public ActionResult E2FormDelete(string id)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }

            }
            //if (Session["Class"].ToString() == "2" && (Session["SchType"].ToString() == "ASS" || Session["SchType"].ToString() == "MRS"))
            //{
            //    return RedirectToAction("Index", "Home");
            //}
            if (id == null)
            {
                return RedirectToAction("E2Formgrid", "RegistrationPortal");
            }

            string formname = "E2";
            string schlDist = null;
            DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
            if (schlDistds.Tables[0].Rows.Count > 0)
            {
                schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
            }
            DataSet ds = objDB.SearchStudentGetByData_E(id, formname);
            //DataSet ds = objDB.SearchStudentGetByData(id);
            string dist = ds.Tables[0].Rows[0]["District"].ToString();
            string imgPhoto = ds.Tables[0].Rows[0]["std_Photo"].ToString();
            string imgSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
            string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();
            string ProofCertificate = ds.Tables[0].Rows[0]["ProofCertificate"].ToString();
            string ProofNRICandidates = ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString();
            string result = objDB.Delete_E_FromData(id); // passing Value to DBClass from model

            //--------Photo Delete------
            RegistrationModels RM = new RegistrationModels();
            var fileDesti = "";
            var fileDestiPic = "";
            var fileDestiProof = "";
            var fileDestiNRI = "";

            // var pathPhoto = "D:\\LatestPSEBONLINE - 2018 - 12042017\\PSEBONLINE\\PSEBONLINE\\Upload\\upload2018\\N1\\165\\Photo\\N1165100003P.jpg";
            var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), imgPhoto);
            //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

            if (System.IO.File.Exists(pathPhoto))
            {
                string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"));
                if (!Directory.Exists(FilepathExist))
                {
                    Directory.CreateDirectory(FilepathExist);
                }

                //fileDesti = "../StdImages/DeletedPic/" + imgName;
                fileDestiPic = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"), imgPhoto);
                System.IO.File.Move(pathPhoto, fileDestiPic);
                System.IO.File.Delete(pathPhoto);

            }
            var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), imgSign);
            //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
            if (System.IO.File.Exists(pathSIGN))
            {
                string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"));
                if (!Directory.Exists(FilepathExist))
                {
                    Directory.CreateDirectory(FilepathExist);
                }
                //fileDesti = "../StdImages/DeletedPic/" + imgName;
                fileDesti = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"), imgSign);
                System.IO.File.Move(pathSIGN, fileDesti);
                System.IO.File.Delete(pathSIGN);

            }
            //------------End photo Delete------




            // var pathPhoto = "D:\\LatestPSEBONLINE - 2018 - 12042017\\PSEBONLINE\\PSEBONLINE\\Upload\\upload2018\\N1\\165\\Photo\\N1165100003P.jpg";
            var pathProofCertificate = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"), ProofCertificate);
            //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

            if (System.IO.File.Exists(pathProofCertificate))
            {
                string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificateD"));
                if (!Directory.Exists(FilepathExist))
                {
                    Directory.CreateDirectory(FilepathExist);
                }

                //fileDesti = "../StdImages/DeletedPic/" + imgName;
                fileDestiProof = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificateD"), ProofCertificate);
                System.IO.File.Move(pathProofCertificate, fileDestiProof);
                System.IO.File.Delete(pathProofCertificate);

            }
            var pathProofNRICandidates = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidates"), ProofNRICandidates);
            //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
            if (System.IO.File.Exists(pathProofNRICandidates))
            {
                string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidatesD"));
                if (!Directory.Exists(FilepathExist))
                {
                    Directory.CreateDirectory(FilepathExist);
                }
                //fileDesti = "../StdImages/DeletedPic/" + imgName;
                fileDestiNRI = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidatesD"), ProofNRICandidates);
                System.IO.File.Move(pathProofNRICandidates, fileDestiNRI);
                System.IO.File.Delete(pathProofNRICandidates);

            }
            //------------End photo Delete------

            ViewData["resultDelete"] = result; // for dislaying message after saving storing output.
            return RedirectToAction("E2Formgrid", "RegistrationPortal");


        }

        public JsonResult GetE2Year(string s) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            List<SelectListItem> yearlist = objCommon.GetSessionYear(); // passing Value to DBClass from model               
            //if (s.ToUpper().Contains("FAILED"))
            //{
            //    yearlist.RemoveRange(3, 45);
            //    yearlist.Remove(yearlist[0]);
            //    //yearlist.Remove(yearlist[0]);
            //    // yearlist.ToList().Where(s => Convert.ToInt32(s.Value) >= 2013);
            //    ViewBag.SessionYearListPrev = yearlist;
            //}
            //else
            //{
            //    yearlist.RemoveRange(0, 2);
            //    ViewBag.SessionYearListPrev = yearlist;
            //}
            return Json(yearlist);
        }
        //---------------------------------E2 End-------------------
        #endregion E1 Starts



        //-----------------------------M1 Start----------------------

        #region M1 form Start

        [SessionCheckFilter]
        public ActionResult M1Form()
        {
            LoginSession loginSession = (LoginSession)Session["LoginSession"];
            return RedirectToAction("Portal", "RegistrationPortal");

            ViewBag.YesNoListText = new AbstractLayer.DBClass().GetYesNoText().ToList();
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            ViewBag.YesNoList = new AbstractLayer.DBClass().GetYesNo().Where(s => s.Value == "Y").ToList();
            RegistrationModels rm = new RegistrationModels();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass


            int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());

            string admdate = "", LateAdmDate = "", StartAdmDate = "";
            objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
            ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;

            if (status > 0)
            {
                if (status == 0)
                { return RedirectToAction("Index", "Home"); }
            }
            else
            {
                return RedirectToAction("Index", "Home");
            }


            DataSet ds = objDB.ElectiveSubjects();

            ViewBag.SubS9 = ds.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> items = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ViewBag.SubS9.Rows)
            {
                items.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            ViewBag.SubS9 = new SelectList(items, "Value", "Text");
            ViewBag.S10 = new SelectList(items, "Value", "Text");

            #region Matric_ElectiveSubjects_Blind_NEW 

            DataSet ds1 = objDB.Matric_ElectiveSubjects_Blind_NEW();
            //ViewBag.SubSb9 = ds1.Tables[0];

            // Blind SUB -2
            List<SelectListItem> bitems2 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[0].Rows)
            {
                bitems2.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB -3
            List<SelectListItem> bitems3 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[1].Rows)
            {
                bitems3.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB -4
            List<SelectListItem> bitems4 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[2].Rows)
            {
                bitems4.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -5
            List<SelectListItem> bitems5 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[3].Rows)
            {
                bitems5.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -6
            List<SelectListItem> bitems6 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[4].Rows)
            {
                bitems6.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -7
            List<SelectListItem> bitems7 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[5].Rows)
            {
                bitems7.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB - 8
            List<SelectListItem> bitems8 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[6].Rows)
            {
                bitems8.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB - 9
            List<SelectListItem> bitems9 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[7].Rows)
            {
                bitems9.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }


            ViewBag.bs2 = new SelectList(bitems2, "Value", "Text");
            ViewBag.bs3 = new SelectList(bitems3, "Value", "Text");
            ViewBag.bs4 = new SelectList(bitems4, "Value", "Text");
            ViewBag.bs5 = new SelectList(bitems5, "Value", "Text");
            ViewBag.bs6 = new SelectList(bitems6, "Value", "Text");
            ViewBag.bs7 = new SelectList(bitems7, "Value", "Text");
            ViewBag.bs8 = new SelectList(bitems8, "Value", "Text");
            ViewBag.bs9 = new SelectList(bitems9, "Value", "Text");


            #endregion  Matric ElectiveSubjects Blind NEW 

            List<SelectListItem> itemsub6 = new List<SelectListItem>();
            itemsub6.Add(new SelectListItem { Text = "SOCIAL STUDIES", Value = "06" });
            ViewBag.SubS6 = new SelectList(itemsub6, "Value", "Text");

            List<SelectListItem> itemsub10 = new List<SelectListItem>();
            itemsub10.Add(new SelectListItem { Text = "HINDI", Value = "03" });
            itemsub10.Add(new SelectListItem { Text = "SOCIAL STUDIES", Value = "06" });
            ViewBag.SubS10 = new SelectList(itemsub10, "Value", "Text");


            ViewBag.MyBoard = objCommon.GetMatricBoard().Where(s => Convert.ToString(s.Value).ToUpper() == "P.S.E.B BOARD".ToUpper()).ToList(); ;
            ViewBag.Mon = objCommon.GetMonth();
            ViewBag.SessionYearListM1 = objCommon.GetSessionYear().Where(s => Convert.ToInt32(s.Value) <= 2018).ToList();
            ViewBag.MyWritter = objCommon.GetWritter();
            @ViewBag.DA = objCommon.GetDA();
            ViewBag.MyDist = objCommon.GetDistE();
            ViewBag.SectionList = objCommon.GetSection();
            ViewBag.Section = "0";
            string formname = "M1";
            string schlid = "";
            if (Session["SCHL"] != null)
            {
                schlid = Session["SCHL"].ToString();
            }
            else
            {
                return View(rm);
            }

            DataSet seleLastCan = objDB.SelectlastEntryCandidate(formname, schlid);
            if (seleLastCan.Tables[0].Rows.Count > 0)
            {
                //                rm.Board_Roll_Num, rm.Admission_Num,po.Candi_Name,po.Father_Name,po.Std_id
                //FROM regMasterRegular2016 rm, Personal_Info Po
                //WHERE po.Std_id = rm.Std_id and rm.std_id = (SELECT max(rm.std_id) FROM regMasterRegular2016 rm)
                @ViewBag.message = "1";
                @ViewBag.Board_Roll_Num = seleLastCan.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                @ViewBag.Admission_Num = seleLastCan.Tables[0].Rows[0]["Admission_Num"].ToString();
                @ViewBag.Candi_Name = seleLastCan.Tables[0].Rows[0]["Candi_Name"].ToString();
                @ViewBag.Father_Name = seleLastCan.Tables[0].Rows[0]["Father_Name"].ToString();
                @ViewBag.id = seleLastCan.Tables[0].Rows[0]["Std_id"].ToString();
                @ViewBag.lot = seleLastCan.Tables[0].Rows[0]["lot"].ToString();
            }
            else
            {
                @ViewBag.message = "Record Not Found";
            }
            //-----------------------------------------------------Nsqf -------------------------
            string ses = Session["Session"].ToString();
            string schlcode = Session["SCHL"].ToString();
            DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
            if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
            {
                ViewData["NSQFSCHOOL"] = "1";
            }
            else
            {
                ViewData["NSQFSCHOOL"] = "0";
            }
            string nsqfsub = null;
            DataSet nsresult = objDB.SelectMatricNsqfSub(nsqfsub); // passing Value to DBClass from model
            ViewBag.nsfq = nsresult.Tables[0];
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {
                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
            }
            ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
            //-----------------------------------------------------End Nsqf -------------------------



            return View(rm);
        }

        [SessionCheckFilter]
        [HttpPost]
        public ActionResult M1Form(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern, string subS6)
        {
            return RedirectToAction("Portal", "RegistrationPortal");

            ViewBag.YesNoListText = new AbstractLayer.DBClass().GetYesNoText().ToList();
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            ViewBag.YesNoList = new AbstractLayer.DBClass().GetYesNo().Where(s => s.Value == "Y").ToList();
            string schlDist = null;
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            DataSet result1 = objDB.SelectDist(); // passing Value to DBClass from model
            ViewBag.MyDist = result1.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> items = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
            {
                items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
            }
            // ViewBag.MyDist = items;
            ViewBag.MyDist = new SelectList(items, "Value", "Text", 047);
            ViewBag.MyBoard = objCommon.GetMatricBoard();
            ViewBag.SectionList = objCommon.GetSection();
            ViewBag.MyGroup = objCommon.GroupName();
            ViewBag.MyWritter = objCommon.GetWritter();
            //int res = 0;
            //objDB.CheckDate(Session["SCHL"].ToString(), out res);
            //ViewBag.dsts = res;.
            DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
            if (schlDistds.Tables[0].Rows.Count > 0)
            {
                schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
            }

            string admdate = "", LateAdmDate = "", StartAdmDate = "";
            objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
            ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;

            string session = null;
            string idno = null;
            string schl = null;
            if (Session["Session"] != null)
            {
                session = Session["Session"].ToString();
                idno = Session["IDNO"].ToString();
                schl = Session["SCHL"].ToString();
            }
            else
            {
                return RedirectToAction("Index", "Login");
            }


            //Check server side validation using data annotation
            if (ModelState.IsValid)
            {
                string group = rm.MyGroup;
                string dist = frm["MyDist"].ToString();
                string Tehsil = frm["MyTeh"].ToString();
                //string Mygroup = frm["MyGroup"];
                string formName = "M1";

                if (rm.file != null)
                {
                    stdPic = Path.GetFileName(rm.file.FileName);
                }
                else
                {
                    //Response.Write("<script>alert('Please Upload Photo')</script>");
                    //return View();

                }
                if (rm.std_Sign != null)
                {
                    stdSign = Path.GetFileName(rm.std_Sign.FileName);
                }
                else
                {
                    //Response.Write("<script>alert('Please Upload sign')</script>");
                    //return View();
                }



                // Start Subject Master
                DataTable dtMatricSubject = new DataTable();
                dtMatricSubject.Columns.Add(new DataColumn("CLASS", typeof(string)));
                dtMatricSubject.Columns.Add(new DataColumn("SUB", typeof(string)));
                dtMatricSubject.Columns.Add(new DataColumn("SUBNM", typeof(string)));
                dtMatricSubject.Columns.Add(new DataColumn("SUBABBR", typeof(string)));
                dtMatricSubject.Columns.Add(new DataColumn("MEDIUM", typeof(string)));
                dtMatricSubject.Columns.Add(new DataColumn("SUBCAT", typeof(string)));
                dtMatricSubject.Columns.Add(new DataColumn("SUB_SEQ", typeof(int)));
                DataRow dr = null;
                int j = 0;
                for (int i = 1; i <= 12; i++)
                {
                    dr = dtMatricSubject.NewRow();
                    dr["CLASS"] = 2;
                    DataSet dsSub = new DataSet();
                    dr["SUBNM"] = "";
                    dr["SUBABBR"] = "";

                    if (rm.DA == "N.A.")
                    {
                        if (i == 1)
                        {
                            if (rm.subm1 != null)
                            {
                                dr["MEDIUM"] = rm.subm1;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.subS1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.subS1 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS1.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();


                            }

                        }
                        else if (i == 2)
                        {
                            dr["SUB"] = rm.subS2; dr["MEDIUM"] = rm.subM2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.subS2 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS2.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 3)
                        {
                            if (rm.subm3 != null)
                            {
                                dr["MEDIUM"] = rm.subm3;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.subS3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.subS3 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS3.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 4)
                        {
                            dr["SUB"] = rm.subS4; dr["MEDIUM"] = rm.subM4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.subS4 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS4.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 5)
                        {
                            dr["SUB"] = rm.subS5; dr["MEDIUM"] = rm.subM5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.subS5 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS5.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 6)
                        {
                            dr["SUB"] = rm.subS6; dr["MEDIUM"] = rm.subM6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.subS6 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS6.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        //If DA=N.A. then fix sub7=Computer Science, sub8-Welcome Life and sub9=Elective Subject/NSQF subject
                        else if (i == 7)
                        {
                            //  dr["SUB"] = rm.subS7; dr["MEDIUM"] = rm.subM7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";

                            rm.subS7 = "63"; //sub7=Computer Science
                            dr["SUB"] = rm.subS7; dr["MEDIUM"] = rm.subM7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.subS7 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS7.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 8)
                        {
                            rm.subS8 = "92";// sub8-Welcome Life
                            dr["SUB"] = rm.subS8; dr["MEDIUM"] = rm.subM8; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.subS8 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS8.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 9)
                        {
                            if (rm.m9 != null)
                            {
                                dr["MEDIUM"] = rm.m9;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.s9; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.s9 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.s9.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 10)
                        {
                            if (rm.m10 != null)
                            {
                                dr["MEDIUM"] = rm.m10;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.s10; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "A";
                            if (rm.s10 != null)
                            {
                                if (rm.s10 == "0")
                                {
                                }
                                else
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.s10.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }

                            }
                        }
                        else if (i == 11)
                        {
                            if (rm.m11 != null)
                            {
                                dr["MEDIUM"] = rm.m11;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.s11; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "A";
                            if (rm.s11 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.s11.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 12)
                        {
                            if (rm.m12 != null)
                            {
                                dr["MEDIUM"] = rm.m12;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.s12; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "A";
                            if (rm.s12 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.s12.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        j = i;
                    }
                    else
                    {
                        if (i == 1)
                        {
                            if (rm.bm1 != null)
                            {
                                dr["MEDIUM"] = rm.bm1;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }

                            dr["SUB"] = rm.subbS1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.subbS1 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS1.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 2)
                        {
                            dr["SUB"] = rm.subbS2; dr["MEDIUM"] = rm.bm2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.subbS2 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS2.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 3)
                        {
                            dr["SUB"] = rm.subbS3; dr["MEDIUM"] = rm.bm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.subbS3 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS3.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 4)
                        {
                            dr["SUB"] = rm.subbS4; dr["MEDIUM"] = rm.bm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.subbS4 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS4.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 5)
                        {
                            dr["SUB"] = rm.subbS5; dr["MEDIUM"] = rm.bm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.subbS5 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS5.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 6)
                        {
                            dr["SUB"] = rm.subbS6; dr["MEDIUM"] = rm.bm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.subbS6 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS6.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 7)
                        {
                            dr["SUB"] = rm.subbS7; dr["MEDIUM"] = rm.bm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.subbS7 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS7.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 8)
                        {
                            dr["SUB"] = rm.subbS8; dr["MEDIUM"] = rm.bm8; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.subbS8 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS8.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 9)
                        {
                            dr["SUB"] = rm.subbS9; dr["MEDIUM"] = rm.bm9; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.subbS9 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS9.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        j = i;

                    }
                    dtMatricSubject.Rows.Add(dr);

                    if (rm.DA == "N.A.")
                    {
                        if (i == 1)
                        {
                            dr = dtMatricSubject.NewRow();
                            dr["CLASS"] = 2;
                            //DataSet dsSub = new DataSet();
                            dr["SUBNM"] = "";
                            dr["SUBABBR"] = "";
                            dr["MEDIUM"] = "Medium";
                            if (rm.subS1 == "01")
                            {
                                dr["SUB"] = "72"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                if (dr["SUB"] != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }

                            }
                            else
                            {
                                dr["SUB"] = "73"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                if (dr["SUB"] != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }

                            }

                            dtMatricSubject.Rows.Add(dr);

                        }
                        //if (i == 6)
                        //{
                        //    dr = dtMatricSubject.NewRow();
                        //    dr["CLASS"] = 2;
                        //    //DataSet dsSub = new DataSet();
                        //    dr["SUBNM"] = "";
                        //    dr["SUBABBR"] = "";
                        //    dr["MEDIUM"] = "Medium";
                        //    if (rm.NsqfsubS6 != "NO" && rm.NsqfsubS6 != null && rm.NsqfsubS6 != "")
                        //    {
                        //        dr["SUB"] = "85"; dr["SUB_SEQ"] = 12; dr["SUBCAT"] = "R";
                        //        if (dr["SUB"] != null)
                        //        {
                        //            dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                        //            dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                        //            dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                        //        }
                        //    }
                        //    //// dtMatricSubject.Rows.Add(dr); HOT (85,205) subject droped by PSEB , So don't insert HOT (85,205) if NSQF Selected (M1,M2,T1,T2)
                        //}

                    }
                    else
                    {
                        if (i == 1)
                        {
                            dr = dtMatricSubject.NewRow();
                            dr["CLASS"] = 2;
                            //DataSet dsSub = new DataSet();
                            dr["SUBNM"] = "";
                            dr["SUBABBR"] = "";
                            dr["MEDIUM"] = "Medium";
                            if (rm.subbS1 == "01")
                            {
                                dr["SUB"] = "72"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                if (dr["SUB"] != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }

                            }
                            else
                            {
                                dr["SUB"] = "73"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                if (dr["SUB"] != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }

                            }
                            dtMatricSubject.Rows.Add(dr);
                        }

                    }



                }

                dtMatricSubject.AcceptChanges();
                //dtMatricSubject = dtMatricSubject.AsEnumerable().Where(r => r.ItemArray[1].ToString() != "").CopyToDataTable();
                dtMatricSubject = dtMatricSubject.AsEnumerable().Where(r => (r.ItemArray[1].ToString() != "") && (r.ItemArray[1].ToString() != "0")).CopyToDataTable();
                // End Subject Master

                var duplicates = dtMatricSubject.AsEnumerable().GroupBy(r => r[2]).Where(gr => gr.Count() > 1).ToList();
                if (duplicates.Any())
                {
                    ViewBag.Duplicate = "Duplicate Subjects: " + String.Join(", ", duplicates.Select(dupl => dupl.Key));
                    ViewData["result"] = 10;
                    return View(rm);
                }

                var DTNoOfSub = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") != "72" && r.Field<string>("SUB") != "73" && r.Field<string>("SUB") != "205").ToList();

                int NoOfSub = DTNoOfSub.Count();
                if (rm.DA == "N.A.")
                {
                    if (NoOfSub < 9)
                    {
                        ViewData["result"] = 15;
                        return View(rm);
                    }
                }
                else
                {
                    if (NoOfSub < 7)
                    {
                        ViewData["result"] = 15;
                        return View(rm);
                    }
                }

                //IsNRICandidate
                if (rm.IsNRICandidate == true && (rm.DocProofNRICandidates != null || !string.IsNullOrEmpty(rm.ProofNRICandidates)))
                {
                    // rm.IsNRICandidate = true;

                    rm.IsNRICandidate = false;
                    rm.ProofNRICandidates = "";
                    rm.DocProofNRICandidates = null;
                }
                else
                {
                    rm.IsNRICandidate = false;
                    rm.ProofNRICandidates = "";
                    rm.DocProofNRICandidates = null;
                }
                rm.IsImportedStudent = "0";
                //rm.OTID = 5;
                rm.Imptblname = "NewEntry";

                if (!string.IsNullOrEmpty(rm.DOB))
                {
                    rm.DOB = AbstractLayer.StaticDB.DateInFormat(rm.DOB) == true ? rm.DOB : "";
                }
                else { rm.DOB = ""; }

                //NsqfPattern
                if (string.IsNullOrEmpty(NSQFsubS6))
                {
                    //if (!string.IsNullOrEmpty(S9))
                    //{
                    //    // NSQFsubS6 = S9;
                    //}
                }
                if (string.IsNullOrEmpty(NSQFsubS6))
                {
                    rm.NSQFPattern = "";
                }
                else if (NSQFsubS6 == "NO")
                {
                    rm.NSQFPattern = string.IsNullOrEmpty(NsqfPattern) ? "2" : NsqfPattern;
                }
                else
                {
                    if (!string.IsNullOrEmpty(NSQFsubS6) && !string.IsNullOrEmpty(PreNSQF) && string.IsNullOrEmpty(NsqfPattern))
                    {
                        NsqfPattern = "2";
                    }
                    //if (string.IsNullOrEmpty(NsqfPattern))
                    //{
                    //    ViewData["result"] = "PATTERN";
                    //    return View(rm);
                    //}
                    //rm.NSQFPattern = NsqfPattern;
                }
                //NsqfPattern
                // Check NSQF Subject exists in Subject List after NSQF Current Class Selection 
                if (!string.IsNullOrEmpty(NSQFsubS6))
                {
                    if (NSQFsubS6.ToUpper() != "NO".ToUpper())
                    {
                        rm.NsqfsubS6 = NSQFsubS6;
                        var NSQFSubExists = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") == NSQFsubS6).Count() > 0;
                        if (!NSQFSubExists)
                        {
                            ViewData["resultUpdate"] = "NSQFSUBWANT";
                            return View(rm);
                        }

                    }
                }
                string result = objDB.Ins_M_Form_Data(rm, frm, formName, session, idno, schl, dtMatricSubject);
                string filepathtosave = "";
                if (result == "0" || result == null)
                {
                    //--------------Not saved
                    ViewData["result"] = 0;
                }
                else if (result == "-1")
                {
                    //-----alredy exist
                    ViewData["result"] = -1;
                }
                else
                {
                    ViewData["result"] = 1;
                    //----Data Inserted Successfully
                    //  dist = Session["SCHOOLDIST"].ToString();
                    if (rm.file != null)
                    {
                        //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                        //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                        //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"));
                        //if (!Directory.Exists(FilepathExist))
                        //{
                        //    Directory.CreateDirectory(FilepathExist);
                        //}
                        //rm.file.SaveAs(path);
                        string Orgfile = result + "P" + ".jpg";
                        using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                        {
                            using (var newMemoryStream = new MemoryStream())
                            {
                                var uploadRequest = new TransferUtilityUploadRequest
                                {
                                    InputStream = rm.file.InputStream,
                                    Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                    BucketName = BUCKET_NAME,
                                    CannedACL = S3CannedACL.PublicRead
                                };

                                var fileTransferUtility = new TransferUtility(client);
                                fileTransferUtility.Upload(uploadRequest);
                            }
                        }

                        filepathtosave = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                        ViewBag.ImageURL = filepathtosave;

                        string PhotoName = formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                        string type = "P";
                        string IsNew = "YES";
                        string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                    }
                    if (rm.std_Sign != null)
                    {
                        //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                        //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"));
                        //if (!Directory.Exists(FilepathExist))
                        //{
                        //    Directory.CreateDirectory(FilepathExist);
                        //}
                        //rm.std_Sign.SaveAs(path);
                        string Orgfile = result + "S" + ".jpg";
                        using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                        {
                            using (var newMemoryStream = new MemoryStream())
                            {
                                var uploadRequest = new TransferUtilityUploadRequest
                                {
                                    InputStream = rm.std_Sign.InputStream,
                                    Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                    BucketName = BUCKET_NAME,
                                    CannedACL = S3CannedACL.PublicRead
                                };

                                var fileTransferUtility = new TransferUtility(client);
                                fileTransferUtility.Upload(uploadRequest);
                            }
                        }

                        filepathtosave = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                        ViewBag.ImageURL = filepathtosave;

                        string PhotoName = formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                        string type = "S";
                        string IsNew = "YES";
                        string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                    }


                    //ViewBag.Message = "File has been uploaded successfully";
                    ModelState.Clear();
                    //--For Showing Message---------//

                }
            }
            else
            {
                var errors = ModelState.Where(x => x.Value.Errors.Count > 0)
                    .Select(x => new { x.Key, x.Value.Errors }).ToArray();

            }
            return M1Form();
        }

        [SessionCheckFilter]
        public ActionResult M1Formgrid(RegistrationSearchModelList registrationSearchModel)
        {
            string schl = Session["SCHL"].ToString();
            int status = new AbstractLayer.RegistrationDB().CheckSchoolAssignForm(1, schl);
            if (status <= 0)
            {
                return RedirectToAction("Index", "Home");
            }
            DataSet dsOut = new DataSet();
            registrationSearchModel.RegistrationSearchModel = AbstractLayer.RegistrationDB.GetStudentRecordsSearchPM("M1", schl, out dsOut);
            registrationSearchModel.StoreAllData = dsOut;
            return View(registrationSearchModel);
        }


        [SessionCheckFilter]
        public ActionResult M1FormModify(string id)
        {
            ViewBag.YesNoListText = new AbstractLayer.DBClass().GetYesNoText().ToList();
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            ViewBag.YesNoListCP = new AbstractLayer.DBClass().GetYesNo().ToList();
            ViewBag.StaffList = new AbstractLayer.RegistrationDB().GetStaffListBySCHL(0, Session["SCHL"].ToString(), 0);
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }

            }

            if (id == null)
            {
                return RedirectToAction("M1Formgrid", "RegistrationPortal");
            }

            ViewBag.YesNoList = new AbstractLayer.DBClass().GetYesNo().Where(s => s.Value == "Y").ToList();
            ViewBag.SessionYearListM1 = objCommon.GetSessionYear().Where(s => Convert.ToInt32(s.Value) <= 2018).ToList();

            #region Matric_ElectiveSubjects_Blind_NEW 

            DataSet ds1 = objDB.Matric_ElectiveSubjects_Blind_NEW();
            //ViewBag.SubSb9 = ds1.Tables[0];

            // Blind SUB -2
            List<SelectListItem> bitems2 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[0].Rows)
            {
                bitems2.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB -3
            List<SelectListItem> bitems3 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[1].Rows)
            {
                bitems3.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB -4
            List<SelectListItem> bitems4 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[2].Rows)
            {
                bitems4.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -5
            List<SelectListItem> bitems5 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[3].Rows)
            {
                bitems5.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -6
            List<SelectListItem> bitems6 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[4].Rows)
            {
                bitems6.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -7
            List<SelectListItem> bitems7 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[5].Rows)
            {
                bitems7.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB - 8
            List<SelectListItem> bitems8 = new List<SelectListItem>();
            //foreach (System.Data.DataRow dr in ds1.Tables[6].Rows)
            //{
            //    bitems8.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            //}
            // Blind SUB - 9
            List<SelectListItem> bitems9 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[6].Rows)
            {
                bitems9.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }


            ViewBag.bs2 = new SelectList(bitems2, "Value", "Text");
            ViewBag.bs3 = new SelectList(bitems3, "Value", "Text");
            ViewBag.bs4 = new SelectList(bitems4, "Value", "Text");
            ViewBag.bs5 = new SelectList(bitems5, "Value", "Text");
            ViewBag.bs6 = new SelectList(bitems6, "Value", "Text");
            ViewBag.bs7 = new SelectList(bitems7, "Value", "Text");
            ViewBag.bs8 = new SelectList(bitems8, "Value", "Text");
            ViewBag.bs9 = new SelectList(bitems9, "Value", "Text");


            #endregion  Matric ElectiveSubjects Blind NEW 



            string nsqfsub = null;
            DataSet nsresult = objDB.SelectMatricNsqfSub(nsqfsub); // passing Value to DBClass from model
            ViewBag.nsfq = nsresult.Tables[0];
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {
                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
            }
            ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");


            List<SelectListItem> itemsub6 = new List<SelectListItem>();
            itemsub6.Add(new SelectListItem { Text = "SOCIAL STUDIES", Value = "06" });
            ViewBag.SubS6 = new SelectList(itemsub6, "Value", "Text");

            List<SelectListItem> itemsub10 = new List<SelectListItem>();
            itemsub10.Add(new SelectListItem { Text = "HINDI", Value = "03" });
            itemsub10.Add(new SelectListItem { Text = "SOCIAL STUDIES", Value = "06" });
            ViewBag.SubS10 = new SelectList(itemsub10, "Value", "Text");

            ViewBag.BM = ViewBag.BM1m = ViewBag.BM3m = ViewBag.BM4m = ViewBag.BM5m = ViewBag.BM6m = ViewBag.BM7m = ViewBag.BM8m = ViewBag.BM9m = objCommon.GetMediumAll();
            RegistrationModels rm = new RegistrationModels();
            string formname = "M1";
            if (id != null)
            {
                id = encrypt.QueryStringModule.Decrypt(id);
                DataSet ds = objDB.SearchStudentGetByData_Subject(id, formname);
                if (ds == null || ds.Tables[0].Rows.Count == 0)
                {
                    return RedirectToAction("M1Formgrid", "RegistrationPortal");
                }
                if (ds.Tables[0].Rows.Count > 0)
                {
                    rm.old_std_Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                    rm.old_std_sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                    rm.IsSmartPhone = ds.Tables[0].Rows[0]["IsSmartPhone"].ToString();
                    rm.NSQFPattern = ds.Tables[0].Rows[0]["NSQFPattern"].ToString();
                    rm.IsImportedStudent = ds.Tables[0].Rows[0]["IsImportedStudent"].ToString();

                    rm.IsUnlockForm = ds.Tables[0].Rows[0]["IsUnlockForm"].ToString();

                    // DataSet ds = objDB.SearchStudentGetByData(id);
                    rm.Std_id = Convert.ToInt32(ds.Tables[0].Rows[0]["Std_id"].ToString());
                    rm.SCHL = ds.Tables[0].Rows[0]["SCHL"].ToString();
                    //rm.IDNO = ds.Tables[0].Rows[0]["IDNO"].ToString();
                    rm.Category = ds.Tables[0].Rows[0]["Category"].ToString();
                    ViewBag.catg = objCommon.GetMCategories();


                    rm.Board = "P.S.E.B BOARD";
                    ViewBag.MyBoard = objCommon.GetMatricBoard();
                    if (rm.IsImportedStudent != "1")
                    {
                        ViewBag.MyBoard = objCommon.GetMatricBoard().Where(s => Convert.ToString(s.Value).ToUpper() == "P.S.E.B BOARD".ToUpper()).ToList();

                    }
                    rm.Other_Board = ds.Tables[0].Rows[0]["Other_Board"].ToString();

                    rm.Board_Roll_Num = ds.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                    rm.Prev_School_Name = ds.Tables[0].Rows[0]["Prev_School_Name"].ToString();

                    rm.Month = ds.Tables[0].Rows[0]["Month"].ToString();
                    ViewBag.Mon = objCommon.GetMonthM1_T1_Modify();

                    rm.Year = ds.Tables[0].Rows[0]["Year"].ToString();
                    // AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                    ViewBag.SessionYearList = objCommon.GetSessionYear();

                    rm.MyGroup = ds.Tables[0].Rows[0]["Group_name"].ToString().Trim();
                    ViewBag.MyGroup1 = objCommon.GroupName();

                    rm.AWRegisterNo = ds.Tables[0].Rows[0]["AWRegisterNo"].ToString();
                    rm.Admission_Num = ds.Tables[0].Rows[0]["Admission_Num"].ToString();
                    rm.requestID = ds.Tables[0].Rows[0]["requestID"].ToString();
                    if (rm.requestID != "" && rm.requestID != "0")
                    {
                        rm.IsLateAdm = true;
                        ViewBag.admdate = ds.Tables[0].Rows[0]["ApprovalUpto"].ToString(); ;
                    }
                    else
                    {
                        rm.IsLateAdm = false;
                    }
                    rm.Admission_Date = ds.Tables[0].Rows[0]["Admission_Date"].ToString();
                    rm.Class_Roll_Num_Section = ds.Tables[0].Rows[0]["Class_Roll_Num_Section"].ToString();
                    rm.Candi_Name = ds.Tables[0].Rows[0]["Candi_Name"].ToString();
                    rm.Candi_Name_P = ds.Tables[0].Rows[0]["Candi_Name_P"].ToString();
                    rm.Father_Name = ds.Tables[0].Rows[0]["Father_Name"].ToString();
                    rm.Father_Name_P = ds.Tables[0].Rows[0]["Father_Name_P"].ToString();
                    rm.Mother_Name = ds.Tables[0].Rows[0]["Mother_Name"].ToString();
                    rm.Mother_Name_P = ds.Tables[0].Rows[0]["Mother_Name_P"].ToString();

                    rm.Caste = ds.Tables[0].Rows[0]["Caste"].ToString();
                    //ViewBag.Caste = objCommon.GetCaste();
                    @ViewBag.MyCastList = objCommon.GetCaste();

                    rm.Gender = ds.Tables[0].Rows[0]["Gender"].ToString();


                    //rm.Differently_Abled = ds.Tables[0].Rows[0]["Differently_Abled"].ToString();
                    rm.DA = rm.Differently_Abled = ds.Tables[0].Rows[0]["Differently_Abled"].ToString();
                    ViewBag.DAb = objCommon.GetDA();


                    rm.Religion = ds.Tables[0].Rows[0]["Religion"].ToString();
                    ViewBag.RE = objCommon.GetReligion();

                    rm.DOB = ds.Tables[0].Rows[0]["DOB"].ToString();
                    rm.Mobile = ds.Tables[0].Rows[0]["Mobile"].ToString();

                    rm.Father_MobNo = ds.Tables[0].Rows[0]["F_MobNo"].ToString();
                    rm.Father_Occup = ds.Tables[0].Rows[0]["F_Occup"].ToString();
                    rm.Mother_MobNo = ds.Tables[0].Rows[0]["M_MobNo"].ToString();
                    rm.Mother_Occup = ds.Tables[0].Rows[0]["M_Occup"].ToString();


                    rm.Belongs_BPL = ds.Tables[0].Rows[0]["Belongs_BPL"].ToString();
                    rm.E_punjab_Std_id = ds.Tables[0].Rows[0]["E_punjab_Std_id"].ToString();
                    rm.Aadhar_num = ds.Tables[0].Rows[0]["Aadhar_num"].ToString();
                    if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 28)
                    {
                        rm.AadharEnroll = "Enrollmemt";
                    }
                    else if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 12)
                    {
                        rm.AadharEnroll = "Aadhar";
                    }
                    else
                    {
                        rm.AadharEnroll = "N.A.";
                    }
                    rm.Address = ds.Tables[0].Rows[0]["Address"].ToString();
                    rm.LandMark = ds.Tables[0].Rows[0]["LandMark"].ToString();
                    rm.Block = ds.Tables[0].Rows[0]["Block"].ToString();
                    string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();


                    rm.MyDistrict = ds.Tables[0].Rows[0]["District"].ToString();
                    //rm.District = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString());
                    ViewBag.MyDist = objCommon.GetDistE();

                    rm.Tehsil = Convert.ToInt32(ds.Tables[0].Rows[0]["Tehsil"].ToString() == "" ? "0" : ds.Tables[0].Rows[0]["Tehsil"].ToString());
                    int dist = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString() == "" ? "0" : ds.Tables[0].Rows[0]["District"].ToString());

                    DataSet result1 = objDB.SelectAllTehsil(dist);
                    List<SelectListItem> TehList = new List<SelectListItem>();
                    if (result1.Tables[0].Rows.Count > 0)
                    {
                        ViewBag.MyTeh = result1.Tables[0];

                        foreach (System.Data.DataRow dr in ViewBag.MyTeh.Rows)
                        {

                            TehList.Add(new SelectListItem { Text = @dr["TEHSIL"].ToString(), Value = @dr["TCODE"].ToString() });
                        }
                        ViewBag.MyTeh = TehList;
                    }
                    else
                    {

                        TehList.Add(new SelectListItem { Text = "--Select--", Value = "0" });
                    }
                    ViewBag.MyTeh = TehList;

                    rm.PinCode = ds.Tables[0].Rows[0]["PinCode"].ToString();
                    int IsPrevSchoolSelf = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPrevSchoolSelf"].ToString() == "" ? "0" : ds.Tables[0].Rows[0]["IsPrevSchoolSelf"].ToString());
                    if (IsPrevSchoolSelf == 1)
                    {
                        rm.IsPrevSchoolSelf = true;
                    }
                    else
                    {
                        rm.IsPrevSchoolSelf = false;
                    }
                    int IsPSEBRegNum = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPSEBRegNum"].ToString() == "" ? "0" : ds.Tables[0].Rows[0]["IsPSEBRegNum"].ToString());
                    if (IsPSEBRegNum == 1)
                    {
                        rm.IsRegNoExists = "Y";
                        rm.IsPSEBRegNum = true;
                        rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                    }
                    else
                    {
                        rm.IsRegNoExists = "N";
                        rm.IsPSEBRegNum = false;
                        rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                    }


                    //-----------------------------------------------------Nsqf -------------------------
                    rm.PreNSQF = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();
                    string ses = Session["Session"].ToString();
                    string schlcode = Session["SCHL"].ToString();
                    DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);


                    if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                    {
                        ViewData["NSQFSCHOOL"] = "1";
                        ViewBag.NSQFSTUDENT = "1";
                    }
                    else
                    {
                        ViewData["NSQFSCHOOL"] = "0";
                        ViewBag.NSQFSTUDENT = "0";
                    }

                    //-----------------------------For NSQF SUBJECTS----------------
                    string sid = id;
                    DataSet isCHkNSQF = objDB.CHkNSQFStudents(sid);

                    if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
                    {
                        DataSet ds2 = objDB.ElectiveSubjects();
                        ViewBag.SubS9 = ds2.Tables[0];
                        // for dislaying message after saving storing output.
                        List<SelectListItem> items = new List<SelectListItem>();
                        foreach (System.Data.DataRow dr in ViewBag.SubS9.Rows)
                        {
                            //if (@dr["TYPE"].ToString()== "PRE-VOCATIONAL")
                            //{

                            //}                         
                            items.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                        }
                        ViewBag.SubS10m = ViewBag.SubS9m = ViewBag.SubS9 = new SelectList(items, "Value", "Text");
                        ViewBag.S10 = new SelectList(items, "Value", "Text");
                        //-----------------------

                        ViewData["NSQFSTUDENT"] = "1";
                        if (rm.NsqfsubS6 == null)
                        {
                            rm.NsqfsubS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                        }
                        DataSet nsTextresult = objDB.GetNSQFVIEWSUBJECTMATRICSUBJECT(rm.NsqfsubS6, rm.PreNSQF);
                        List<SelectListItem> nssub6 = new List<SelectListItem>();

                        if (nsTextresult.Tables[0].Rows.Count > 0)
                        {
                            nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            nssub6.Add(new SelectListItem { Text = nsTextresult.Tables[0].Rows[0]["Name_ENG"].ToString(), Value = rm.NsqfsubS6 });
                            ViewBag.nsqfcatg = nssub6;
                        }
                        else
                        {

                            nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            ViewBag.nsqfcatg = nssub6;
                        }
                        //if (rm.PreNSQF == "NO")
                        //{
                        //    nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                        //    ViewBag.nsqfcatg = nssub6;

                        //    if (!string.IsNullOrEmpty(rm.NsqfsubS6))
                        //    {
                        //        if (rm.NsqfsubS6 != "NO")
                        //        {
                        //            nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                        //            nssub6.Add(new SelectListItem { Text = nsTextresult.Tables[0].Rows[0]["Name_ENG"].ToString(), Value = rm.NsqfsubS6 });
                        //            ViewBag.nsqfcatg = nssub6;
                        //        }
                        //        else
                        //        {

                        //            nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                        //            ViewBag.nsqfcatg = nssub6;
                        //        }
                        //    }
                        //}
                        //else
                        //{
                        //    if (nsTextresult.Tables[0].Rows.Count > 0)
                        //    {
                        //        nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                        //        nssub6.Add(new SelectListItem { Text = nsTextresult.Tables[0].Rows[0]["Name_ENG"].ToString(), Value = rm.NsqfsubS6 });
                        //        ViewBag.nsqfcatg = nssub6;
                        //    }
                        //    else
                        //    {

                        //        nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                        //        ViewBag.nsqfcatg = nssub6;
                        //    }

                        //}



                    }
                    else
                    {
                        DataSet ds2 = objDB.ElectiveSubjects();
                        ViewBag.SubS9 = ds2.Tables[0];
                        // for dislaying message after saving storing output.
                        List<SelectListItem> items = new List<SelectListItem>();
                        foreach (System.Data.DataRow dr in ViewBag.SubS9.Rows)
                        {
                            if (@dr["TYPE"].ToString() == "GRADING SUBJECT")
                            {
                                items.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                            }

                        }
                        ViewBag.SubS10m = ViewBag.SubS9m = ViewBag.SubS9 = new SelectList(items, "Value", "Text");
                        ViewBag.S10 = new SelectList(items, "Value", "Text");
                        //--------------
                        List<SelectListItem> nssub6 = new List<SelectListItem>();
                        nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                        ViewBag.nsqfcatg = nssub6;
                    }


                    //--------------------------------End NSQF SUBJECTS-------------

                    //-----------------------------------------------------End Nsqf -------------------------
                    rm.NSQF = ds.Tables[0].Rows[0]["nsqf_flag"].ToString();
                    rm.scribeWriter = ds.Tables[0].Rows[0]["wantwriter"].ToString();
                    ViewBag.MyWritter = objCommon.GetWritter();

                    rm.CandiMedium = ds.Tables[0].Rows[0]["CandStudyMedium"].ToString();
                    rm.DP = ds.Tables[0].Rows[0]["DisabilityPercent"].ToString();
                    //------------------------------Fill Subjects----------------//


                    if (ds.Tables[1].Rows.Count > 0)
                    {
                        for (int i = 0; i < ds.Tables[1].Rows.Count; i++)
                        {
                            if (rm.DA == "N.A.")
                            {
                                if (i == 0)
                                {
                                    rm.subS1 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.subm1 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.subS2 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.subM2 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 2)
                                {
                                    rm.subS3 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.subm3 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 3)
                                {
                                    rm.subS4 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.subM4 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 4)
                                {
                                    rm.subS5 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.subM5 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 5)
                                {
                                    rm.subS6 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.subM6 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                    rm.NsqfsubS6Upd = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.NsqfsubS6 = ds.Tables[1].Rows[5]["SUB"].ToString();
                                    rm.NsqfsubS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                                }
                                else if (i == 6)
                                {
                                    rm.subS7 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.subM7 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 7)
                                {
                                    rm.s9 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.s9);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.m9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.SubS9m = iMEdiumList;
                                    //rm.subS8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.subM8 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 8 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {

                                    rm.s10 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.ns10 = rm.s10;
                                    //  rm.m10 =  itemMediumE.Where(s => s.Text == ds.Tables[1].Rows[9]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.s10);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.m10 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.SubS10m = rm.m10;//iMEdiumList;


                                    //rm.s9 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //DataSet SelectedMediumList = objDB.SelectS1(rm.s9);
                                    //List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    //rm.m9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    //ViewBag.SubS9m = iMEdiumList;
                                }
                                else if (i == 9 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.s11 = ds.Tables[1].Rows[i]["SUB"].ToString();

                                    //rm.s10 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.ns10 = rm.s10;
                                    ////  rm.m10 =  itemMediumE.Where(s => s.Text == ds.Tables[1].Rows[9]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    //DataSet SelectedMediumList = objDB.SelectS1(rm.s10);
                                    //List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    //rm.m10 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    //ViewBag.SubS10m = rm.m10;//iMEdiumList;

                                }
                                else if (i == 10 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.s12 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.s11 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.m11 =  itemMediumE.Where(s => s.Text == ds.Tables[1].Rows[10]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                }
                                else if (i == 11)
                                {
                                    //rm.s12 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    // rm.m12 =  itemMediumE.Where(s => s.Text == ds.Tables[1].Rows[11]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                }


                            }
                            else
                            {
                                if (i == 0 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.subbS1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                    rm.bm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                }
                                else if (i == 1 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.subbS2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                    // rm.bM1 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[1]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();

                                    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS2);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.bm2 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[1]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.BM1m = iMEdiumList;
                                }
                                else if (i == 2 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.subbS3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                    // rm.bm3 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[2]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS3);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.bm3 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[2]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.BM3m = iMEdiumList;
                                }
                                else if (i == 3 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.subbS4 = ds.Tables[1].Rows[3]["SUB"].ToString();
                                    // rm.bm4 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[3]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS4);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.bm4 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[3]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.BM4m = iMEdiumList;
                                }
                                else if (i == 4 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.subbS5 = ds.Tables[1].Rows[4]["SUB"].ToString();
                                    // rm.bm5 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[4]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS5);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.bm5 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[4]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.BM5m = iMEdiumList;
                                }
                                else if (i == 5 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.subbS6 = ds.Tables[1].Rows[5]["SUB"].ToString();
                                    //  rm.bm6 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[5]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS6);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.bm6 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[5]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.BM6m = iMEdiumList;
                                }

                                else if (i == 6 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.subbS7 = ds.Tables[1].Rows[6]["SUB"].ToString();
                                    // rm.bm7 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[6]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS7);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.bm7 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[6]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.BM7m = iMEdiumList;
                                }
                                //else if (i == 7 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                //{
                                //    rm.subbS8 = ds.Tables[1].Rows[7]["SUB"].ToString();
                                //    // rm.bm8 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[7]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                //    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS8);
                                //    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                //    rm.bm8 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[7]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                //    ViewBag.BM8m = iMEdiumList;
                                //}
                                else if (i == 7 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {

                                    rm.subbS9 = ds.Tables[1].Rows[7]["SUB"].ToString();
                                    //rm.bm9 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[8]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS9);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.bm9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[7]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.BM9m = iMEdiumList;

                                    //rm.s9 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //DataSet SelectedMediumList = objDB.SelectS1(rm.s9);
                                    //List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    //rm.m9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    //ViewBag.SubS9m = iMEdiumList;
                                    //rm.subS8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.subM8 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();


                                    //rm.s9  = ds.Tables[1].Rows[7]["SUB"].ToString();
                                    ////rm.bm9 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[8]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    //DataSet SelectedMediumList = objDB.SelectS1(rm.subbS9);
                                    //List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    //rm.bm9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[7]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    //ViewBag.BM9m = iMEdiumList;
                                }
                            }
                        }
                    }

                    int IsPro = Convert.ToInt32(ds.Tables[0].Rows[0]["Provisional"].ToString() == "" ? "0" : ds.Tables[0].Rows[0]["Provisional"].ToString());
                    if (IsPro == 1)
                    {
                        rm.Provisional = true;
                    }
                    else
                    {
                        rm.Provisional = false;
                    }



                    //--------------------------------------NSQF------------------------------------//

                    #region Photo and Sign
                    string filePath = "";
                    string filePathSign = "";
                    string Upload = System.Configuration.ConfigurationManager.AppSettings["Upload"];
                    // string UploadView = System.Configuration.ConfigurationManager.AppSettings["UploadView"];

                    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["std_Photo"].ToString() != "")
                    {
                        //  not imported
                        rm.checkCategory = "";
                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    }
                    else
                    {
                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                        //int photocount = 0;

                        //string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                        //if (oldyear.ToString() == "2023")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                        //        {
                        //            photocount = 1;
                        //            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                        //            filePath = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                        //            // filePath =  UploadView.ToString() +  "\upload2022\ + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        //    }
                        //}
                        //else if (oldyear.ToString() == "2022")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                        //        {
                        //            photocount = 1;
                        //            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                        //            filePath = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                        //            // filePath =  UploadView.ToString() +  "\upload2022\ + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        //    }
                        //}
                        //else if (oldyear.ToString() == "2021")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                        //        {
                        //            photocount = 1;
                        //            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                        //            filePath = @"C:\ClusterStorage\Volume1\upload\upload2020\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2020/", "");
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        //    }
                        //}
                        //else if (oldyear.ToString() == "2020")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                        //        {
                        //            photocount = 1;
                        //            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                        //            filePath = @"C:\ClusterStorage\Volume1\upload\upload2019\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2019", "");

                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        //    }
                        //}
                        //else
                        //{
                        //    if (photocount == 0)
                        //    {
                        //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        //    }
                        //}
                    }
                    //---------------------------------------------------------For Sign------------------------------------------

                    if (ds.Tables[0].Rows[0]["std_sign"].ToString() != null && ds.Tables[0].Rows[0]["std_sign"].ToString() != "")
                    {
                        //  not imported
                        rm.checkCategory = "";
                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }
                    else
                    {
                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();


                        //int signcount = 0;
                        //string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                        //if (oldyear.ToString() == "2023")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                        //        {
                        //            signcount = 1;
                        //            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                        //            filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                        //    }
                        //}
                        //else if (oldyear.ToString() == "2022")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                        //        {
                        //            signcount = 1;
                        //            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                        //            filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                        //    }
                        //}
                        //else if (oldyear.ToString() == "2021")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                        //        {
                        //            signcount = 1;
                        //            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                        //            filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2020\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2020/", "");
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                        //    }
                        //}
                        //else if (oldyear.ToString() == "2020")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                        //        {
                        //            signcount = 1;
                        //            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                        //            filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2019\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2019/", "");
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                        //    }
                        //}

                        //else
                        //{
                        //    if (signcount == 0)
                        //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                        //}
                    }

                    #endregion

                    #region check photo sign exists

                    if (!string.IsNullOrEmpty(rm.old_std_Photo))
                    {
                        string CandPhotoTempPath = rm.old_std_Photo;
                        if (!string.IsNullOrEmpty(CandPhotoTempPath))
                        {
                            CandPhotoTempPath = CandPhotoTempPath.Replace("https://registration2022.pseb.ac.in/upload/", "");
                            CandPhotoTempPath = CandPhotoTempPath.Replace("https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/", "");
                        }
                        //string PhotoExist = Path.Combine(Server.MapPath("~/Upload/" + CandPhotoTempPath));
                        //if (!System.IO.File.Exists(PhotoExist))
                        //{
                        //    //Photo Not Exist
                        //    rm.PhotoExist = "";
                        //}
                        //else { rm.PhotoExist = PhotoExist; }
                    }


                    if (!string.IsNullOrEmpty(rm.old_std_sign))
                    {
                        string CandSignTempPath = rm.old_std_sign;
                        if (!string.IsNullOrEmpty(CandSignTempPath))
                        {
                            CandSignTempPath = CandSignTempPath.Replace("https://registration2022.pseb.ac.in/upload/", "");
                            CandSignTempPath = CandSignTempPath.Replace("https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/", "");
                        }
                        //string SignExist = Path.Combine(Server.MapPath("~/Upload/" + CandSignTempPath));
                        //if (!System.IO.File.Exists(SignExist))
                        //{
                        //    //Photo Not Exist
                        //    rm.SignExist = "";
                        //}
                        //else { rm.SignExist = SignExist; }
                    }


                    #endregion


                    //  rm.std_Sign = "";
                    rm.Section = Convert.ToChar(ds.Tables[0].Rows[0]["Section"].ToString() == "" ? "A" : ds.Tables[0].Rows[0]["Section"].ToString());
                    ViewBag.SectionList = objCommon.GetSection();
                }
                else
                {
                    return RedirectToAction("M1Formgrid", "RegistrationPortal");
                }

            }
            //return View(asm);
            return View(rm);
        }



        [SessionCheckFilter]
        [HttpPost]
        public ActionResult M1FormModify(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern, string S9)
        {
            try
            {

                ViewBag.YesNoListText = new AbstractLayer.DBClass().GetYesNoText().ToList();
                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                ViewBag.YesNoListCP = new AbstractLayer.DBClass().GetYesNo().ToList();
                ViewBag.StaffList = new AbstractLayer.RegistrationDB().GetStaffListBySCHL(0, Session["SCHL"].ToString(), 0);
                string schlDist = null;
                ViewBag.YesNoList = new AbstractLayer.DBClass().GetYesNo().Where(s => s.Value == "Y").ToList();
                ViewBag.SessionYearListM1 = objCommon.GetSessionYear().Where(s => Convert.ToInt32(s.Value) <= 2018).ToList();

                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass
                DataSet ds2 = objDB.ElectiveSubjects();

                if (rm.Board != "OTHER BOARD")
                {
                    rm.Other_Board = "";
                }
                ViewBag.SubS9 = ds2.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
                List<SelectListItem> items = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.SubS9.Rows)
                {
                    items.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                ViewBag.SubS10m = ViewBag.SubS9m = ViewBag.SubS9 = new SelectList(items, "Value", "Text");
                ViewBag.S10 = new SelectList(items, "Value", "Text");
                //int res = 0;
                //objDB.CheckDate(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.
                DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
                if (schlDistds.Tables[0].Rows.Count > 0)
                {
                    schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
                }
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;

                #region Matric_ElectiveSubjects_Blind_NEW 

                DataSet ds1 = objDB.Matric_ElectiveSubjects_Blind_NEW();
                //ViewBag.SubSb9 = ds1.Tables[0];

                // Blind SUB -2
                List<SelectListItem> bitems2 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[0].Rows)
                {
                    bitems2.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                // Blind SUB -3
                List<SelectListItem> bitems3 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[1].Rows)
                {
                    bitems3.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                // Blind SUB -4
                List<SelectListItem> bitems4 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[2].Rows)
                {
                    bitems4.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                // Blind SUB -5
                List<SelectListItem> bitems5 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[3].Rows)
                {
                    bitems5.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                // Blind SUB -6
                List<SelectListItem> bitems6 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[4].Rows)
                {
                    bitems6.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                // Blind SUB -7
                List<SelectListItem> bitems7 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[5].Rows)
                {
                    bitems7.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                // Blind SUB - 8
                List<SelectListItem> bitems8 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[6].Rows)
                {
                    bitems8.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                // Blind SUB - 9
                List<SelectListItem> bitems9 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[7].Rows)
                {
                    bitems9.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }


                ViewBag.bs2 = new SelectList(bitems2, "Value", "Text");
                ViewBag.bs3 = new SelectList(bitems3, "Value", "Text");
                ViewBag.bs4 = new SelectList(bitems4, "Value", "Text");
                ViewBag.bs5 = new SelectList(bitems5, "Value", "Text");
                ViewBag.bs6 = new SelectList(bitems6, "Value", "Text");
                ViewBag.bs7 = new SelectList(bitems7, "Value", "Text");
                ViewBag.bs8 = new SelectList(bitems8, "Value", "Text");
                ViewBag.bs9 = new SelectList(bitems9, "Value", "Text");


                #endregion  Matric ElectiveSubjects Blind NEW 


                string nsqfsub = null;
                DataSet nsresult = objDB.SelectMatricNsqfSub(nsqfsub); // passing Value to DBClass from model
                ViewBag.nsfq = nsresult.Tables[0];
                List<SelectListItem> nsfqList = new List<SelectListItem>();
                //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                {
                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
                }
                ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");

                List<SelectListItem> itemsub6 = new List<SelectListItem>();
                itemsub6.Add(new SelectListItem { Text = "SOCIAL STUDIES", Value = "06" });
                ViewBag.SubS6 = new SelectList(itemsub6, "Value", "Text");

                List<SelectListItem> itemsub10 = new List<SelectListItem>();
                itemsub10.Add(new SelectListItem { Text = "HINDI", Value = "03" });
                itemsub10.Add(new SelectListItem { Text = "SOCIAL STUDIES", Value = "06" });
                ViewBag.SubS10 = new SelectList(itemsub10, "Value", "Text");
                //---------------------
                //AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                //ViewBag.catg = objCommon.GetE2Category();
                ViewBag.catg = objCommon.GetMCategories();

                ViewBag.MyBoard = objCommon.GetMatricBoard();

                ViewBag.Mon = objCommon.GetMonthM1_T1_Modify();

                // AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                ViewBag.SessionYearList = objCommon.GetSessionYear();
                ViewBag.MyWritter = objCommon.GetWritter();
                ViewBag.Caste = objCommon.GetCaste();
                ViewBag.DAb = objCommon.GetDA();
                ViewBag.DA = objCommon.GetDA();
                ViewBag.BM = ViewBag.BM1m = ViewBag.BM3m = ViewBag.BM4m = ViewBag.BM5m = ViewBag.BM6m = ViewBag.BM7m = ViewBag.BM8m = ViewBag.BM9m = objCommon.GetMediumAll();
                ViewBag.RE = objCommon.GetReligion();
                ViewBag.MyDist = objCommon.GetDistE();
                @ViewBag.MyCastList = objCommon.GetCaste();

                ViewBag.SectionList = objCommon.GetSection();
                ViewBag.MyTeh = objCommon.GetAllTehsil();
                string dist = rm.MyDistrict;
                //string id = rm.Std_id.ToString();
                if (ModelState.IsValid)
                {
                    // AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                    string id = frm["Std_id"].ToString();
                    string formname = "M1";
                    DataSet ds = objDB.SearchStudentGetByData_Subject(id, formname);
                    string distOld = "";

                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        //DataSet ds = objDB.SearchStudentGetByData(id);
                        distOld = ds.Tables[0].Rows[0]["District"].ToString();
                        rm.MyDistrict = distOld;
                    }
                    else
                    {
                        distOld = rm.MyDistrict;
                    }
                    //string stdPic = null;
                    string formName = "M1";
                    //if (frm["file"].ToString() != "")
                    if (rm.file != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdPic = Path.GetFileName(rm.file.FileName);

                    }
                    else
                    {

                        stdPic = ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    }
                    if (rm.std_Sign != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);

                    }
                    else
                    {

                        stdSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }
                    //var stdPic = Path.GetFileName(rm.file.FileName);
                    //var stdSign = Path.GetFileName(rm.std_Sign.FileName);

                    //-------------------Std PHOTO and Sign----------------
                    #region Photo and Sign
                    string filePath = "";
                    string filePathSign = "";
                    string Upload = System.Configuration.ConfigurationManager.AppSettings["Upload"];

                    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["std_Photo"].ToString() != "")
                    {
                        //  not imported
                        rm.checkCategory = "";
                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    }
                    else
                    {
                        int photocount = 0;
                        string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                        if (oldyear.ToString() == "2023")
                        {
                            if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                {
                                    photocount = 1;
                                    @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                    filePath = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2022")
                        {
                            if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                {
                                    photocount = 1;
                                    @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                    filePath = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2021")
                        {
                            if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                {
                                    photocount = 1;
                                    @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                    filePath = @"C:\ClusterStorage\Volume1\upload\upload2020\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2020/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2020")
                        {
                            if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                {
                                    photocount = 1;
                                    @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                                    filePath = @"C:\ClusterStorage\Volume1\upload\upload2019\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2019", "");

                                }
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            }
                        }
                        else
                        {
                            if (photocount == 0)
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        }
                    }
                    //---------------------------------------------------------For Sign------------------------------------------

                    if (ds.Tables[0].Rows[0]["std_sign"].ToString() != null && ds.Tables[0].Rows[0]["std_sign"].ToString() != "")
                    {
                        //  not imported
                        rm.checkCategory = "";
                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }
                    else
                    {
                        int signcount = 0;
                        string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                        if (oldyear.ToString() == "2023")
                        {
                            if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                {
                                    signcount = 1;
                                    @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                    filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2022")
                        {
                            if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                {
                                    signcount = 1;
                                    @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                    filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2021")
                        {
                            if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                {
                                    signcount = 1;
                                    @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                    filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2020\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2020/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2020")
                        {
                            if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                {
                                    signcount = 1;
                                    @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                    filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2019\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2019/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                            }
                        }

                        else
                        {
                            if (signcount == 0)
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                        }
                    }

                    #endregion
                    //--------------------PhotoSign----------------------

                    //--------------Begin NSQF---------------------//
                    #region NSQF SUBJECT

                    string ses = Session["Session"].ToString();
                    string schlcode = Session["SCHL"].ToString();
                    DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                    if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                    {
                        ViewData["NSQFSCHOOL"] = "1";
                        ViewBag.NSQFSTUDENT = "1";
                    }
                    else
                    {
                        ViewData["NSQFSCHOOL"] = "0";
                        ViewBag.NSQFSTUDENT = "0";
                    }

                    //-----------------------------For NSQF SUBJECTS----------------
                    string sid = id;
                    DataSet isCHkNSQF = objDB.CHkNSQFStudents(sid);

                    if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" && ViewBag.NSQFSTUDENT == "1")
                    {
                        ViewData["NSQFSTUDENT"] = "1";
                        if (rm.NsqfsubS6 == null)
                        {
                            rm.NsqfsubS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                        }
                        DataSet nsTextresult = objDB.GetNSQFVIEWSUBJECTMATRICSUBJECT(rm.NsqfsubS6, rm.PreNSQF);
                        List<SelectListItem> nssub6 = new List<SelectListItem>();
                        if (rm.PreNSQF == "NO")
                        {
                            nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            ViewBag.nsqfcatg = nssub6;
                        }
                        else
                        {
                            if (nsTextresult.Tables[0].Rows.Count > 0)
                            {
                                nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                                nssub6.Add(new SelectListItem { Text = nsTextresult.Tables[0].Rows[0]["Name_ENG"].ToString(), Value = rm.NsqfsubS6 });
                                ViewBag.nsqfcatg = nssub6;
                            }
                            else
                            {

                                nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                                ViewBag.nsqfcatg = nssub6;
                            }

                        }

                    }
                    else
                    {
                        List<SelectListItem> nssub6 = new List<SelectListItem>();
                        nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                        ViewBag.nsqfcatg = nssub6;
                    }


                    //--------------------------------End NSQF SUBJECTS-------------
                    #endregion NSQF SUBJECT
                    //------------------End NSQF--------------------------//

                    // Start Subject Master
                    #region Subject
                    DataTable dtMatricSubject = new DataTable();
                    dtMatricSubject.Columns.Add(new DataColumn("CLASS", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUB", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBNM", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBABBR", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("MEDIUM", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBCAT", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUB_SEQ", typeof(int)));
                    DataRow dr = null;
                    for (int i = 1; i <= 12; i++)
                    {
                        dr = dtMatricSubject.NewRow();
                        dr["CLASS"] = 2;
                        DataSet dsSub = new DataSet();
                        dr["SUBNM"] = "";
                        dr["SUBABBR"] = "";

                        if (rm.DA == "N.A.")
                        {
                            if (i == 1)
                            {
                                if (rm.subm1 != null)
                                {
                                    dr["MEDIUM"] = rm.subm1;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subS1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.subM2 != null)
                                {
                                    dr["MEDIUM"] = rm.subM2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subS2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                if (rm.subm3 != null)
                                {
                                    dr["MEDIUM"] = rm.subm3;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subS3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                if (rm.subM4 != null)
                                {
                                    dr["MEDIUM"] = rm.subM4;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subS4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 5)
                            {
                                if (rm.subM5 != null)
                                {
                                    dr["MEDIUM"] = rm.subM5;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }

                                dr["SUB"] = rm.subS5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }

                            }
                            else if (i == 6)
                            {
                                if (rm.subM6 != null)
                                {
                                    dr["MEDIUM"] = rm.subM6;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }

                                dr["SUB"] = rm.subS6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }

                            }

                            //  //If DA=N.A. then fix sub7=Computer Science, sub8-Welcome Life and sub9=Elective Subject/NSQF subject
                            else if (i == 7)
                            {
                                rm.subS7 = "63";//sub7=Computer Science,
                                dr["SUB"] = rm.subS7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.subS7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            //else if (i == 8)
                            //{
                            //    rm.subS8 = "92";// sub8-Welcome Life
                            //    dr["SUB"] = rm.subS8; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            //    if (rm.subS8 != null)
                            //    {
                            //        dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS8.ToString());
                            //        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //    }
                            //}
                            else if (i == 8)
                            {
                                dr["MEDIUM"] = "Medium";

                                if (!string.IsNullOrEmpty(NSQFsubS6))
                                {
                                    if (NSQFsubS6.ToUpper() != "NO".ToUpper() && rm.s9 != NSQFsubS6)
                                    {
                                        rm.s9 = NSQFsubS6;
                                    }
                                }

                                dr["SUB"] = rm.s9; dr["SUB_SEQ"] = 9; dr["SUBCAT"] = "G";
                                if (rm.s9 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.s9.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 10)
                            {
                                dr["SUB"] = rm.s10; dr["MEDIUM"] = rm.m10; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "A";
                                if (rm.NSQF == "NO")
                                {
                                    if (rm.s10 != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(rm.s10.ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }
                                }
                                else
                                {
                                    dr["SUB"] = rm.ns10;
                                    if (rm.ns10 != null && rm.ns10 != "0")
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(rm.ns10.ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }
                                }

                            }
                            else if (i == 11)
                            {
                                if (rm.m11 != null)
                                {
                                    dr["MEDIUM"] = rm.m11;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.s11; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "A";
                                if (rm.s11 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.s11.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 12)
                            {
                                if (rm.m12 != null)
                                {
                                    dr["MEDIUM"] = rm.m12;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.s12; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "A";
                                if (rm.s12 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.s12.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                        }
                        else
                        {
                            if (i == 1)
                            {
                                if (rm.bm1 != null)
                                {
                                    dr["MEDIUM"] = rm.bm1;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.bm2 != null)
                                {
                                    dr["MEDIUM"] = rm.bm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                if (rm.bm3 != null)
                                {
                                    dr["MEDIUM"] = rm.bm3;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                if (rm.bm4 != null)
                                {
                                    dr["MEDIUM"] = rm.bm4;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }

                                dr["SUB"] = rm.subbS4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 5)
                            {
                                if (rm.bm5 != null)
                                {
                                    dr["MEDIUM"] = rm.bm5;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 6)
                            {
                                dr["SUB"] = rm.subbS6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                if (rm.bm7 != null)
                                {
                                    dr["MEDIUM"] = rm.bm7;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.subbS7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            //else if (i == 8)
                            //{
                            //    if (rm.bm8 != null)
                            //    {
                            //        dr["MEDIUM"] = rm.bm8;
                            //    }
                            //    else
                            //    {
                            //        dr["MEDIUM"] = "Medium";
                            //    }
                            //    dr["SUB"] = rm.subbS8; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            //    if (rm.subbS8 != null)
                            //    {
                            //        dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS8.ToString());
                            //        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //    }
                            //}
                            else if (i == 8)
                            {
                                if (!string.IsNullOrEmpty(NSQFsubS6))
                                {
                                    if (NSQFsubS6.ToUpper() != "NO".ToUpper() && rm.s9 != NSQFsubS6)
                                    {
                                        rm.subbS9 = NSQFsubS6;
                                    }
                                }

                                dr["SUB"] = rm.subbS9; dr["SUB_SEQ"] = 9; dr["SUBCAT"] = "G";
                                if (rm.subbS9 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS9.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                        }
                        dtMatricSubject.Rows.Add(dr);
                        if (rm.DA == "N.A.")
                        {
                            if (i == 1)
                            {
                                dr = dtMatricSubject.NewRow();
                                dr["CLASS"] = 2;
                                //DataSet dsSub = new DataSet();
                                dr["SUBNM"] = "";
                                dr["SUBABBR"] = "";
                                dr["MEDIUM"] = "Medium";
                                if (rm.subS1 == "01")
                                {
                                    dr["SUB"] = "72"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                    if (dr["SUB"] != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }

                                }
                                else
                                {
                                    dr["SUB"] = "73"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                    if (dr["SUB"] != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }

                                }
                                dtMatricSubject.Rows.Add(dr);
                            }
                            //if (i == 6)
                            //{
                            //    dr = dtMatricSubject.NewRow();
                            //    dr["CLASS"] = 2;
                            //    //DataSet dsSub = new DataSet();
                            //    dr["SUBNM"] = "";
                            //    dr["SUBABBR"] = "";
                            //    dr["MEDIUM"] = "Medium";
                            //    //if (rm.NsqfsubS6 != "NO")
                            //    if (rm.NsqfsubS6 != "NO" && rm.NsqfsubS6 != null && rm.NsqfsubS6 != "")
                            //    {
                            //        dr["SUB"] = "85"; dr["SUB_SEQ"] = 12; dr["SUBCAT"] = "R";
                            //        if (dr["SUB"] != null)
                            //        {
                            //            dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                            //            dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //            dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //        }
                            //    }
                            //    dtMatricSubject.Rows.Add(dr);
                            //}
                        }
                        else
                        {
                            if (i == 1)
                            {
                                dr = dtMatricSubject.NewRow();
                                dr["CLASS"] = 2;
                                //DataSet dsSub = new DataSet();
                                dr["SUBNM"] = "";
                                dr["SUBABBR"] = "";
                                dr["MEDIUM"] = "Medium";
                                if (rm.subbS1 == "01")
                                {
                                    dr["SUB"] = "72"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                    if (dr["SUB"] != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }

                                }
                                else
                                {
                                    dr["SUB"] = "73"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                    if (dr["SUB"] != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }

                                }
                                dtMatricSubject.Rows.Add(dr);
                            }

                        }


                    }

                    dtMatricSubject.AcceptChanges();
                    dtMatricSubject = dtMatricSubject.AsEnumerable().Where(r => r.ItemArray[1].ToString() != "").CopyToDataTable();

                    #endregion subject

                    if (Session["SCHOOLDIST"] == null)
                    {
                        return RedirectToAction("Index", "Login");
                    }

                    rm.Board = "P.S.E.B BOARD";

                    int PNAMECount = System.Text.RegularExpressions.Regex.Matches(rm.Candi_Name_P, @"[a-zA-Z]").Count;
                    int FPNAMECount = System.Text.RegularExpressions.Regex.Matches(rm.Father_Name_P, @"[a-zA-Z]").Count;
                    int MPNAMECount = System.Text.RegularExpressions.Regex.Matches(rm.Mother_Name_P, @"[a-zA-Z]").Count;


                    var duplicates = dtMatricSubject.AsEnumerable().GroupBy(r => r[2]).Where(gr => gr.Count() > 1).ToList();
                    if (duplicates.Any())
                    {
                        ViewBag.Duplicate = "Duplicate Subjects: " + String.Join(", ", duplicates.Select(dupl => dupl.Key));
                        ViewData["resultUpdate"] = 10;
                        return View(rm);
                    }

                    var DTNoOfSub = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") != "72" && r.Field<string>("SUB") != "73" && r.Field<string>("SUB") != "205").ToList();

                    int NoOfSub = DTNoOfSub.Count();
                    if (rm.DA == "N.A.")
                    {
                        if (NoOfSub < 8)

                        {
                            ViewData["resultUpdate"] = 15;
                            return View(rm);
                        }
                    }
                    else
                    {
                        if (NoOfSub < 6)
                        {
                            ViewData["resultUpdate"] = 15;
                            return View(rm);
                        }
                    }



                    // date format (dd/mm/yyyy)
                    //rm.DOB = AbstractLayer.StaticDB.GetDateFormatDDMMYYYY(rm.DOB);
                    if (!string.IsNullOrEmpty(rm.DOB))
                    {
                        rm.DOB = AbstractLayer.StaticDB.DateInFormat(rm.DOB) == true ? rm.DOB : "";
                    }
                    else { rm.DOB = ""; }

                    //NsqfPattern
                    if (ViewData["NSQFSCHOOL"].ToString() == "1")
                    {
                        if (string.IsNullOrEmpty(NSQFsubS6))
                        {
                            //if (!string.IsNullOrEmpty(S9))
                            //{
                            //    // NSQFsubS6 = S9;
                            //}
                        }
                        if (string.IsNullOrEmpty(NSQFsubS6))
                        {
                            rm.NSQFPattern = "";
                        }
                        else if (NSQFsubS6 == "NO")
                        {
                            // rm.NSQFPattern = string.IsNullOrEmpty(NsqfPattern) ? "2" : NsqfPattern;
                            rm.NSQFPattern = "";
                        }
                        else
                        {
                            if (!string.IsNullOrEmpty(NSQFsubS6) && !string.IsNullOrEmpty(PreNSQF) && string.IsNullOrEmpty(NsqfPattern))
                            {
                                //  NsqfPattern = "2";
                                rm.NSQFPattern = "";
                            }
                            //if (string.IsNullOrEmpty(NsqfPattern))
                            //{
                            //    ViewData["result"] = "PATTERN";
                            //    return View(rm);
                            //}
                            ////   rm.NSQFPattern = NsqfPattern;
                            //rm.NSQFPattern = "";
                        }
                    }
                    else { rm.PreNSQF = ""; }
                    rm.NSQFPattern = "";
                    //NsqfPattern

                    // Check NSQF Subject exists in Subject List after NSQF Current Class Selection 
                    if (!string.IsNullOrEmpty(NSQFsubS6))
                    {
                        if (NSQFsubS6.ToUpper() != "NO".ToUpper())
                        {
                            rm.NsqfsubS6 = NSQFsubS6;
                            var NSQFSubExists = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") == NSQFsubS6).Count() > 0;
                            if (!NSQFSubExists)
                            {
                                ViewData["resultUpdate"] = "NSQFSUBWANT";
                                return View(rm);
                            }

                        }
                    }
                    string result = objDB.Update_M_Data(rm, frm, formName, id, stdPic, stdSign, dtMatricSubject);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not updated
                        ViewData["resultUpdate"] = 0;
                    }
                    else if (result.Length > 5)
                    {

                        ViewData["resultUpdate"] = 1;
                        if (Session["Session"].ToString() == "2023-2024")
                        {
                            //-----------------------------------Session 2017-2018------------
                            if (rm.file != null)
                            {
                                ////var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                                ////string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Photo"));
                                ////if (!Directory.Exists(FilepathExist))
                                ////{
                                ////    Directory.CreateDirectory(FilepathExist);
                                ////}
                                ////rm.file.SaveAs(path);
                                string Orgfile = result + "P" + ".jpg";
                                using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                {
                                    using (var newMemoryStream = new MemoryStream())
                                    {
                                        var uploadRequest = new TransferUtilityUploadRequest
                                        {
                                            InputStream = rm.file.InputStream,
                                            Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                            BucketName = BUCKET_NAME,
                                            CannedACL = S3CannedACL.PublicRead
                                        };

                                        var fileTransferUtility = new TransferUtility(client);
                                        fileTransferUtility.Upload(uploadRequest);
                                    }
                                }


                                filepathtosave = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                                ViewBag.ImageURL = filepathtosave;

                                string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                                string type = "P";
                                string IsNew = "YES";
                                string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                            }
                            //else
                            //{

                            //    var filePath1 = filePath;
                            //    if ((ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "") && (filePath != null && filePath != ""))
                            //    {
                            //        var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                            //        string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Photo"));
                            //        if (!Directory.Exists(FilepathExist))
                            //        {
                            //            Directory.CreateDirectory(FilepathExist);
                            //        }
                            //        if (System.IO.File.Exists(path))
                            //        {
                            //            System.IO.File.Delete(path);
                            //        }
                            //        System.IO.File.Copy(filePath1, path);
                            //        //filepathtosave = "../Upload/Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                            //        filepathtosave = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                            //        ViewBag.ImageURL = filepathtosave;

                            //        string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                            //        string type = "P";
                            //        string IsNew = "NO";
                            //        string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);


                            //    }
                            //}
                            if (rm.std_Sign != null)
                            {
                                //var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                                //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Sign"));
                                //if (!Directory.Exists(FilepathExist))
                                //{
                                //    Directory.CreateDirectory(FilepathExist);
                                //}
                                //rm.std_Sign.SaveAs(path);
                                string Orgfile = result + "S" + ".jpg";
                                using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                {
                                    using (var newMemoryStream = new MemoryStream())
                                    {
                                        var uploadRequest = new TransferUtilityUploadRequest
                                        {
                                            InputStream = rm.std_Sign.InputStream,
                                            Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                            BucketName = BUCKET_NAME,
                                            CannedACL = S3CannedACL.PublicRead
                                        };

                                        var fileTransferUtility = new TransferUtility(client);
                                        fileTransferUtility.Upload(uploadRequest);
                                    }
                                }

                                //filepathtosave = "../Upload/Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                                filepathtosave = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                                ViewBag.ImageURL = filepathtosave;

                                string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                                string type = "S";
                                string IsNew = "YES";
                                string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                            }
                            //else
                            //{
                            //    var filePathS = filePathSign;
                            //    if ((ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "") && (filePathSign != null && filePathSign != ""))
                            //    {
                            //        var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                            //        string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Sign"));
                            //        if (!Directory.Exists(FilepathExist))
                            //        {
                            //            Directory.CreateDirectory(FilepathExist);
                            //        }
                            //        if (System.IO.File.Exists(path))
                            //        {
                            //            System.IO.File.Delete(path);
                            //        }
                            //        System.IO.File.Copy(filePathS, path);
                            //        //filepathtosave = "../Upload/Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                            //        filepathtosave = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                            //        ViewBag.ImageURL = filepathtosave;

                            //        string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                            //        string type = "S";
                            //        string IsNew = "NO";
                            //        string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);


                            //    }
                            //}
                            // //-----------------------------------End  Session 2018-2020------------
                        }


                        ModelState.Clear();
                        //--For Showing Message---------//
                        ViewData["resultUpdate"] = 1;
                        //return RedirectToAction("M1Formgrid", "RegistrationPortal");

                    }
                    else
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = result;
                    }
                }
            }
            catch (Exception ex1)
            {
                oErrorLog.WriteErrorLog(ex1.ToString(), Path.GetFileName(Request.Path));
            }
            return View(rm);
        }

        [SessionCheckFilter]
        public ActionResult M1FormDelete(string id)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }

            }
            if (id == null)
            {
                return RedirectToAction("M1Formgrid", "RegistrationPortal");
            }
            string formname = "M1";
            id = encrypt.QueryStringModule.Decrypt(id);
            string schlDist = null;
            DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
            if (schlDistds.Tables[0].Rows.Count > 0)
            {
                schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
            }
            DataSet ds = objDB.SearchStudentGetByData_Subject(id, formname);
            //DataSet ds = objDB.SearchStudentGetByData(id);

            string result = "";
            if (ds == null || ds.Tables[0].Rows.Count == 0)
            {
                result = objDB.Delete_M_FromData(id);
                return RedirectToAction("M1Formgrid", "RegistrationPortal");
            }
            else
            {
                string dist = ds.Tables[0].Rows[0]["District"].ToString();
                string imgPhoto = ds.Tables[0].Rows[0]["std_Photo"].ToString();
                string imgSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
                string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();
                result = objDB.Delete_M_FromData(id); // passing Value to DBClass from model

                //--------Photo Delete------
                RegistrationModels RM = new RegistrationModels();
                var fileDesti = "";
                var fileDestiPic = "";

                if (Session["Session"] != null)
                {
                    if (Session["Session"].ToString() == "2023-2024")
                    {
                        // var pathPhoto = "D:\\LatestPSEBONLINE - 2018 - 12042017\\PSEBONLINE\\PSEBONLINE\\Upload\\upload2018\\N1\\165\\Photo\\N1165100003P.jpg";
                        var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), imgPhoto);
                        //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

                        if (System.IO.File.Exists(pathPhoto))
                        {
                            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"));
                            if (!Directory.Exists(FilepathExist))
                            {
                                Directory.CreateDirectory(FilepathExist);
                            }

                            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                            fileDestiPic = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"), imgPhoto);
                            System.IO.File.Move(pathPhoto, fileDestiPic);
                            System.IO.File.Delete(pathPhoto);

                        }
                        var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), imgSign);
                        //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
                        if (System.IO.File.Exists(pathSIGN))
                        {
                            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"));
                            if (!Directory.Exists(FilepathExist))
                            {
                                Directory.CreateDirectory(FilepathExist);
                            }
                            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                            fileDesti = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"), imgSign);
                            System.IO.File.Move(pathSIGN, fileDesti);
                            System.IO.File.Delete(pathSIGN);

                        }
                        //------------End photo Delete------
                    }
                    if (Session["Session"].ToString() == "2017-2018")
                    {
                        // var pathPhoto = "D:\\LatestPSEBONLINE - 2018 - 12042017\\PSEBONLINE\\PSEBONLINE\\Upload\\upload2018\\N1\\165\\Photo\\N1165100003P.jpg";
                        var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + "upload2018/" + formName + "/" + schlDist + "/Photo"), imgPhoto);
                        //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

                        if (System.IO.File.Exists(pathPhoto))
                        {
                            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "upload2018/" + formName + "/" + schlDist + "/PhotoD"));
                            if (!Directory.Exists(FilepathExist))
                            {
                                Directory.CreateDirectory(FilepathExist);
                            }

                            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                            fileDestiPic = Path.Combine(Server.MapPath("~/Upload/" + "upload2018/" + formName + "/" + schlDist + "/PhotoD"), imgPhoto);
                            System.IO.File.Move(pathPhoto, fileDestiPic);
                            System.IO.File.Delete(pathPhoto);

                        }
                        var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + "upload2018/" + formName + "/" + schlDist + "/Sign"), imgSign);
                        //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
                        if (System.IO.File.Exists(pathSIGN))
                        {
                            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "upload2018/" + formName + "/" + schlDist + "/SignD"));
                            if (!Directory.Exists(FilepathExist))
                            {
                                Directory.CreateDirectory(FilepathExist);
                            }
                            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                            fileDesti = Path.Combine(Server.MapPath("~/Upload/" + "upload2018/" + formName + "/" + schlDist + "/SignD"), imgSign);
                            System.IO.File.Move(pathSIGN, fileDesti);
                            System.IO.File.Delete(pathSIGN);

                        }
                        //------------End photo Delete------
                    }
                    if (Session["Session"].ToString() == "2016-2017")
                    {
                        var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

                        if (System.IO.File.Exists(pathPhoto))
                        {
                            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/PhotoD"));
                            if (!Directory.Exists(FilepathExist))
                            {
                                Directory.CreateDirectory(FilepathExist);
                            }

                            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                            fileDestiPic = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/PhotoD"), imgPhoto);
                            System.IO.File.Move(pathPhoto, fileDestiPic);
                            System.IO.File.Delete(pathPhoto);

                        }
                        var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
                        if (System.IO.File.Exists(pathSIGN))
                        {
                            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/SignD"));
                            if (!Directory.Exists(FilepathExist))
                            {
                                Directory.CreateDirectory(FilepathExist);
                            }
                            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                            fileDesti = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/SignD"), imgSign);
                            System.IO.File.Move(pathSIGN, fileDesti);
                            System.IO.File.Delete(pathSIGN);

                        }
                        //------------End photo Delete------
                    }
                }


                //------------End photo Delete------
                ViewData["resultDelete"] = result;
                // for dislaying message after saving storing output.
                return RedirectToAction("M1Formgrid", "RegistrationPortal");

            }
        }


        #endregion M1 form Start

        //---------------------------------M1 End-------------------

        //---------------------------------M2 Start--------------------

        #region M2 form start

        [SessionCheckFilter]
        public ActionResult M2Form()
        {
            ViewBag.YesNoListText = new AbstractLayer.DBClass().GetYesNoText().ToList();
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            RegistrationModels rm = new RegistrationModels();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
                //int res = 0;
                //objDB.CheckDate(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.

                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;

                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }
            //if (Session["Class"].ToString() == "3" && (Session["SchType"].ToString() == "ASS" || Session["SchType"].ToString() == "MRS"))
            //{
            //    return RedirectToAction("Index", "Home");
            //}
            DataSet ds = objDB.ElectiveSubjects();

            ViewBag.SubS9 = ds.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> items = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ViewBag.SubS9.Rows)
            {
                items.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            ViewBag.SubS9 = new SelectList(items, "Value", "Text");
            ViewBag.S10 = new SelectList(items, "Value", "Text");

            #region Matric_ElectiveSubjects_Blind_NEW 

            DataSet ds1 = objDB.Matric_ElectiveSubjects_Blind_NEW();
            //ViewBag.SubSb9 = ds1.Tables[0];

            // Blind SUB -2
            List<SelectListItem> bitems2 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[0].Rows)
            {
                bitems2.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB -3
            List<SelectListItem> bitems3 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[1].Rows)
            {
                bitems3.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB -4
            List<SelectListItem> bitems4 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[2].Rows)
            {
                bitems4.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -5
            List<SelectListItem> bitems5 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[3].Rows)
            {
                bitems5.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -6
            List<SelectListItem> bitems6 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[4].Rows)
            {
                bitems6.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -7
            List<SelectListItem> bitems7 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[5].Rows)
            {
                bitems7.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB - 8
            List<SelectListItem> bitems8 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[6].Rows)
            {
                bitems8.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB - 9
            List<SelectListItem> bitems9 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[7].Rows)
            {
                bitems9.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }


            ViewBag.bs2 = new SelectList(bitems2, "Value", "Text");
            ViewBag.bs3 = new SelectList(bitems3, "Value", "Text");
            ViewBag.bs4 = new SelectList(bitems4, "Value", "Text");
            ViewBag.bs5 = new SelectList(bitems5, "Value", "Text");
            ViewBag.bs6 = new SelectList(bitems6, "Value", "Text");
            ViewBag.bs7 = new SelectList(bitems7, "Value", "Text");
            ViewBag.bs8 = new SelectList(bitems8, "Value", "Text");
            ViewBag.bs9 = new SelectList(bitems9, "Value", "Text");


            #endregion  Matric ElectiveSubjects Blind NEW 


            List<SelectListItem> itemsub6 = new List<SelectListItem>();
            itemsub6.Add(new SelectListItem { Text = "SOCIAL STUDIES", Value = "06" });
            ViewBag.SubS6 = new SelectList(itemsub6, "Value", "Text");

            List<SelectListItem> itemsub10 = new List<SelectListItem>();
            itemsub10.Add(new SelectListItem { Text = "HINDI", Value = "03" });
            itemsub10.Add(new SelectListItem { Text = "SOCIAL STUDIES", Value = "06" });
            ViewBag.SubS10 = new SelectList(itemsub10, "Value", "Text");

            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
            ViewBag.MyBoard = objCommon.GetN2Board();
            ViewBag.Mon = objCommon.GetMonth();
            ViewBag.SessionYearList = objCommon.GetSessionYear();
            ViewBag.MyWritter = objCommon.GetWritter();
            @ViewBag.DA = objCommon.GetDA();
            ViewBag.MyDist = objCommon.GetDistE();
            ViewBag.SectionList = objCommon.GetSection();
            ViewBag.Section = "0";
            string formname = "M2";
            string schlid = "";
            if (Session["SCHL"] != null)
            {
                schlid = Session["SCHL"].ToString();
            }
            else
            {
                return View(rm);
            }

            DataSet seleLastCan = objDB.SelectlastEntryCandidate(formname, schlid);
            if (seleLastCan.Tables[0].Rows.Count > 0)
            {
                //                rm.Board_Roll_Num, rm.Admission_Num,po.Candi_Name,po.Father_Name,po.Std_id
                //FROM regMasterRegular2016 rm, Personal_Info Po
                //WHERE po.Std_id = rm.Std_id and rm.std_id = (SELECT max(rm.std_id) FROM regMasterRegular2016 rm)
                @ViewBag.message = "1";
                @ViewBag.Board_Roll_Num = seleLastCan.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                @ViewBag.Admission_Num = seleLastCan.Tables[0].Rows[0]["Admission_Num"].ToString();
                @ViewBag.Candi_Name = seleLastCan.Tables[0].Rows[0]["Candi_Name"].ToString();
                @ViewBag.Father_Name = seleLastCan.Tables[0].Rows[0]["Father_Name"].ToString();
                @ViewBag.id = seleLastCan.Tables[0].Rows[0]["Std_id"].ToString();
                @ViewBag.lot = seleLastCan.Tables[0].Rows[0]["lot"].ToString();
            }
            else
            {
                @ViewBag.message = "Record Not Found";
            }
            //-----------------------------------------------------Nsqf -------------------------
            string ses = Session["Session"].ToString();
            string schlcode = Session["SCHL"].ToString();
            DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
            if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
            {
                ViewData["NSQFSCHOOL"] = "1";
            }
            else
            {
                ViewData["NSQFSCHOOL"] = "0";
            }
            string nsqfsub = null;
            DataSet nsresult = objDB.SelectMatricNsqfSub(nsqfsub); // passing Value to DBClass from model
            ViewBag.nsfq = nsresult.Tables[0];
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {
                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
            }
            ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
            //-----------------------------------------------------End Nsqf -------------------------

            //---------------for lastyear =----------------------------------------  
            // DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
            //if(dsnsqf.Tables[0].Rows.Count > 0)
            //{
            //      if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
            //       {
            //            ViewBag.NSQFSCHOOL = "1";
            //       }
            //    else
            //    {
            //        ViewBag.NSQFSCHOOL = "0";
            //    }

            //}
            // else
            //{
            //    ViewBag.NSQFSCHOOL = "0";
            //}


            return View(rm);
        }

        [SessionCheckFilter]
        [HttpPost]
        public ActionResult M2Form(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern, string subS6)
        {
            try
            {


                ViewBag.YesNoListText = new AbstractLayer.DBClass().GetYesNoText().ToList();
                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                string schlDist = null;
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                DataSet result1 = objDB.SelectDist(); // passing Value to DBClass from model
                ViewBag.MyDist = result1.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
                List<SelectListItem> items = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
                {
                    items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
                }
                // ViewBag.MyDist = items;
                ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
                ViewBag.MyBoard = objCommon.GetN2Board();
                ViewBag.Mon = objCommon.GetMonth();
                ViewBag.SessionYearList = objCommon.GetSessionYear();
                ViewBag.MyWritter = objCommon.GetWritter();
                @ViewBag.DA = objCommon.GetDA();
                ViewBag.MyDist = objCommon.GetDistE();
                ViewBag.SectionList = objCommon.GetSection();

                //objDB.CheckDate(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.
                DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
                if (schlDistds.Tables[0].Rows.Count > 0)
                {
                    schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
                }

                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;

                string ses = Session["Session"].ToString();
                string schlcode = Session["SCHL"].ToString();
                DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                {
                    ViewData["NSQFSCHOOL"] = "1";
                }
                else
                {
                    ViewData["NSQFSCHOOL"] = "0";
                }

                string session = null;
                string idno = null;
                string schl = null;
                if (Session["Session"] != null)
                {
                    session = Session["Session"].ToString();
                    idno = Session["IDNO"].ToString();
                    schl = Session["SCHL"].ToString();
                }
                else
                {
                    return RedirectToAction("Index", "Login");
                }

                //Check server side validation using data annotation
                if (ModelState.IsValid)
                {
                    string group = rm.MyGroup;
                    string dist = frm["MyDist"].ToString();
                    string Tehsil = frm["MyTeh"].ToString();
                    //string Mygroup = frm["MyGroup"];
                    string formName = "M2";

                    if (rm.file != null)
                    {
                        stdPic = Path.GetFileName(rm.file.FileName);
                    }
                    else
                    {
                        //Response.Write("<script>alert('Please Upload Photo')</script>");
                        //return View();

                    }
                    if (rm.std_Sign != null)
                    {
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);
                    }
                    else
                    {
                        //Response.Write("<script>alert('Please Upload sign')</script>");
                        //return View();
                    }



                    if (rm.DocProofCertificate != null)
                    {
                        rm.ProofCertificate = Path.GetFileName(rm.DocProofCertificate.FileName);
                    }


                    if (rm.DocProofNRICandidates != null)
                    {
                        rm.ProofNRICandidates = Path.GetFileName(rm.DocProofNRICandidates.FileName);
                    }


                    // Start Subject Master
                    #region Subject
                    DataTable dtMatricSubject = new DataTable();
                    dtMatricSubject.Columns.Add(new DataColumn("CLASS", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUB", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBNM", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBABBR", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("MEDIUM", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBCAT", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUB_SEQ", typeof(int)));
                    DataRow dr = null;
                    for (int i = 1; i <= 12; i++)
                    {
                        dr = dtMatricSubject.NewRow();
                        dr["CLASS"] = 2;
                        DataSet dsSub = new DataSet();
                        dr["SUBNM"] = "";
                        dr["SUBABBR"] = "";

                        if (rm.DA == "N.A.")
                        {
                            if (i == 1)
                            {
                                if (rm.subm1 != null)
                                {
                                    dr["MEDIUM"] = rm.subm1;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subS1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.subM2 != null)
                                {
                                    dr["MEDIUM"] = rm.subM2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subS2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                if (rm.subm3 != null)
                                {
                                    dr["MEDIUM"] = rm.subm3;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subS3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                if (rm.subM4 != null)
                                {
                                    dr["MEDIUM"] = rm.subM4;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subS4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 5)
                            {
                                if (rm.subM5 != null)
                                {
                                    dr["MEDIUM"] = rm.subM5;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }

                                dr["SUB"] = rm.subS5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }

                            }
                            else if (i == 6)
                            {
                                if (rm.subM6 != null)
                                {
                                    dr["MEDIUM"] = rm.subM6;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }

                                dr["SUB"] = rm.subS6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }

                            }

                            //  //If DA=N.A. then fix sub7=Computer Science, sub8-Welcome Life and sub9=Elective Subject/NSQF subject
                            else if (i == 7)
                            {
                                rm.subS7 = "63";//sub7=Computer Science,
                                dr["SUB"] = rm.subS7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.subS7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            //else if (i == 8)
                            //{
                            //    rm.subS8 = "92";// sub8-Welcome Life
                            //    dr["SUB"] = rm.subS8; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            //    if (rm.subS8 != null)
                            //    {
                            //        dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS8.ToString());
                            //        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //    }
                            //}
                            else if (i == 8)
                            {
                                dr["MEDIUM"] = "Medium";

                                if (!string.IsNullOrEmpty(NSQFsubS6))
                                {
                                    if (NSQFsubS6.ToUpper() != "NO".ToUpper() && rm.s9 != NSQFsubS6)
                                    {
                                        rm.s9 = NSQFsubS6;
                                    }
                                }

                                dr["SUB"] = rm.s9; dr["SUB_SEQ"] = 9; dr["SUBCAT"] = "G";
                                if (rm.s9 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.s9.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 10)
                            {
                                dr["SUB"] = rm.s10; dr["MEDIUM"] = rm.m10; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "A";
                                if (rm.NSQF == "NO")
                                {
                                    if (rm.s10 != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(rm.s10.ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }
                                }
                                else
                                {
                                    dr["SUB"] = rm.ns10;
                                    if (rm.ns10 != null && rm.ns10 != "0")
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(rm.ns10.ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }
                                }

                            }
                            else if (i == 11)
                            {
                                if (rm.m11 != null)
                                {
                                    dr["MEDIUM"] = rm.m11;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.s11; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "A";
                                if (rm.s11 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.s11.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 12)
                            {
                                if (rm.m12 != null)
                                {
                                    dr["MEDIUM"] = rm.m12;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.s12; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "A";
                                if (rm.s12 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.s12.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                        }
                        else
                        {
                            if (i == 1)
                            {
                                if (rm.bm1 != null)
                                {
                                    dr["MEDIUM"] = rm.bm1;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.bm2 != null)
                                {
                                    dr["MEDIUM"] = rm.bm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                if (rm.bm3 != null)
                                {
                                    dr["MEDIUM"] = rm.bm3;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                if (rm.bm4 != null)
                                {
                                    dr["MEDIUM"] = rm.bm4;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }

                                dr["SUB"] = rm.subbS4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 5)
                            {
                                if (rm.bm5 != null)
                                {
                                    dr["MEDIUM"] = rm.bm5;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 6)
                            {
                                dr["SUB"] = rm.subbS6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                if (rm.bm7 != null)
                                {
                                    dr["MEDIUM"] = rm.bm7;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.subbS7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            //else if (i == 8)
                            //{
                            //    if (rm.bm8 != null)
                            //    {
                            //        dr["MEDIUM"] = rm.bm8;
                            //    }
                            //    else
                            //    {
                            //        dr["MEDIUM"] = "Medium";
                            //    }
                            //    dr["SUB"] = rm.subbS8; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            //    if (rm.subbS8 != null)
                            //    {
                            //        dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS8.ToString());
                            //        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //    }
                            //}
                            else if (i == 8)
                            {
                                if (!string.IsNullOrEmpty(NSQFsubS6))
                                {
                                    if (NSQFsubS6.ToUpper() != "NO".ToUpper() && rm.s9 != NSQFsubS6)
                                    {
                                        rm.subbS9 = NSQFsubS6;
                                    }
                                }

                                dr["SUB"] = rm.subbS9; dr["SUB_SEQ"] = 9; dr["SUBCAT"] = "G";
                                if (rm.subbS9 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS9.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                        }
                        dtMatricSubject.Rows.Add(dr);
                        if (rm.DA == "N.A.")
                        {
                            if (i == 1)
                            {
                                dr = dtMatricSubject.NewRow();
                                dr["CLASS"] = 2;
                                //DataSet dsSub = new DataSet();
                                dr["SUBNM"] = "";
                                dr["SUBABBR"] = "";
                                dr["MEDIUM"] = "Medium";
                                if (rm.subS1 == "01")
                                {
                                    dr["SUB"] = "72"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                    if (dr["SUB"] != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }

                                }
                                else
                                {
                                    dr["SUB"] = "73"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                    if (dr["SUB"] != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }

                                }
                                dtMatricSubject.Rows.Add(dr);
                            }
                            //if (i == 6)
                            //{
                            //    dr = dtMatricSubject.NewRow();
                            //    dr["CLASS"] = 2;
                            //    //DataSet dsSub = new DataSet();
                            //    dr["SUBNM"] = "";
                            //    dr["SUBABBR"] = "";
                            //    dr["MEDIUM"] = "Medium";
                            //    //if (rm.NsqfsubS6 != "NO")
                            //    if (rm.NsqfsubS6 != "NO" && rm.NsqfsubS6 != null && rm.NsqfsubS6 != "")
                            //    {
                            //        dr["SUB"] = "85"; dr["SUB_SEQ"] = 12; dr["SUBCAT"] = "R";
                            //        if (dr["SUB"] != null)
                            //        {
                            //            dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                            //            dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //            dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //        }
                            //    }
                            //    dtMatricSubject.Rows.Add(dr);
                            //}
                        }
                        else
                        {
                            if (i == 1)
                            {
                                dr = dtMatricSubject.NewRow();
                                dr["CLASS"] = 2;
                                //DataSet dsSub = new DataSet();
                                dr["SUBNM"] = "";
                                dr["SUBABBR"] = "";
                                dr["MEDIUM"] = "Medium";
                                if (rm.subbS1 == "01")
                                {
                                    dr["SUB"] = "72"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                    if (dr["SUB"] != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }

                                }
                                else
                                {
                                    dr["SUB"] = "73"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                    if (dr["SUB"] != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }

                                }
                                dtMatricSubject.Rows.Add(dr);
                            }

                        }


                    }

                    dtMatricSubject.AcceptChanges();
                    dtMatricSubject = dtMatricSubject.AsEnumerable().Where(r => r.ItemArray[1].ToString() != "").CopyToDataTable();

                    #endregion subject


                    var duplicates = dtMatricSubject.AsEnumerable().GroupBy(r => r[2]).Where(gr => gr.Count() > 1).ToList();
                    if (duplicates.Any())
                    {
                        ViewBag.Duplicate = "Duplicate Subjects: " + String.Join(", ", duplicates.Select(dupl => dupl.Key));
                        ViewData["result"] = 10;
                        return View(rm);
                    }

                    var DTNoOfSub = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") != "72" && r.Field<string>("SUB") != "73" && r.Field<string>("SUB") != "205").ToList();

                    int NoOfSub = DTNoOfSub.Count();

                    if (rm.DA == "N.A.")
                    {
                        if (NoOfSub < 8)
                        //if (NoOfSub < 7)
                        {
                            ViewData["result"] = 15;
                            return View(rm);
                        }
                    }
                    else
                    {
                        if (NoOfSub < 6)
                        {
                            ViewData["result"] = 15;
                            return View(rm);
                        }
                    }

                    //IsNRICandidate
                    if (rm.IsNRICandidate == true && (rm.DocProofNRICandidates != null || !string.IsNullOrEmpty(rm.ProofNRICandidates)))
                    {
                        rm.IsNRICandidate = true;
                    }
                    else
                    {
                        rm.IsNRICandidate = false;
                        rm.ProofNRICandidates = "";
                        rm.DocProofNRICandidates = null;
                    }

                    //NsqfPattern
                    if (ViewData["NSQFSCHOOL"].ToString() == "1")
                    {
                        if (string.IsNullOrEmpty(NSQFsubS6))
                        {
                            if (!string.IsNullOrEmpty(subS6))
                            {
                                NSQFsubS6 = subS6;
                            }
                        }
                        if (string.IsNullOrEmpty(NSQFsubS6))
                        {
                            rm.NSQFPattern = "";
                        }
                        else if (NSQFsubS6 == "NO")
                        {
                            rm.NSQFPattern = "";
                        }
                        else
                        {
                            //if (string.IsNullOrEmpty(NsqfPattern))
                            //{
                            //    ViewData["result"] = "PATTERN";
                            //    return View(rm);
                            //}
                            //rm.NSQFPattern = NsqfPattern;
                        }
                    }

                    rm.NSQFPattern = "";
                    //NsqfPattern

                    // Check NSQF Subject exists in Subject List after NSQF Current Class Selection 
                    if (!string.IsNullOrEmpty(NSQFsubS6))
                    {
                        if (NSQFsubS6.ToUpper() != "NO".ToUpper())
                        {
                            rm.NsqfsubS6 = NSQFsubS6;
                            var NSQFSubExists = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") == NSQFsubS6).Count() > 0;
                            if (!NSQFSubExists)
                            {
                                ViewData["resultUpdate"] = "NSQFSUBWANT";
                                return View(rm);
                            }

                        }
                    }
                    string result = objDB.Ins_M_Form_Data(rm, frm, formName, session, idno, schl, dtMatricSubject);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not saved
                        ViewData["result"] = 0;
                    }
                    else if (result == "-1")
                    {
                        //-----alredy exist
                        ViewData["result"] = -1;
                    }
                    else
                    {
                        ViewData["result"] = 1;
                        //----Data Inserted Successfully
                        //  dist = Session["SCHOOLDIST"].ToString();
                        if (rm.file != null)
                        {
                            //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.file.SaveAs(path);
                            string Orgfile = result + "P" + ".jpg";
                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.file.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }
                            //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                            filepathtosave = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                            ViewBag.ImageURL = filepathtosave;

                            string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                            string type = "P";
                            string IsNew = "YES";
                            string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                        }
                        if (rm.std_Sign != null)
                        {
                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.std_Sign.SaveAs(path);

                            string Orgfile = result + "S" + ".jpg";
                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.std_Sign.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            // filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                            filepathtosave = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                            ViewBag.ImageURL = filepathtosave;


                            string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                            string type = "S";
                            string IsNew = "YES";
                            string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                        }


                        if (rm.DocProofCertificate != null)
                        {
                            //string fileExt = Path.GetExtension(rm.DocProofCertificate.FileName);

                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"), result + "C" + fileExt);
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.DocProofCertificate.SaveAs(path);
                            string fileExt = Path.GetExtension(rm.DocProofCertificate.FileName);
                            string Orgfile = result + "C" + fileExt;

                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {

                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.DocProofCertificate.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            rm.ProofCertificate = "allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate" + "/" + result + "C" + fileExt;
                            string type = "C";
                            string UpdatePicC = objDB.Updated_Pic_Data(result, rm.ProofCertificate, type);
                        }

                        if (rm.DocProofNRICandidates != null)
                        {
                            //string fileExt = Path.GetExtension(rm.DocProofNRICandidates.FileName);
                            //string pathName = formName + "/" + schlDist + "/ProofNRICandidates";

                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + pathName), result + "NRI" + fileExt);
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + pathName));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.DocProofNRICandidates.SaveAs(path);
                            string fileExt = Path.GetExtension(rm.DocProofNRICandidates.FileName);
                            string pathName = formName + "/" + schlDist + "/ProofNRICandidates";
                            string Orgfile = result + "NRI" + fileExt;

                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    ///file.CopyTo(newMemoryStream);

                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.DocProofCertificate.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidates/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }


                            rm.ProofNRICandidates = "allfiles/Upload2024/" + pathName + "/" + result + "NRI" + fileExt;
                            string type = "NRI";
                            string UpdatePicN = objDB.Updated_Pic_Data(result, rm.ProofNRICandidates, type);
                        }

                        //ViewBag.Message = "File has been uploaded successfully";
                        ModelState.Clear();
                        //--For Showing Message---------//

                    }
                }

            }
            catch (Exception ex1)
            {
                ViewData["ErrorMessage"] = ex1.Message;
                oErrorLog.WriteErrorLog(ex1.ToString(), Path.GetFileName(Request.Path));

            }

            return M2Form();
        }


        [SessionCheckFilter]
        public ActionResult M2Formgrid(RegistrationSearchModelList registrationSearchModel)
        {
            string schl = Session["SCHL"].ToString();
            int status = new AbstractLayer.RegistrationDB().CheckSchoolAssignForm(1, schl);
            if (status <= 0)
            {
                return RedirectToAction("Index", "Home");
            }
            DataSet dsOut = new DataSet();
            registrationSearchModel.RegistrationSearchModel = AbstractLayer.RegistrationDB.GetStudentRecordsSearchPM("M2", schl, out dsOut);
            registrationSearchModel.StoreAllData = dsOut;
            return View(registrationSearchModel);
        }


        [SessionCheckFilter]
        public ActionResult M2FormModify(string id)
        {
            ViewBag.YesNoListText = new AbstractLayer.DBClass().GetYesNoText().ToList();
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
                //int res = 0;
                //objDB.CheckDate(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.

                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;

                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }

            }

            if (id == null)
            {
                return RedirectToAction("M2Formgrid", "RegistrationPortal");
            }



            #region Matric_ElectiveSubjects_Blind_NEW 

            DataSet ds1 = objDB.Matric_ElectiveSubjects_Blind_NEW();
            //ViewBag.SubSb9 = ds1.Tables[0];

            // Blind SUB -2
            List<SelectListItem> bitems2 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[0].Rows)
            {
                bitems2.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB -3
            List<SelectListItem> bitems3 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[1].Rows)
            {
                bitems3.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB -4
            List<SelectListItem> bitems4 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[2].Rows)
            {
                bitems4.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -5
            List<SelectListItem> bitems5 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[3].Rows)
            {
                bitems5.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -6
            List<SelectListItem> bitems6 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[4].Rows)
            {
                bitems6.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }

            // Blind SUB -7
            List<SelectListItem> bitems7 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[5].Rows)
            {
                bitems7.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB - 8
            List<SelectListItem> bitems8 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[6].Rows)
            {
                bitems8.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            // Blind SUB - 9
            List<SelectListItem> bitems9 = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ds1.Tables[7].Rows)
            {
                bitems9.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }


            ViewBag.bs2 = new SelectList(bitems2, "Value", "Text");
            ViewBag.bs3 = new SelectList(bitems3, "Value", "Text");
            ViewBag.bs4 = new SelectList(bitems4, "Value", "Text");
            ViewBag.bs5 = new SelectList(bitems5, "Value", "Text");
            ViewBag.bs6 = new SelectList(bitems6, "Value", "Text");
            ViewBag.bs7 = new SelectList(bitems7, "Value", "Text");
            ViewBag.bs8 = new SelectList(bitems8, "Value", "Text");
            ViewBag.bs9 = new SelectList(bitems9, "Value", "Text");


            #endregion  Matric ElectiveSubjects Blind NEW 

            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();

            string nsqfsub = null;
            DataSet nsresult = objDB.SelectMatricNsqfSub(nsqfsub); // passing Value to DBClass from model
            ViewBag.nsfq = nsresult.Tables[0];
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {
                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
            }
            ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");


            List<SelectListItem> itemsub6 = new List<SelectListItem>();
            itemsub6.Add(new SelectListItem { Text = "SOCIAL STUDIES", Value = "06" });
            ViewBag.SubS6 = new SelectList(itemsub6, "Value", "Text");

            List<SelectListItem> itemsub10 = new List<SelectListItem>();
            itemsub10.Add(new SelectListItem { Text = "HINDI", Value = "03" });
            itemsub10.Add(new SelectListItem { Text = "SOCIAL STUDIES", Value = "06" });
            ViewBag.SubS10 = new SelectList(itemsub10, "Value", "Text");

            ViewBag.BM = ViewBag.BM2m = ViewBag.BM3m = ViewBag.BM4m = ViewBag.BM5m = ViewBag.BM6m = ViewBag.BM7m = ViewBag.BM8m = ViewBag.BM9m = objCommon.GetMediumAll();


            RegistrationModels rm = new RegistrationModels();
            string formname = "M2";
            if (id != null)
            {
                id = encrypt.QueryStringModule.Decrypt(id);
                DataSet ds = objDB.SearchStudentGetByData_Subject(id, formname);
                if (ds == null || ds.Tables[0].Rows.Count == 0)
                {
                    return RedirectToAction("M2Formgrid", "RegistrationPortal");
                }
                if (ds.Tables[0].Rows.Count > 0)
                {
                    rm.old_std_Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                    rm.old_std_sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                    rm.IsSmartPhone = ds.Tables[0].Rows[0]["IsSmartPhone"].ToString();
                    rm.NSQFPattern = ds.Tables[0].Rows[0]["NSQFPattern"].ToString();
                    rm.IsUnlockForm = ds.Tables[0].Rows[0]["IsUnlockForm"].ToString();
                    rm.IsNRICandidate = ds.Tables[0].Rows[0]["IsNRICandidate"] == null ? false : ds.Tables[0].Rows[0]["IsNRICandidate"].ToString() == "0" ? false : ds.Tables[0].Rows[0]["IsNRICandidate"].ToString().ToLower() == "false" ? false : true;
                    // DataSet ds = objDB.SearchStudentGetByData(id);
                    rm.Std_id = Convert.ToInt32(ds.Tables[0].Rows[0]["Std_id"].ToString());
                    rm.SCHL = ds.Tables[0].Rows[0]["SCHL"].ToString();
                    //rm.IDNO = ds.Tables[0].Rows[0]["IDNO"].ToString();
                    rm.Category = ds.Tables[0].Rows[0]["Category"].ToString();
                    ViewBag.catg = objCommon.GetE2Category();

                    rm.Board = ds.Tables[0].Rows[0]["Board"].ToString();
                    // ViewBag.MyBoard = objCommon.GetN2Board();

                    rm.Other_Board = ds.Tables[0].Rows[0]["Other_Board"].ToString();

                    rm.Board_Roll_Num = ds.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                    rm.Prev_School_Name = ds.Tables[0].Rows[0]["Prev_School_Name"].ToString();

                    rm.Month = ds.Tables[0].Rows[0]["Month"].ToString();
                    ViewBag.Mon = objCommon.GetMonth();

                    rm.Year = ds.Tables[0].Rows[0]["Year"].ToString();
                    ViewBag.SessionYearList = objCommon.GetSessionYear();



                    rm.MyGroup = ds.Tables[0].Rows[0]["Group_name"].ToString().Trim();
                    ViewBag.MyGroup1 = objCommon.GroupName();

                    rm.AWRegisterNo = ds.Tables[0].Rows[0]["AWRegisterNo"].ToString();
                    rm.Admission_Num = ds.Tables[0].Rows[0]["Admission_Num"].ToString();
                    rm.Admission_Date = ds.Tables[0].Rows[0]["Admission_Date"].ToString();
                    rm.Class_Roll_Num_Section = ds.Tables[0].Rows[0]["Class_Roll_Num_Section"].ToString();
                    rm.Candi_Name = ds.Tables[0].Rows[0]["Candi_Name"].ToString();
                    rm.Candi_Name_P = ds.Tables[0].Rows[0]["Candi_Name_P"].ToString();
                    rm.Father_Name = ds.Tables[0].Rows[0]["Father_Name"].ToString();
                    rm.Father_Name_P = ds.Tables[0].Rows[0]["Father_Name_P"].ToString();
                    rm.Mother_Name = ds.Tables[0].Rows[0]["Mother_Name"].ToString();
                    rm.Mother_Name_P = ds.Tables[0].Rows[0]["Mother_Name_P"].ToString();

                    rm.Caste = ds.Tables[0].Rows[0]["Caste"].ToString();
                    //ViewBag.Caste = objCommon.GetCaste();
                    @ViewBag.MyCastList = objCommon.GetCaste();

                    rm.Gender = ds.Tables[0].Rows[0]["Gender"].ToString();


                    //rm.Differently_Abled = ds.Tables[0].Rows[0]["Differently_Abled"].ToString();
                    rm.DA = rm.Differently_Abled = ds.Tables[0].Rows[0]["Differently_Abled"].ToString();
                    ViewBag.DAb = objCommon.GetDA();


                    rm.Religion = ds.Tables[0].Rows[0]["Religion"].ToString();
                    ViewBag.RE = objCommon.GetReligion();

                    rm.DOB = ds.Tables[0].Rows[0]["DOB"].ToString();
                    rm.Mobile = ds.Tables[0].Rows[0]["Mobile"].ToString();

                    rm.Father_MobNo = ds.Tables[0].Rows[0]["F_MobNo"].ToString();
                    rm.Father_Occup = ds.Tables[0].Rows[0]["F_Occup"].ToString();
                    rm.Mother_MobNo = ds.Tables[0].Rows[0]["M_MobNo"].ToString();
                    rm.Mother_Occup = ds.Tables[0].Rows[0]["M_Occup"].ToString();

                    rm.Belongs_BPL = ds.Tables[0].Rows[0]["Belongs_BPL"].ToString();
                    rm.E_punjab_Std_id = ds.Tables[0].Rows[0]["E_punjab_Std_id"].ToString();
                    if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 28)
                    {
                        rm.AadharEnroll = "Enrollmemt";
                    }
                    else if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 12)
                    {
                        rm.AadharEnroll = "Aadhar";
                    }
                    else
                    {
                        rm.AadharEnroll = "N.A.";
                    }
                    rm.Aadhar_num = ds.Tables[0].Rows[0]["Aadhar_num"].ToString();
                    rm.Address = ds.Tables[0].Rows[0]["Address"].ToString();
                    rm.LandMark = ds.Tables[0].Rows[0]["LandMark"].ToString();
                    rm.Block = ds.Tables[0].Rows[0]["Block"].ToString();
                    string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();


                    rm.MyDistrict = ds.Tables[0].Rows[0]["District"].ToString();
                    //rm.District = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString());
                    ViewBag.MyDist = objCommon.GetDistE();

                    rm.Tehsil = Convert.ToInt32(ds.Tables[0].Rows[0]["Tehsil"].ToString());

                    int dist = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString());
                    DataSet result1 = objDB.SelectAllTehsil(dist);
                    ViewBag.MyTeh = result1.Tables[0];
                    List<SelectListItem> TehList = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.MyTeh.Rows)
                    {

                        TehList.Add(new SelectListItem { Text = @dr["TEHSIL"].ToString(), Value = @dr["TCODE"].ToString() });

                    }
                    ViewBag.MyTeh = TehList;

                    rm.PinCode = ds.Tables[0].Rows[0]["PinCode"].ToString();
                    int IsPrevSchoolSelf = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPrevSchoolSelf"].ToString());
                    if (IsPrevSchoolSelf == 1)
                    {
                        rm.IsPrevSchoolSelf = true;
                    }
                    else
                    {
                        rm.IsPrevSchoolSelf = false;
                    }
                    int IsPSEBRegNum = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPSEBRegNum"].ToString() == "" ? "0" : ds.Tables[0].Rows[0]["IsPSEBRegNum"].ToString());

                    if (IsPSEBRegNum == 1)
                    {
                        rm.IsPSEBRegNum = true;
                        rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                    }
                    else
                    {
                        rm.IsPSEBRegNum = false;
                        rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                    }
                    ////-------------------For Nsqf Pageload------------

                    //---------------------------End ---------------------


                    //-----------------------------------------------------Nsqf -------------------------
                    rm.PreNSQF = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();
                    string ses = Session["Session"].ToString();
                    string schlcode = Session["SCHL"].ToString();
                    DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);


                    if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                    {
                        ViewData["NSQFSCHOOL"] = "1";
                        ViewBag.NSQFSTUDENT = "1";
                    }
                    else
                    {
                        ViewData["NSQFSCHOOL"] = "0";
                        ViewBag.NSQFSTUDENT = "0";
                    }

                    //-----------------------------For NSQF SUBJECTS----------------
                    string sid = id;
                    DataSet isCHkNSQF = objDB.CHkNSQFStudents(sid);

                    if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
                    {
                        DataSet ds2 = objDB.ElectiveSubjects();
                        ViewBag.SubS9 = ds2.Tables[0];
                        // for dislaying message after saving storing output.
                        List<SelectListItem> items = new List<SelectListItem>();
                        foreach (System.Data.DataRow dr in ViewBag.SubS9.Rows)
                        {
                            //if (@dr["TYPE"].ToString()== "PRE-VOCATIONAL")
                            //{

                            //}                         
                            items.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                        }
                        ViewBag.SubS10m = ViewBag.SubS9m = ViewBag.SubS9 = new SelectList(items, "Value", "Text");
                        ViewBag.S10 = new SelectList(items, "Value", "Text");



                        ViewData["NSQFSTUDENT"] = "1";
                        if (rm.NsqfsubS6 == null)
                        {
                            rm.NsqfsubS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                        }
                        DataSet nsTextresult = objDB.GetNSQFVIEWSUBJECTMATRICSUBJECT(rm.NsqfsubS6, rm.PreNSQF);
                        List<SelectListItem> nssub6 = new List<SelectListItem>();
                        if (nsTextresult.Tables[0].Rows.Count > 0)
                        {
                            nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            nssub6.Add(new SelectListItem { Text = nsTextresult.Tables[0].Rows[0]["Name_ENG"].ToString(), Value = rm.NsqfsubS6 });
                            ViewBag.nsqfcatg = nssub6;
                        }
                        else
                        {

                            nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            ViewBag.nsqfcatg = nssub6;
                        }

                    }
                    else
                    {
                        DataSet ds2 = objDB.ElectiveSubjects();
                        ViewBag.SubS9 = ds2.Tables[0];
                        // for dislaying message after saving storing output.
                        List<SelectListItem> items = new List<SelectListItem>();
                        foreach (System.Data.DataRow dr in ViewBag.SubS9.Rows)
                        {
                            if (@dr["TYPE"].ToString() == "GRADING SUBJECT")
                            {
                                items.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                            }

                        }
                        ViewBag.SubS10m = ViewBag.SubS9m = ViewBag.SubS9 = new SelectList(items, "Value", "Text");
                        ViewBag.S10 = new SelectList(items, "Value", "Text");
                        //--------------

                        List<SelectListItem> nssub6 = new List<SelectListItem>();
                        nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                        ViewBag.nsqfcatg = nssub6;
                    }


                    //--------------------------------End NSQF SUBJECTS-------------

                    //-----------------------------------------------------End Nsqf -------------------------
                    rm.NSQF = ds.Tables[0].Rows[0]["nsqf_flag"].ToString();

                    rm.scribeWriter = ds.Tables[0].Rows[0]["wantwriter"].ToString();
                    ViewBag.MyWritter = objCommon.GetWritter();

                    rm.CandiMedium = ds.Tables[0].Rows[0]["CandStudyMedium"].ToString();
                    rm.DP = ds.Tables[0].Rows[0]["DisabilityPercent"].ToString();
                    //------------------------------Fill Subjects----------------//


                    if (ds.Tables[1].Rows.Count > 0)
                    {
                        for (int i = 0; i < ds.Tables[1].Rows.Count; i++)
                        {
                            if (rm.DA == "N.A.")
                            {
                                if (i == 0)
                                {
                                    rm.subS1 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.subm1 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.subS2 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.subM2 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 2)
                                {
                                    rm.subS3 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.subm3 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 3)
                                {
                                    rm.subS4 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.subM4 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 4)
                                {
                                    rm.subS5 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.subM5 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 5)
                                {
                                    rm.subS6 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.subM6 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                    rm.NsqfsubS6Upd = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.NsqfsubS6 = ds.Tables[1].Rows[5]["SUB"].ToString();
                                    rm.NsqfsubS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                                }
                                else if (i == 6)
                                {
                                    rm.subS7 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.subM7 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 7)
                                {
                                    rm.s9 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.s9);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.m9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.SubS9m = iMEdiumList;
                                    //rm.subS8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.subM8 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 8 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.s10 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.ns10 = rm.s10;
                                    //  rm.m10 =  itemMediumE.Where(s => s.Text == ds.Tables[1].Rows[9]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.s10);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.m10 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.SubS10m = rm.m10;//iMEdiumList;

                                    //rm.s9 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //DataSet SelectedMediumList = objDB.SelectS1(rm.s9);
                                    //List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    //rm.m9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    //ViewBag.SubS9m = iMEdiumList;
                                }
                                else if (i == 9 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.s11 = ds.Tables[1].Rows[i]["SUB"].ToString();

                                    //rm.s10 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.ns10 = rm.s10;
                                    ////  rm.m10 =  itemMediumE.Where(s => s.Text == ds.Tables[1].Rows[9]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    //DataSet SelectedMediumList = objDB.SelectS1(rm.s10);
                                    //List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    //rm.m10 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    //ViewBag.SubS10m = rm.m10;//iMEdiumList;

                                }
                                else if (i == 10 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.s12 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.s11 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.m11 =  itemMediumE.Where(s => s.Text == ds.Tables[1].Rows[10]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                }
                                else if (i == 11)
                                {
                                    //rm.s12 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    // rm.m12 =  itemMediumE.Where(s => s.Text == ds.Tables[1].Rows[11]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                }

                                ///// end subject display issue 12/102018
                            }
                            else
                            {
                                if (i == 0)
                                {
                                    rm.subbS1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                    rm.bm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                }
                                else if (i == 1 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.subbS2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                    // rm.bm2 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[1]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();

                                    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS2);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.bm2 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[1]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.BM2m = iMEdiumList;
                                }
                                else if (i == 2 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.subbS3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                    // rm.bm3 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[2]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS3);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.bm3 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[2]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.BM3m = iMEdiumList;
                                }
                                else if (i == 3 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.subbS4 = ds.Tables[1].Rows[3]["SUB"].ToString();
                                    // rm.bm4 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[3]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS4);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.bm4 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[3]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.BM4m = iMEdiumList;
                                }
                                else if (i == 4 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.subbS5 = ds.Tables[1].Rows[4]["SUB"].ToString();
                                    // rm.bm5 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[4]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS5);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.bm5 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[4]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.BM5m = iMEdiumList;
                                }
                                else if (i == 5 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.subbS6 = ds.Tables[1].Rows[5]["SUB"].ToString();
                                    //  rm.bm6 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[5]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS6);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.bm6 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[5]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.BM6m = iMEdiumList;
                                }

                                else if (i == 6 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    rm.subbS7 = ds.Tables[1].Rows[6]["SUB"].ToString();
                                    // rm.bm7 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[6]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS7);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.bm7 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[6]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.BM7m = iMEdiumList;
                                }
                                else if (i == 7 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {


                                    rm.subbS9 = ds.Tables[1].Rows[7]["SUB"].ToString();
                                    //rm.bm9 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[8]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    DataSet SelectedMediumList = objDB.SelectS1(rm.subbS9);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.bm9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[7]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.BM9m = iMEdiumList;


                                    //rm.subbS8 = ds.Tables[1].Rows[7]["SUB"].ToString();
                                    //// rm.bm8 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[7]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    //DataSet SelectedMediumList = objDB.SelectS1(rm.subbS8);
                                    //List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    //rm.bm8 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[7]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    //ViewBag.BM8m = iMEdiumList;
                                }
                                else if (i == 8 && ds.Tables[1].Rows[i]["SUB"].ToString() != "72" && ds.Tables[1].Rows[i]["SUB"].ToString() != "73")
                                {
                                    //rm.subbS9 = ds.Tables[1].Rows[8]["SUB"].ToString();
                                    ////rm.bm9 = itemMediumBlindE.Where(s => s.Text == ds.Tables[1].Rows[8]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    //DataSet SelectedMediumList = objDB.SelectS1(rm.subbS9);
                                    //List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    //rm.bm9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[8]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    //ViewBag.BM9m = iMEdiumList;
                                }
                            }
                        }
                    }

                    int IsPro = Convert.ToInt32(ds.Tables[0].Rows[0]["Provisional"].ToString());
                    if (IsPro == 1)
                    {
                        rm.Provisional = true;
                    }
                    else
                    {
                        rm.Provisional = false;
                    }

                    //--------------------------------------NSQF------------------------------------//

                    @ViewBag.Photo = ds.Tables[0].Rows[0]["std_Photo"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    @ViewBag.sign = ds.Tables[0].Rows[0]["std_Sign"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();

                    rm.ProofCertificate = ds.Tables[0].Rows[0]["ProofCertificate"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["ProofCertificate"].ToString();
                    rm.ProofNRICandidates = ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString();

                    //  rm.std_Sign = "";
                    rm.Section = Convert.ToChar(ds.Tables[0].Rows[0]["Section"].ToString());
                    ViewBag.SectionList = objCommon.GetSection();

                    if (!string.IsNullOrEmpty(rm.Year))
                    {
                        if (rm.Board.Contains("P.S.E.B"))
                        {
                            List<SelectListItem> yearlist1 = objCommon.GetSessionYear();
                            yearlist1.RemoveAll(c => Convert.ToInt32(c.Value) > Convert.ToInt32(2019));
                            ViewBag.SessionYearList = yearlist1;
                        }
                    }

                }
                else
                {
                    return RedirectToAction("M2Formgrid", "RegistrationPortal");
                }

            }
            //return View(asm);
            return View(rm);
        }

        [SessionCheckFilter]
        [HttpPost]
        public ActionResult M2FormModify(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern, string S9)
        {
            try
            {


                ViewBag.YesNoListText = new AbstractLayer.DBClass().GetYesNoText().ToList();
                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                string schlDist = null;
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass
                DataSet ds2 = objDB.ElectiveSubjects();

                if (rm.Board != "OTHER BOARD")
                {
                    rm.Other_Board = "";
                }
                ViewBag.SubS9 = ds2.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
                List<SelectListItem> items = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.SubS9.Rows)
                {
                    items.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                ViewBag.SubS10m = ViewBag.SubS9m = ViewBag.SubS9 = new SelectList(items, "Value", "Text");
                ViewBag.S10 = new SelectList(items, "Value", "Text");
                //int res = 0;
                //objDB.CheckDate(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.
                DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
                if (schlDistds.Tables[0].Rows.Count > 0)
                {
                    schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
                }
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;

                #region Matric_ElectiveSubjects_Blind_NEW 

                DataSet ds1 = objDB.Matric_ElectiveSubjects_Blind_NEW();
                //ViewBag.SubSb9 = ds1.Tables[0];

                // Blind SUB -2
                List<SelectListItem> bitems2 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[0].Rows)
                {
                    bitems2.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                // Blind SUB -3
                List<SelectListItem> bitems3 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[1].Rows)
                {
                    bitems3.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                // Blind SUB -4
                List<SelectListItem> bitems4 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[2].Rows)
                {
                    bitems4.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                // Blind SUB -5
                List<SelectListItem> bitems5 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[3].Rows)
                {
                    bitems5.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                // Blind SUB -6
                List<SelectListItem> bitems6 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[4].Rows)
                {
                    bitems6.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                // Blind SUB -7
                List<SelectListItem> bitems7 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[5].Rows)
                {
                    bitems7.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                // Blind SUB - 8
                List<SelectListItem> bitems8 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[6].Rows)
                {
                    bitems8.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                // Blind SUB - 9
                List<SelectListItem> bitems9 = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ds1.Tables[7].Rows)
                {
                    bitems9.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }


                ViewBag.bs2 = new SelectList(bitems2, "Value", "Text");
                ViewBag.bs3 = new SelectList(bitems3, "Value", "Text");
                ViewBag.bs4 = new SelectList(bitems4, "Value", "Text");
                ViewBag.bs5 = new SelectList(bitems5, "Value", "Text");
                ViewBag.bs6 = new SelectList(bitems6, "Value", "Text");
                ViewBag.bs7 = new SelectList(bitems7, "Value", "Text");
                ViewBag.bs8 = new SelectList(bitems8, "Value", "Text");
                ViewBag.bs9 = new SelectList(bitems9, "Value", "Text");


                #endregion  Matric ElectiveSubjects Blind NEW 

                ViewBag.MyMatricBoard = objCommon.GetMatricBoard();

                string nsqfsub = null;
                DataSet nsresult = objDB.SelectS9(nsqfsub); // passing Value to DBClass from model
                ViewBag.nsfq = nsresult.Tables[0];
                List<SelectListItem> nsfqList = new List<SelectListItem>();
                nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                {
                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");

                List<SelectListItem> itemsub6 = new List<SelectListItem>();
                itemsub6.Add(new SelectListItem { Text = "SOCIAL STUDIES", Value = "06" });
                ViewBag.SubS6 = new SelectList(itemsub6, "Value", "Text");

                List<SelectListItem> itemsub10 = new List<SelectListItem>();
                itemsub10.Add(new SelectListItem { Text = "HINDI", Value = "03" });
                itemsub10.Add(new SelectListItem { Text = "SOCIAL STUDIES", Value = "06" });
                ViewBag.SubS10 = new SelectList(itemsub10, "Value", "Text");
                //---------------------
                //AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                ViewBag.catg = objCommon.GetE2Category();
                ViewBag.MyBoard = objCommon.GetN2Board();

                ViewBag.Mon = objCommon.GetMonth();

                // AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                ViewBag.SessionYearList = objCommon.GetSessionYear();
                ViewBag.MyWritter = objCommon.GetWritter();
                ViewBag.Caste = objCommon.GetCaste();
                ViewBag.DAb = objCommon.GetDA();
                ViewBag.DA = objCommon.GetDA();
                ViewBag.BM = ViewBag.BM2m = ViewBag.BM3m = ViewBag.BM4m = ViewBag.BM5m = ViewBag.BM6m = ViewBag.BM7m = ViewBag.BM8m = ViewBag.BM9m = objCommon.GetMediumAll();
                ViewBag.RE = objCommon.GetReligion();
                ViewBag.MyDist = objCommon.GetDistE();
                @ViewBag.MyCastList = objCommon.GetCaste();

                ViewBag.SectionList = objCommon.GetSection();
                ViewBag.MyTeh = objCommon.GetAllTehsil();
                string dist = rm.MyDistrict;
                //string id = rm.Std_id.ToString();
                if (ModelState.IsValid)
                {
                    // AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                    string id = frm["Std_id"].ToString();
                    string formname = "M2";
                    DataSet ds = objDB.SearchStudentGetByData_Subject(id, formname);
                    string distOld = "";
                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        //DataSet ds = objDB.SearchStudentGetByData(id);
                        distOld = ds.Tables[0].Rows[0]["District"].ToString();
                        rm.MyDistrict = distOld;
                    }
                    else
                    {
                        distOld = rm.MyDistrict;
                    }
                    //string stdPic = null;
                    string formName = "M2";
                    //if (frm["file"].ToString() != "")
                    if (rm.file != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdPic = Path.GetFileName(rm.file.FileName);

                    }
                    else
                    {

                        stdPic = ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    }
                    if (rm.std_Sign != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);

                    }
                    else
                    {

                        stdSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }



                    if (rm.DocProofCertificate != null)
                    {
                        rm.ProofCertificate = Path.GetFileName(rm.DocProofCertificate.FileName);
                    }
                    else
                    {

                        rm.ProofCertificate = ds.Tables[0].Rows[0]["ProofCertificate"].ToString();
                    }


                    if (rm.DocProofNRICandidates != null)
                    {
                        rm.ProofNRICandidates = Path.GetFileName(rm.DocProofNRICandidates.FileName);
                    }
                    else
                    {

                        rm.ProofNRICandidates = ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString();
                    }






                    //var stdPic = Path.GetFileName(rm.file.FileName);
                    //var stdSign = Path.GetFileName(rm.std_Sign.FileName);
                    //--------------NSQF---------------------//
                    string ses = Session["Session"].ToString();
                    string schlcode = Session["SCHL"].ToString();
                    DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                    if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                    {
                        ViewData["NSQFSCHOOL"] = "1";
                        ViewBag.NSQFSTUDENT = "1";
                    }
                    else
                    {
                        ViewData["NSQFSCHOOL"] = "0";
                        ViewBag.NSQFSTUDENT = "0";
                    }


                    DataSet isCHkNSQF = objDB.CHkNSQFStudents(id);
                    if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
                    {
                        DataSet ds21 = objDB.ElectiveSubjects();
                        ViewBag.SubS9 = ds2.Tables[0];
                        // for dislaying message after saving storing output.
                        List<SelectListItem> items1 = new List<SelectListItem>();
                        foreach (System.Data.DataRow dr1 in ViewBag.SubS9.Rows)
                        {
                            items.Add(new SelectListItem { Text = @dr1["name_eng"].ToString(), Value = @dr1["sub"].ToString() });
                        }
                        ViewBag.SubS10m = ViewBag.SubS9m = ViewBag.SubS9 = new SelectList(items, "Value", "Text");
                        ViewBag.S10 = new SelectList(items, "Value", "Text");



                        ViewData["NSQFSTUDENT"] = "1";
                        if (rm.NsqfsubS6 == null)
                        {
                            rm.NsqfsubS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                        }
                        DataSet nsTextresult = objDB.GetNSQFVIEWSUBJECTMATRICSUBJECT(rm.NsqfsubS6, rm.PreNSQF);
                        List<SelectListItem> nssub6 = new List<SelectListItem>();
                        if (nsTextresult.Tables[0].Rows.Count > 0)
                        {
                            nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            nssub6.Add(new SelectListItem { Text = nsTextresult.Tables[0].Rows[0]["Name_ENG"].ToString(), Value = rm.NsqfsubS6 });
                            ViewBag.nsqfcatg = nssub6;
                        }
                        else
                        {

                            nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            ViewBag.nsqfcatg = nssub6;
                        }

                    }
                    else
                    {
                        DataSet ds21 = objDB.ElectiveSubjects();
                        ViewBag.SubS9 = ds21.Tables[0];
                        // for dislaying message after saving storing output.
                        List<SelectListItem> items1 = new List<SelectListItem>();
                        foreach (System.Data.DataRow dr1 in ViewBag.SubS9.Rows)
                        {
                            if (@dr1["TYPE"].ToString() == "GRADING SUBJECT")
                            {
                                items.Add(new SelectListItem { Text = @dr1["name_eng"].ToString(), Value = @dr1["sub"].ToString() });
                            }

                        }
                        ViewBag.SubS10m = ViewBag.SubS9m = ViewBag.SubS9 = new SelectList(items, "Value", "Text");
                        ViewBag.S10 = new SelectList(items, "Value", "Text");
                        //--------------

                        List<SelectListItem> nssub6 = new List<SelectListItem>();
                        nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                        ViewBag.nsqfcatg = nssub6;
                    }

                    //------------------End NSQF--------------------------//

                    // Start Subject Master
                    #region Subject
                    DataTable dtMatricSubject = new DataTable();
                    dtMatricSubject.Columns.Add(new DataColumn("CLASS", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUB", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBNM", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBABBR", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("MEDIUM", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBCAT", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUB_SEQ", typeof(int)));
                    DataRow dr = null;
                    for (int i = 1; i <= 12; i++)
                    {
                        dr = dtMatricSubject.NewRow();
                        dr["CLASS"] = 2;
                        DataSet dsSub = new DataSet();
                        dr["SUBNM"] = "";
                        dr["SUBABBR"] = "";

                        if (rm.DA == "N.A.")
                        {
                            if (i == 1)
                            {
                                if (rm.subm1 != null)
                                {
                                    dr["MEDIUM"] = rm.subm1;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subS1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.subM2 != null)
                                {
                                    dr["MEDIUM"] = rm.subM2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subS2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                if (rm.subm3 != null)
                                {
                                    dr["MEDIUM"] = rm.subm3;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subS3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                if (rm.subM4 != null)
                                {
                                    dr["MEDIUM"] = rm.subM4;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subS4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 5)
                            {
                                if (rm.subM5 != null)
                                {
                                    dr["MEDIUM"] = rm.subM5;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }

                                dr["SUB"] = rm.subS5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }

                            }
                            else if (i == 6)
                            {
                                if (rm.subM6 != null)
                                {
                                    dr["MEDIUM"] = rm.subM6;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }

                                dr["SUB"] = rm.subS6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subS6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }

                            }

                            //  //If DA=N.A. then fix sub7=Computer Science, sub8-Welcome Life and sub9=Elective Subject/NSQF subject
                            else if (i == 7)
                            {
                                rm.subS7 = "63";//sub7=Computer Science,
                                dr["SUB"] = rm.subS7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.subS7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            //else if (i == 8)
                            //{
                            //    rm.subS8 = "92";// sub8-Welcome Life
                            //    dr["SUB"] = rm.subS8; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            //    if (rm.subS8 != null)
                            //    {
                            //        dsSub = objDB.GetNAmeAndAbbrbySub(rm.subS8.ToString());
                            //        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //    }
                            //}
                            else if (i == 8)
                            {
                                dr["MEDIUM"] = "Medium";

                                if (!string.IsNullOrEmpty(NSQFsubS6))
                                {
                                    if (NSQFsubS6.ToUpper() != "NO".ToUpper() && rm.s9 != NSQFsubS6)
                                    {
                                        rm.s9 = NSQFsubS6;
                                    }
                                }

                                dr["SUB"] = rm.s9; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.s9 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.s9.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 10)
                            {
                                dr["SUB"] = rm.s10; dr["MEDIUM"] = rm.m10; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "A";
                                if (rm.NSQF == "NO")
                                {
                                    if (rm.s10 != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(rm.s10.ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }
                                }
                                else
                                {
                                    dr["SUB"] = rm.ns10;
                                    if (rm.ns10 != null && rm.ns10 != "0")
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(rm.ns10.ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }
                                }

                            }
                            else if (i == 11)
                            {
                                if (rm.m11 != null)
                                {
                                    dr["MEDIUM"] = rm.m11;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.s11; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "A";
                                if (rm.s11 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.s11.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 12)
                            {
                                if (rm.m12 != null)
                                {
                                    dr["MEDIUM"] = rm.m12;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.s12; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "A";
                                if (rm.s12 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.s12.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                        }
                        else
                        {
                            if (i == 1)
                            {
                                if (rm.bm1 != null)
                                {
                                    dr["MEDIUM"] = rm.bm1;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.bm2 != null)
                                {
                                    dr["MEDIUM"] = rm.bm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                if (rm.bm3 != null)
                                {
                                    dr["MEDIUM"] = rm.bm3;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                if (rm.bm4 != null)
                                {
                                    dr["MEDIUM"] = rm.bm4;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }

                                dr["SUB"] = rm.subbS4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 5)
                            {
                                if (rm.bm5 != null)
                                {
                                    dr["MEDIUM"] = rm.bm5;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 6)
                            {
                                dr["SUB"] = rm.subbS6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.subbS6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                if (rm.bm7 != null)
                                {
                                    dr["MEDIUM"] = rm.bm7;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.subbS7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.subbS7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            //else if (i == 8)
                            //{
                            //    if (rm.bm8 != null)
                            //    {
                            //        dr["MEDIUM"] = rm.bm8;
                            //    }
                            //    else
                            //    {
                            //        dr["MEDIUM"] = "Medium";
                            //    }
                            //    dr["SUB"] = rm.subbS8; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            //    if (rm.subbS8 != null)
                            //    {
                            //        dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS8.ToString());
                            //        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //    }
                            //}
                            else if (i == 8)
                            {
                                if (!string.IsNullOrEmpty(NSQFsubS6))
                                {
                                    if (NSQFsubS6.ToUpper() != "NO".ToUpper() && rm.s9 != NSQFsubS6)
                                    {
                                        rm.subbS9 = NSQFsubS6;
                                    }
                                }

                                dr["SUB"] = rm.subbS9; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.subbS9 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySub(rm.subbS9.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                        }
                        dtMatricSubject.Rows.Add(dr);
                        if (rm.DA == "N.A.")
                        {
                            if (i == 1)
                            {
                                dr = dtMatricSubject.NewRow();
                                dr["CLASS"] = 2;
                                //DataSet dsSub = new DataSet();
                                dr["SUBNM"] = "";
                                dr["SUBABBR"] = "";
                                dr["MEDIUM"] = "Medium";
                                if (rm.subS1 == "01")
                                {
                                    dr["SUB"] = "72"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                    if (dr["SUB"] != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }

                                }
                                else
                                {
                                    dr["SUB"] = "73"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                    if (dr["SUB"] != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }

                                }
                                dtMatricSubject.Rows.Add(dr);
                            }
                            //if (i == 6)
                            //{
                            //    dr = dtMatricSubject.NewRow();
                            //    dr["CLASS"] = 2;
                            //    //DataSet dsSub = new DataSet();
                            //    dr["SUBNM"] = "";
                            //    dr["SUBABBR"] = "";
                            //    dr["MEDIUM"] = "Medium";
                            //    //if (rm.NsqfsubS6 != "NO")
                            //    if (rm.NsqfsubS6 != "NO" && rm.NsqfsubS6 != null && rm.NsqfsubS6 != "")
                            //    {
                            //        dr["SUB"] = "85"; dr["SUB_SEQ"] = 12; dr["SUBCAT"] = "R";
                            //        if (dr["SUB"] != null)
                            //        {
                            //            dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                            //            dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //            dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //        }
                            //    }
                            //    dtMatricSubject.Rows.Add(dr);
                            //}
                        }
                        else
                        {
                            if (i == 1)
                            {
                                dr = dtMatricSubject.NewRow();
                                dr["CLASS"] = 2;
                                //DataSet dsSub = new DataSet();
                                dr["SUBNM"] = "";
                                dr["SUBABBR"] = "";
                                dr["MEDIUM"] = "Medium";
                                if (rm.subbS1 == "01")
                                {
                                    dr["SUB"] = "72"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                    if (dr["SUB"] != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }

                                }
                                else
                                {
                                    dr["SUB"] = "73"; dr["SUB_SEQ"] = 11; dr["SUBCAT"] = "R";
                                    if (dr["SUB"] != null)
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySub(dr["SUB"].ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }

                                }
                                dtMatricSubject.Rows.Add(dr);
                            }

                        }


                    }

                    dtMatricSubject.AcceptChanges();
                    dtMatricSubject = dtMatricSubject.AsEnumerable().Where(r => r.ItemArray[1].ToString() != "").CopyToDataTable();

                    #endregion subject



                    var duplicates = dtMatricSubject.AsEnumerable().GroupBy(r => r[2]).Where(gr => gr.Count() > 1).ToList();
                    if (duplicates.Any())
                    {
                        ViewBag.Duplicate = "Duplicate Subjects: " + String.Join(", ", duplicates.Select(dupl => dupl.Key));
                        ViewData["resultUpdate"] = 10;
                        return View(rm);
                    }

                    var DTNoOfSub = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") != "72" && r.Field<string>("SUB") != "73" && r.Field<string>("SUB") != "205").ToList();

                    int NoOfSub = DTNoOfSub.Count();
                    if (rm.DA == "N.A.")
                    {

                        if (NoOfSub < 8)
                        {
                            ViewData["resultUpdate"] = 15;
                            return View(rm);
                        }
                    }
                    else
                    {
                        if (NoOfSub < 6)
                        {
                            ViewData["resultUpdate"] = 15;
                            return View(rm);
                        }
                    }


                    //rm.DOB = AbstractLayer.StaticDB.GetDateFormatDDMMYYYY(rm.DOB);

                    //IsNRICandidate
                    if (rm.IsNRICandidate == true && (rm.DocProofNRICandidates != null || !string.IsNullOrEmpty(rm.ProofNRICandidates)))
                    {
                        rm.IsNRICandidate = true;
                    }
                    else
                    {
                        rm.IsNRICandidate = false;
                        rm.ProofNRICandidates = "";
                        rm.DocProofNRICandidates = null;
                    }

                    if (!string.IsNullOrEmpty(rm.DOB))
                    {
                        rm.DOB = AbstractLayer.StaticDB.DateInFormat(rm.DOB) == true ? rm.DOB : "";
                    }
                    else { rm.DOB = ""; }

                    //NsqfPattern
                    if (ViewData["NSQFSCHOOL"].ToString() == "1")
                    {
                        if (string.IsNullOrEmpty(NSQFsubS6))
                        {
                            //if (!string.IsNullOrEmpty(S9))
                            //{
                            //    // NSQFsubS6 = S9;
                            //}
                        }
                        if (string.IsNullOrEmpty(NSQFsubS6))
                        {
                            rm.NSQFPattern = "";
                        }
                        else if (NSQFsubS6 == "NO")
                        {
                            // rm.NSQFPattern = string.IsNullOrEmpty(NsqfPattern) ? "2" : NsqfPattern;
                            rm.NSQFPattern = "";
                        }
                        else
                        {
                            if (!string.IsNullOrEmpty(NSQFsubS6) && !string.IsNullOrEmpty(PreNSQF) && string.IsNullOrEmpty(NsqfPattern))
                            {
                                //  NsqfPattern = "2";
                                rm.NSQFPattern = "";
                            }
                            //if (string.IsNullOrEmpty(NsqfPattern))
                            //{
                            //    ViewData["result"] = "PATTERN";
                            //    return View(rm);
                            //}
                            ////   rm.NSQFPattern = NsqfPattern;
                            //rm.NSQFPattern = "";
                        }
                    }
                    else { rm.PreNSQF = ""; }
                    rm.NSQFPattern = "";
                    //NsqfPattern
                    // Check NSQF Subject exists in Subject List after NSQF Current Class Selection 
                    if (!string.IsNullOrEmpty(NSQFsubS6))
                    {
                        if (NSQFsubS6.ToUpper() != "NO".ToUpper())
                        {
                            rm.NsqfsubS6 = NSQFsubS6;
                            var NSQFSubExists = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") == NSQFsubS6).Count() > 0;
                            if (!NSQFSubExists)
                            {
                                ViewData["resultUpdate"] = "NSQFSUBWANT";
                                return View(rm);
                            }

                        }
                    }

                    string result = objDB.Update_M_Data(rm, frm, formName, id, stdPic, stdSign, dtMatricSubject);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not updated
                        ViewData["resultUpdate"] = 0;
                        return RedirectToAction("M2FormModify", "RegistrationPortal", new { id = encrypt.QueryStringModule.Encrypt(rm.Std_id.ToString()) });
                    }
                    else if (result == "-1")
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = -1;
                        return RedirectToAction("M2FormModify", "RegistrationPortal", new { id = encrypt.QueryStringModule.Encrypt(rm.Std_id.ToString()) });
                    }
                    else if (result.Length > 5)
                    {
                        ViewData["resultUpdate"] = 1;
                        //  distOld = Session["SCHOOLDIST"].ToString();
                        if (rm.file != null)
                        {
                            //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.file.SaveAs(path);
                            string Orgfile = result + "P" + ".jpg";
                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.file.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            filepathtosave = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                            ViewBag.ImageURL = filepathtosave;

                            string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                            string type = "P";
                            string IsNew = "YES";
                            string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                        }
                        if (rm.std_Sign != null)
                        {
                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.std_Sign.SaveAs(path);
                            string Orgfile = result + "S" + ".jpg";
                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.std_Sign.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            filepathtosave = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                            ViewBag.ImageURL = filepathtosave;


                            string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                            string type = "S";
                            string IsNew = "YES";
                            string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                        }



                        if (rm.DocProofCertificate != null)
                        {
                            //string fileExt = Path.GetExtension(rm.DocProofCertificate.FileName);

                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"), result + "C" + fileExt);
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.DocProofCertificate.SaveAs(path);
                            string fileExt = Path.GetExtension(rm.DocProofCertificate.FileName);
                            string Orgfile = result + "C" + fileExt;

                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {

                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.DocProofCertificate.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            rm.ProofCertificate = "allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate" + "/" + result + "C" + fileExt;
                            string type = "C";
                            string UpdatePicC = objDB.Updated_Pic_Data(result, rm.ProofCertificate, type);
                        }

                        if (rm.DocProofNRICandidates != null)
                        {
                            //string fileExt = Path.GetExtension(rm.DocProofNRICandidates.FileName);
                            //string pathName = formName + "/" + schlDist + "/ProofNRICandidates";

                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + pathName), result + "NRI" + fileExt);
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + pathName));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.DocProofNRICandidates.SaveAs(path);
                            string fileExt = Path.GetExtension(rm.DocProofNRICandidates.FileName);
                            string pathName = formName + "/" + schlDist + "/ProofNRICandidates";
                            string Orgfile = result + "NRI" + fileExt;

                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    ///file.CopyTo(newMemoryStream);

                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.DocProofNRICandidates.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidates/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            rm.ProofNRICandidates = "allfiles/Upload2024/" + pathName + "/" + result + "NRI" + fileExt;
                            string type = "NRI";
                            string UpdatePicN = objDB.Updated_Pic_Data(result, rm.ProofNRICandidates, type);
                        }

                        ModelState.Clear();
                        //--For Showing Message---------//
                        ViewData["resultUpdate"] = 1;
                        //return RedirectToAction("M2Formgrid", "RegistrationPortal");
                        ViewBag.nsqfcatg = "";
                        return View(rm);

                    }
                    else
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = -1;
                        return RedirectToAction("M2FormModify", "RegistrationPortal", new { id = encrypt.QueryStringModule.Encrypt(rm.Std_id.ToString()) });
                    }
                }

            }
            catch (Exception ex1)
            {
                ViewData["ErrorMessage"] = ex1.Message;
                oErrorLog.WriteErrorLog(ex1.ToString(), Path.GetFileName(Request.Path));

            }
            return View(rm);
        }


        [SessionCheckFilter]
        public ActionResult M2FormDelete(string id)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }

            }
            if (id == null)
            {
                return RedirectToAction("M2Formgrid", "RegistrationPortal");
            }
            string formname = "M2";
            id = encrypt.QueryStringModule.Decrypt(id);
            string schlDist = null;
            DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
            if (schlDistds.Tables[0].Rows.Count > 0)
            {
                schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
            }
            DataSet ds = objDB.SearchStudentGetByData_Subject(id, formname);
            //DataSet ds = objDB.SearchStudentGetByData(id);

            string result = "";
            if (ds == null || ds.Tables[0].Rows.Count == 0)
            {
                result = objDB.Delete_M_FromData(id);
                return RedirectToAction("M2Formgrid", "RegistrationPortal");
            }
            else
            {
                string dist = ds.Tables[0].Rows[0]["District"].ToString();
                string imgPhoto = ds.Tables[0].Rows[0]["std_Photo"].ToString();
                string imgSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
                string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();
                string ProofCertificate = ds.Tables[0].Rows[0]["ProofCertificate"].ToString();
                string ProofNRICandidates = ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString();

                result = objDB.Delete_M_FromData(id); // passing Value to DBClass from model

                //--------Photo Delete------
                RegistrationModels RM = new RegistrationModels();

                var fileDesti = ""; var fileDestiPic = ""; var fileDestiProof = ""; var fileDestiNRI = "";


                //if (Session["Session"] != null)
                //{
                //    if (Session["Session"].ToString() == "2023-2024")
                //    {
                //        // var pathPhoto = "D:\\LatestPSEBONLINE - 2018 - 12042017\\PSEBONLINE\\PSEBONLINE\\Upload\\upload2018\\N1\\165\\Photo\\N1165100003P.jpg";
                //        var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), imgPhoto);
                //        //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

                //        if (System.IO.File.Exists(pathPhoto))
                //        {
                //            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"));
                //            if (!Directory.Exists(FilepathExist))
                //            {
                //                Directory.CreateDirectory(FilepathExist);
                //            }

                //            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                //            fileDestiPic = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"), imgPhoto);
                //            System.IO.File.Move(pathPhoto, fileDestiPic);
                //            System.IO.File.Delete(pathPhoto);

                //        }
                //        var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), imgSign);
                //        //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
                //        if (System.IO.File.Exists(pathSIGN))
                //        {
                //            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"));
                //            if (!Directory.Exists(FilepathExist))
                //            {
                //                Directory.CreateDirectory(FilepathExist);
                //            }
                //            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                //            fileDesti = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"), imgSign);
                //            System.IO.File.Move(pathSIGN, fileDesti);
                //            System.IO.File.Delete(pathSIGN);

                //        }
                //        //------------End photo Delete------


                //        // var pathPhoto = "D:\\LatestPSEBONLINE - 2018 - 12042017\\PSEBONLINE\\PSEBONLINE\\Upload\\upload2018\\N1\\165\\Photo\\N1165100003P.jpg";
                //        var pathProofCertificate = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"), ProofCertificate);
                //        //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

                //        if (System.IO.File.Exists(pathProofCertificate))
                //        {
                //            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificateD"));
                //            if (!Directory.Exists(FilepathExist))
                //            {
                //                Directory.CreateDirectory(FilepathExist);
                //            }

                //            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                //            fileDestiProof = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificateD"), ProofCertificate);
                //            System.IO.File.Move(pathProofCertificate, fileDestiProof);
                //            System.IO.File.Delete(pathProofCertificate);

                //        }
                //        var pathProofNRICandidates = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidates"), ProofNRICandidates);
                //        //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
                //        if (System.IO.File.Exists(pathProofNRICandidates))
                //        {
                //            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidatesD"));
                //            if (!Directory.Exists(FilepathExist))
                //            {
                //                Directory.CreateDirectory(FilepathExist);
                //            }
                //            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                //            fileDestiNRI = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidatesD"), ProofNRICandidates);
                //            System.IO.File.Move(pathProofNRICandidates, fileDestiNRI);
                //            System.IO.File.Delete(pathProofNRICandidates);

                //        }
                //    }

                //}


                //------------End photo Delete------
                ViewData["resultDelete"] = result;
                // for dislaying message after saving storing output.
                return RedirectToAction("M2Formgrid", "RegistrationPortal");

            }
        }

        public JsonResult GetS(string s) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            DataSet result = objDB.SelectS1(s); // passing Value to DBClass from model

            ViewBag.S = result.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> SList = new List<SelectListItem>();
            //List<string> items = new List<string>();
            SList.Add(new SelectListItem { Text = "medium", Value = "0" });
            foreach (System.Data.DataRow dr in ViewBag.S.Rows)
            {
                //if (@dr["medium2"].ToString() == "" || @dr["medium2"].ToString() == null)
                //{
                //    SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });
                //    SList.Add(new SelectListItem { Text = @dr["medium3"].ToString(), Value = @dr["medium3"].ToString() });

                //}

                if (@dr["medium2"].ToString() == "" || @dr["medium2"].ToString() == null)
                {
                    SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });

                }
                else if (@dr["medium3"].ToString() == "" || @dr["medium3"].ToString() == null)
                {
                    SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });
                    SList.Add(new SelectListItem { Text = @dr["medium2"].ToString(), Value = @dr["medium2"].ToString() });

                }
                else
                {
                    SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });
                    SList.Add(new SelectListItem { Text = @dr["medium2"].ToString(), Value = @dr["medium2"].ToString() });
                    SList.Add(new SelectListItem { Text = @dr["medium3"].ToString(), Value = @dr["medium3"].ToString() });
                }

                //SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });
                //SList.Add(new SelectListItem { Text = @dr["medium2"].ToString(), Value = @dr["medium2"].ToString() });
                //SList.Add(new SelectListItem { Text = @dr["medium3"].ToString(), Value = @dr["medium3"].ToString() });

            }
            //if(s == "01" || s == "07")
            //{
            //    ViewBag.S1 = SList;
            //}
            //if (s == "03" || s == "71")
            //{
            //    ViewBag.S1 = SList;
            //}

            return Json(SList);

        }

        public JsonResult GetNSFQ(string s) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            DataSet result = objDB.SelectS9(s); // passing Value to DBClass from model

            ViewBag.nsfq = result.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //List<string> items = new List<string>();
            nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {
                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });

            }
            return Json(nsfqList);
        }

        public JsonResult GetNotNSFQ(string s) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            DataSet result = objDB.ElectiveSubjects(); // passing Value to DBClass from model

            ViewBag.nsfq = result.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //List<string> items = new List<string>();
            nsfqList.Add(new SelectListItem { Text = "Elective Subjects", Value = "0" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {
                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
            }
            return Json(nsfqList);
        }

        #endregion M2 form start

        //----------------------------------M2 End---------------------

        //-----------------------T1 Start----------------------

        public JsonResult GetSeniorSubjectsByGroup(string group, string IsNSQF, string tcode)
        {
            List<SelectListItem> subList1 = new List<SelectListItem>();
            List<SelectListItem> subList2 = new List<SelectListItem>();
            List<SelectListItem> subList3 = new List<SelectListItem>();
            List<SelectListItem> subList4 = new List<SelectListItem>();
            List<SelectListItem> subList5 = new List<SelectListItem>();
            List<SelectListItem> subList6 = new List<SelectListItem>();
            List<SelectListItem> subList7 = new List<SelectListItem>();
            List<SelectListItem> subList8 = new List<SelectListItem>();
            List<SelectListItem> subList9 = new List<SelectListItem>();
            string subCodeList1 = string.Empty;
            string subCodeList2 = string.Empty;
            string subCodeList3 = string.Empty;
            string subCodeList4 = string.Empty;
            string subCodeList5 = string.Empty;
            string subCodeList6 = string.Empty;
            string subCodeList7 = string.Empty;
            string subCodeList8 = string.Empty;
            string subCodeList9 = string.Empty;

            if (string.IsNullOrEmpty(group))
            {
                return Json(new
                {
                    sub1 = subList1,
                    sub2 = subList2,
                    sub3 = subList3,
                    sub4 = subList4,
                    sub5 = subList5,
                    sub6 = subList6,
                    sub7 = subList7,
                    sub8 = subList8,
                    sub9 = subList9
                }, JsonRequestBehavior.AllowGet);
            }
            else if (group.ToUpper() == "H".ToUpper() || group.ToUpper() == "HUMANITIES".ToUpper())
            {
                subCodeList1 = "001";
                subList1 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList1);

                subCodeList2 = "002,003";
                subList2 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList2);

                subCodeList3 = "139";
                subList3 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList3);

                subCodeList4 = "146";
                subList4 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList4);

                subCodeList5 = "210";
                subList5 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList5);


                subCodeList6 = "hum='Y' AND TYPE!='COMPULSARY' AND TYPE!='NSQF'";
                subList6 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList6);
                subList7 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList6);
                subList8 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList6);
                subList9 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList6);

            }


            else if (group.ToUpper() == "S".ToUpper() || group.ToUpper() == "SCIENCE".ToUpper())
            {
                subCodeList1 = "001";
                subList1 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList1);

                subCodeList2 = "002,003";
                subList2 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList2);

                subCodeList3 = "139";
                subList3 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList3);

                subCodeList4 = "146";
                subList4 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList4);

                subCodeList5 = "210";
                subList5 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList5);

                subCodeList6 = "052";
                subList6 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList6);

                subCodeList7 = "053";
                subList7 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList7);

                subCodeList8 = "028,054";
                subList8 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList8);

                subCodeList9 = "sci='Y' AND sub not in (001,002,003,139,146,210,052,053)";
                subList9 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList9);

            }


            else if (group.ToUpper() == "C".ToUpper() || group.ToUpper() == "COMMERCE".ToUpper())
            {
                subCodeList1 = "001";
                subList1 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList1);

                subCodeList2 = "002,003";
                subList2 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList2);

                subCodeList3 = "139";
                subList3 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList3);

                subCodeList4 = "146";
                subList4 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList4);

                subCodeList5 = "210";
                subList5 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList5);

                subCodeList6 = "141";
                subList6 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList6);

                subCodeList7 = "142";
                subList7 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList7);

                subCodeList8 = "026,144";
                subList8 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList8);

                subCodeList9 = "Comm='Y' AND sub not in (001,002,003,139,146,210,141,142)";
                subList9 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList9);

            }


            else if (group.ToUpper() == "A".ToUpper() || group.ToUpper() == "Agriculture".ToUpper())
            {
                subCodeList1 = "001";
                subList1 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList1);

                subCodeList2 = "002,003";
                subList2 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList2);

                subCodeList3 = "139";
                subList3 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList3);

                subCodeList4 = "146";
                subList4 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList4);

                subCodeList5 = "210";
                subList5 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList5);

                subCodeList6 = "065";
                subList6 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList6);

                subCodeList7 = "'042','052','053','026'";
                subList7 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList7);

                subCodeList8 = "'042','052','053','026'";
                subList8 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList8);

                subCodeList9 = "AGRI='Y' AND sub not in (001,002,003,139,146,210)";
                subList9 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList9);


            }


            else if (group.ToUpper() == "V".ToUpper() || group.ToUpper() == "Vocational".ToUpper())
            {
                subCodeList1 = "001";
                subList1 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList1);

                subCodeList2 = "002,003";
                subList2 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList2);

                subCodeList3 = "139";
                subList3 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList3);

                subCodeList4 = "146";
                subList4 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList4);

                subCodeList5 = "210";
                subList5 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList5);

                //subCodeList6 = "065";
                //subList6 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList6);

                //subCodeList7 = "'042','052','053','026'";
                //subList7 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList7);

                //subCodeList8 = "'042','052','053','026'";
                //subList8 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList8);

                //subCodeList9 = "AGRI='Y' AND sub not in (001,002,003,139,146,210)";
                //subList9 = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList9);                

            }

            return Json(new
            {
                sub1 = subList1,
                sub2 = subList2,
                sub3 = subList3,
                sub4 = subList4,
                sub5 = subList5,
                sub6 = subList6,
                sub7 = subList7,
                sub8 = subList8,
                sub9 = subList9
            }, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetSeniorSubjectsByGroupAndSequence(string group, string seq, string IsNSQF, string tcode)
        {
            List<SelectListItem> subList = new List<SelectListItem>();
            string subCodeList = string.Empty;

            if (string.IsNullOrEmpty(seq) || string.IsNullOrEmpty(group))
            {
                subList = new List<SelectListItem>();
                return Json(subList);
            }
            else if (group.ToUpper() == "H".ToUpper() || group.ToUpper() == "HUMANITIES".ToUpper())
            {
                if (seq == "1")
                {
                    subCodeList = "001";
                }
                else if (seq == "2")
                {
                    subCodeList = "002,003";
                }
                else if (seq == "3")
                {
                    subCodeList = "139";
                }
                else if (seq == "4")
                {
                    subCodeList = "146";
                }
                else if (seq == "5")
                {
                    subCodeList = "210";
                }
                else if (seq == "6" || seq == "7" || seq == "8" || seq == "9")
                {
                    //subjects for sub6,sub7,sub8,sub9 (where del=' ' AND hum='Y' AND TYPE!='COMPULSARY' AND TYPE!='NSQF')
                    subCodeList = "hum='Y' AND TYPE!='COMPULSARY' AND TYPE!='NSQF'";
                }

            }


            else if (group.ToUpper() == "S".ToUpper() || group.ToUpper() == "SCIENCE".ToUpper())
            {
                if (seq == "1")
                {
                    subCodeList = "001";
                }
                else if (seq == "2")
                {
                    subCodeList = "002,003";
                }
                else if (seq == "3")
                {
                    subCodeList = "139";
                }
                else if (seq == "4")
                {
                    subCodeList = "146";
                }
                else if (seq == "5")
                {
                    subCodeList = "210";
                }
                else if (seq == "6")
                {
                    subCodeList = "052";
                }
                else if (seq == "7")
                {
                    subCodeList = "053";
                }
                else if (seq == "8")
                {
                    subCodeList = "028,054";
                }
                else if (seq == "9")
                {
                    subCodeList = "sci='Y' AND sub not in (001,002,003,139,146,210,052,053)";
                }
            }


            else if (group.ToUpper() == "C".ToUpper() || group.ToUpper() == "COMMERCE".ToUpper())
            {
                if (seq == "1")
                {
                    subCodeList = "001";
                }
                else if (seq == "2")
                {
                    subCodeList = "002,003";
                }
                else if (seq == "3")
                {
                    subCodeList = "139";
                }
                else if (seq == "4")
                {
                    subCodeList = "146";
                }
                else if (seq == "5")
                {
                    subCodeList = "210";
                }
                else if (seq == "6")
                {
                    subCodeList = "141";
                }
                else if (seq == "7")
                {
                    subCodeList = "142";
                }
                else if (seq == "8")
                {
                    subCodeList = "026,144";
                }
                else if (seq == "9")
                {
                    subCodeList = "Comm='Y' AND sub not in (001,002,003,139,146,210,141,142)";
                }

            }


            else if (group.ToUpper() == "A".ToUpper() || group.ToUpper() == "Agriculture".ToUpper())
            {
                if (seq == "1")
                {
                    subCodeList = "001";
                }
                else if (seq == "2")
                {
                    subCodeList = "002,003";
                }
                else if (seq == "3")
                {
                    subCodeList = "139";
                }
                else if (seq == "4")
                {
                    subCodeList = "146";
                }
                else if (seq == "5")
                {
                    subCodeList = "210";
                }
                else if (seq == "6")
                {
                    subCodeList = "065";
                }
                else if (seq == "7")
                {
                    subCodeList = "'042','052','053','026'";
                }
                else if (seq == "8")
                {
                    subCodeList = "'042','052','053','026'";
                }
                else if (seq == "9")
                {
                    subCodeList = "AGRI='Y' AND sub not in (001,002,003,139,146,210)";
                }

            }


            else if (group.ToUpper() == "V".ToUpper() || group.ToUpper() == "Vocational".ToUpper())
            {
                if (seq == "1")
                {
                    subCodeList = "001";
                }
                else if (seq == "2")
                {
                    subCodeList = "002,003";
                }
                else if (seq == "3")
                {
                    subCodeList = "139";
                }
                else if (seq == "4")
                {
                    subCodeList = "146";
                }
                else if (seq == "5")
                {
                    subCodeList = "210";
                }
                else if (seq == "6")
                {
                    subCodeList = "065";
                }
                else if (seq == "7")
                {
                    subCodeList = "'042','052','053','026'";
                }
                else if (seq == "8")
                {
                    subCodeList = "'042','052','053','026'";
                }
                else if (seq == "9")
                {
                    subCodeList = "AGRI='Y' AND sub not in (001,002,003,139,146,210)";
                }

            }

            subList = AbstractLayer.RegistrationDB.GetSeniorSubjectsBySubList(subCodeList);
            return Json(subList);
        }



        #region T1 Form Start
        [SessionCheckFilter]
        public ActionResult T1Form()
        {
            return RedirectToAction("Portal", "RegistrationPortal");
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            ViewBag.YesNoList = new AbstractLayer.DBClass().GetYesNo().Where(s => s.Value == "Y").ToList();

            List<SelectListItem> SubWEL = new List<SelectListItem>();
            SubWEL.Add(new SelectListItem { Text = "WELCOME LIFE", Value = "210" });
            ViewBag.SubWEL = new SelectList(SubWEL, "Value", "Text");

            ViewBag.vm5 = objCommon.GetGroupMedium();
            ViewBag.vm6 = objCommon.GetGroupMedium();
            ViewBag.vm7 = objCommon.GetGroupMedium();
            RegistrationModels rm = new RegistrationModels();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass


            int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());


            string admdate = "", LateAdmDate = "", StartAdmDate = "";
            objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
            ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
            if (status > 0)
            {
                if (status == 0)
                { return RedirectToAction("Index", "Home"); }
            }
            else
            {
                return RedirectToAction("Index", "Home");
            }


            //-----------------------------------------------------Nsqf -------------------------
            string ses = Session["Session"].ToString();
            string schlcode = Session["SCHL"].ToString();
            DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
            if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
            {
                ViewData["NSQFSCHOOL"] = "1";
            }
            else
            {
                ViewData["NSQFSCHOOL"] = "0";
            }
            string nsqfsub = null;
            DataSet nsresult = objDB.SelectS12(nsqfsub); // passing Value to DBClass from model
            ViewBag.nsfq = nsresult.Tables[0];
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {
                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
            }
            ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
            ViewBag.nsqfcatg = new SelectList(nsfqList, "Value", "Text");

            //-----------------------------------------------------End Nsqf -------------------------
            DataSet dsCOMM = objDB.SubjectsTweleve_Commerce();
            if (dsCOMM == null || dsCOMM.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.ssub = dsCOMM.Tables[0];
                List<SelectListItem> COMMSub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in dsCOMM.Tables[0].Rows)
                {
                    COMMSub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                ViewBag.coms9List = new SelectList(COMMSub, "Value", "Text");


            }

            DataSet scis = objDB.SubjectsTweleve_SCI();
            if (scis == null || scis.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.ssub = scis.Tables[0];
                List<SelectListItem> scisub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.ssub.Rows)
                {
                    scisub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                ViewBag.sss8 = new SelectList(scisub, "Value", "Text");


            }
            DataSet hds = objDB.SubjectsTweleve_hum();
            if (hds == null || hds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.hsub = hds.Tables[0];
                List<SelectListItem> humsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.hsub.Rows)
                {
                    humsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.hs5 = new SelectList(humsub, "Value", "Text");
                ViewBag.hs6 = new SelectList(humsub, "Value", "Text");
                ViewBag.hs7 = new SelectList(humsub, "Value", "Text");
                ViewBag.hs8 = new SelectList(humsub, "Value", "Text");
                ViewBag.vs10 = new SelectList(humsub, "Value", "Text"); //--------humanity Subjects Equals To Vocational Aditional Subjects
            }
            DataSet tecds = objDB.SubjectsTweleve_tech();
            if (tecds == null || tecds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.tsub = tecds.Tables[0];
                List<SelectListItem> tecsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.tsub.Rows)
                {
                    tecsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.ts5 = new SelectList(tecsub, "Value", "Text");
                ViewBag.ts6 = new SelectList(tecsub, "Value", "Text");
                ViewBag.ts7 = new SelectList(tecsub, "Value", "Text");
                ViewBag.ts8 = new SelectList(tecsub, "Value", "Text");

            }
            DataSet agrds = objDB.SubjectsTweleve_agr();
            if (agrds == null || agrds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.agrsub = agrds.Tables[0];
                List<SelectListItem> agrsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.agrsub.Rows)
                {
                    agrsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                List<SelectListItem> agrAdditionAlsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in agrds.Tables[1].Rows)
                {
                    agrAdditionAlsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                ViewBag.as5 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value == "065").ToList();
                ViewBag.as6 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value != "065").ToList();
                ViewBag.as7 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value != "065").ToList();
                ViewBag.as8 = new SelectList(agrAdditionAlsub, "Value", "Text");

            }
            DataSet vocds = objDB.Voc_agr();
            if (vocds == null || vocds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.vocsub = vocds.Tables[0];
                List<SelectListItem> vsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.vocsub.Rows)
                {
                    vsub.Add(new SelectListItem { Text = @dr["group"].ToString(), Value = @dr["group"].ToString() });
                }

                ViewBag.selgroup = new SelectList(vsub, "Value", "Text");

            }
            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
            List<SelectListItem> reslist = objCommon.GetMatricResult().Where(s => s.Value.ToUpper() == "PASS").ToList();
            //reslist.RemoveRange(2, 12);
            ViewBag.MyMatricResult = reslist;

            ViewBag.MyWritter = objCommon.GetWritter();
            //ViewBag.MyBoard = objCommon.GetMatricBoard();
            ViewBag.MyBoard = objCommon.GetMatricBoard().Where(s => Convert.ToString(s.Value).ToUpper() == "P.S.E.B BOARD".ToUpper()).ToList();
            ViewBag.Mon = objCommon.GetMonth();
            List<SelectListItem> yearlist = objCommon.GetSessionYear(); // passing Value to DBClass from model   
            yearlist.RemoveRange(3, 45);
            ViewBag.TSYearList = yearlist;
            //ViewBag.SessionYearList = objCommon.GetSessionYear();
            ViewBag.SessionYearListT1 = objCommon.GetSessionYear().Where(s => Convert.ToInt32(s.Value) <= 2019).ToList();


            @ViewBag.DA = objCommon.GetDA();
            // @ViewBag.groupT = objCommon.getGroupT();

            List<SelectListItem> MyGroupList = objCommon.GroupName();
            DataTable dtAssignSubject = objCommon.GetAssignSubjectBySchool(Session["SCHL"].ToString());
            if (dtAssignSubject != null && dtAssignSubject.Rows.Count > 0)
            {
                ViewBag.MyGroup = objCommon.GetSubjectsBySchool(dtAssignSubject, MyGroupList);
            }
            ViewBag.MyGroup = MyGroupList;

            ViewBag.MyDist = objCommon.GetDistE();
            ViewBag.SectionList = objCommon.GetSection();
            ViewBag.Section = "0";
            string formname = "T1";
            string schlid = "";
            if (Session["SCHL"] != null)
            {
                schlid = Session["SCHL"].ToString();
            }
            else
            {
                return View(rm);
            }
            DataSet seleLastCan = objDB.SelectlastEntryCandidate(formname, schlid);
            // DataSet seleLastCan = objDB.SelectlastEntry_E2_Candidate(formname);
            if (seleLastCan.Tables[0].Rows.Count > 0)
            {
                //                rm.Board_Roll_Num, rm.Admission_Num,po.Candi_Name,po.Father_Name,po.Std_id
                //FROM regMasterRegular2016 rm, Personal_Info Po
                //WHERE po.Std_id = rm.Std_id and rm.std_id = (SELECT max(rm.std_id) FROM regMasterRegular2016 rm)
                @ViewBag.message = "1";
                @ViewBag.Board_Roll_Num = seleLastCan.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                @ViewBag.Admission_Num = seleLastCan.Tables[0].Rows[0]["Admission_Num"].ToString();
                @ViewBag.Candi_Name = seleLastCan.Tables[0].Rows[0]["Candi_Name"].ToString();
                @ViewBag.Father_Name = seleLastCan.Tables[0].Rows[0]["Father_Name"].ToString();
                @ViewBag.id = seleLastCan.Tables[0].Rows[0]["Std_id"].ToString();
                @ViewBag.lot = seleLastCan.Tables[0].Rows[0]["lot"].ToString();
            }
            else
            {
                @ViewBag.message = "Record Not Found";
            }
            return View(rm);
        }

        [SessionCheckFilter]
        [HttpPost]
        public ActionResult T1Form(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern, string subS6)
        {
            return RedirectToAction("Portal", "RegistrationPortal");
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            ViewBag.YesNoList = new AbstractLayer.DBClass().GetYesNo().Where(s => s.Value == "Y").ToList();
            List<SelectListItem> SubWEL = new List<SelectListItem>();
            SubWEL.Add(new SelectListItem { Text = "WELCOME LIFE", Value = "210" });
            ViewBag.SubWEL = new SelectList(SubWEL, "Value", "Text");

            string schlDist = null;
            ViewBag.vm5 = objCommon.GetGroupMedium();
            ViewBag.vm6 = objCommon.GetGroupMedium();
            ViewBag.vm7 = objCommon.GetGroupMedium();
            ViewBag.sm2 = objCommon.GetGroupMedium();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            DataSet result1 = objDB.SelectDist(); // passing Value to DBClass from model
            ViewBag.MyDist = result1.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> items = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
            {
                items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
            }
            // ViewBag.MyDist = items;
            ViewBag.MyDist = new SelectList(items, "Value", "Text", 047);
            ViewBag.MyBoard = objCommon.GetN2Board();
            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
            ViewBag.MyMatricResult = objCommon.GetMatricResult().Where(s => s.Value.ToUpper() == "PASS").ToList();
            //int res = 0;
            //objDB.CheckDateE1E2T1T1(Session["SCHL"].ToString(), out res);
            //ViewBag.dsts = res;
            DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
            if (schlDistds.Tables[0].Rows.Count > 0)
            {
                schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
            }

            string admdate = "", LateAdmDate = "", StartAdmDate = "";
            objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
            ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
            //List<SelectListItem> yearlist = objCommon.GetSessionYear(); // passing Value to DBClass from model   
            //yearlist.RemoveRange(3, 45);
            //ViewBag.TSYearList = yearlist;
            ViewBag.SessionYearListT1 = objCommon.GetSessionYear().Where(s => Convert.ToInt32(s.Value) <= 2019).ToList();

            ViewBag.MyGroup = objCommon.GroupName();
            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
            ViewBag.MyWritter = objCommon.GetWritter();

            string session = null;
            string idno = null;
            string schl = null;
            if (Session["Session"] != null)
            {
                session = Session["Session"].ToString();
                idno = Session["IDNO"].ToString();
                schl = Session["SCHL"].ToString();
            }
            else
            {
                return RedirectToAction("Index", "Login");
            }



            //Check server side validation using data annotation
            if (ModelState.IsValid)
            {
                string group = rm.MyGroup;
                string dist = frm["MyDist"].ToString();
                string Tehsil = frm["MyTeh"].ToString();

                string formName = "T1";

                if (rm.file != null)
                {
                    stdPic = Path.GetFileName(rm.file.FileName);
                }

                if (rm.std_Sign != null)
                {
                    stdSign = Path.GetFileName(rm.std_Sign.FileName);
                }






                // Start Subject Master
                DataTable dtMatricSubject = new DataTable();
                dtMatricSubject.Columns.Add(new DataColumn("CLASS", typeof(string)));
                dtMatricSubject.Columns.Add(new DataColumn("SUB", typeof(string)));
                dtMatricSubject.Columns.Add(new DataColumn("SUBNM", typeof(string)));
                dtMatricSubject.Columns.Add(new DataColumn("SUBABBR", typeof(string)));
                dtMatricSubject.Columns.Add(new DataColumn("MEDIUM", typeof(string)));
                dtMatricSubject.Columns.Add(new DataColumn("SUBCAT", typeof(string)));
                dtMatricSubject.Columns.Add(new DataColumn("SUB_SEQ", typeof(int)));

                dtMatricSubject.Columns.Add(new DataColumn("GROUP", typeof(string)));
                dtMatricSubject.Columns.Add(new DataColumn("TCODE", typeof(string)));
                dtMatricSubject.Columns.Add(new DataColumn("TNAME", typeof(string)));

                DataRow dr = null;
                for (int i = 1; i <= 11; i++)
                {
                    dr = dtMatricSubject.NewRow();
                    dr["CLASS"] = 4;
                    DataSet dsSub = new DataSet();
                    dr["SUBNM"] = "";
                    dr["SUBABBR"] = "";


                    dr["GROUP"] = "";
                    dr["TCODE"] = "";
                    dr["TNAME"] = "";


                    //---------------------------------Science----------------------//
                    if (rm.Tgroup == "SCIENCE")
                    {
                        if (i == 1)
                        {
                            dr["SUB"] = rm.coms1; dr["MEDIUM"] = rm.comm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.coms1 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms1.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 2)
                        {
                            if (rm.comm2 != null)
                            {
                                dr["MEDIUM"] = rm.comm2;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.coms2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.coms2 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms2.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 3)
                        {
                            dr["SUB"] = rm.coms3; dr["MEDIUM"] = rm.comm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.coms3 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms3.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 4)
                        {
                            dr["SUB"] = rm.coms4sci; dr["MEDIUM"] = rm.comm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.coms4sci != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms4sci.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 5)
                        {
                            dr["SUB"] = rm.ss5; dr["MEDIUM"] = rm.sm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.ss5 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss5.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 6)
                        {
                            dr["SUB"] = rm.ss6; dr["MEDIUM"] = rm.sm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.ss6 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss6.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 7)
                        {
                            dr["SUB"] = rm.ss7; dr["MEDIUM"] = rm.sm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.ss7 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss7.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 8)
                        {
                            dr["SUB"] = rm.ss8; dr["MEDIUM"] = rm.sm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                            if (rm.ss8 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss8.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }


                    }
                    //---------------------------------End Science----------------------//
                    //-----------------------------------Commerce------------
                    if (rm.Tgroup == "COMMERCE")
                    {
                        if (i == 1)
                        {
                            dr["SUB"] = rm.coms1; dr["MEDIUM"] = rm.comcm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.coms1 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms1.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 2)
                        {
                            if (rm.comcm2 != null)
                            {
                                dr["MEDIUM"] = rm.comcm2;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.comcs2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.comcs2 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.comcs2.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 3)
                        {
                            dr["SUB"] = rm.coms3; dr["MEDIUM"] = rm.comcm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.coms3 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms3.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 4)
                        {
                            dr["SUB"] = rm.coms4comm; dr["MEDIUM"] = rm.comcm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.coms4comm != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms4comm.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 5)
                        {
                            dr["SUB"] = rm.coms5; dr["MEDIUM"] = rm.comm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.coms5 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms5.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 6)
                        {
                            dr["SUB"] = rm.coms6; dr["MEDIUM"] = rm.comm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.coms6 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms6.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 7)
                        {
                            dr["SUB"] = rm.coms7; dr["MEDIUM"] = rm.comm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.coms7 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms7.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 8)
                        {
                            dr["SUB"] = rm.coms8; dr["MEDIUM"] = rm.comm8; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.coms8 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms8.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 9)
                        {
                            dr["SUB"] = rm.coms9; dr["MEDIUM"] = rm.comm9; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                            if (rm.coms9 != null)
                            {
                                if (rm.coms9 == "0")
                                {

                                }
                                else
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms9.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }

                            }
                        }

                    }
                    //-----------------------------------End Commerce------------
                    //-----------------------------------Humanity------------
                    if (rm.Tgroup == "HUMANITIES")
                    {
                        if (i == 1)
                        {
                            dr["SUB"] = rm.hums1; dr["MEDIUM"] = rm.humm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.hums1 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums1.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 2)
                        {
                            if (rm.humm2 != null)
                            {
                                dr["MEDIUM"] = rm.humm2;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.hums2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.hums2 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums2.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 3)
                        {
                            dr["SUB"] = rm.hums3; dr["MEDIUM"] = rm.humm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.hums3 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums3.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 4)
                        {
                            dr["SUB"] = rm.hums4; dr["MEDIUM"] = rm.humm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.hums4 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums4.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 5)
                        {
                            if (rm.humm5 != null)
                            {
                                dr["MEDIUM"] = rm.humm5;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.hums5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.hums5 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums5.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 6)
                        {
                            if (rm.humm6 != null)
                            {
                                dr["MEDIUM"] = rm.humm6;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.hums6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.hums6 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums6.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 7)
                        {
                            if (rm.humm7 != null)
                            {
                                dr["MEDIUM"] = rm.humm7;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.hums7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.hums7 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums7.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 8)
                        {
                            if (rm.humm8 != null)
                            {
                                dr["MEDIUM"] = rm.humm8;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.hums8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                            if (rm.hums8 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums8.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }


                    }
                    //-----------------------------------End Humanity------------
                    //-----------------------------------vocational------------
                    if (rm.Tgroup == "VOCATIONAL")
                    {
                        if (i == 1)
                        {
                            dr["SUB"] = rm.vocs1; dr["MEDIUM"] = rm.vocm1; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                            if (rm.vocs1 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs1.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();

                            }
                        }
                        else if (i == 2)
                        {
                            if (rm.vocm2 != null)
                            {
                                dr["MEDIUM"] = rm.vocm2;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.vocs2; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                            if (rm.vocs2 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs2.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();

                                //dr["GROUP"] = dsSub.Tables[0].Rows[0]["GROUP"].ToString();
                                //dr["TCODE"] = dsSub.Tables[0].Rows[0]["TCODE"].ToString();
                                //dr["TNAME"] = dsSub.Tables[0].Rows[0]["TNAME"].ToString();
                            }
                        }
                        else if (i == 3)
                        {
                            dr["SUB"] = rm.vocs3; dr["MEDIUM"] = rm.vocm3; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                            if (rm.vocs3 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs3.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                //dr["GROUP"] = dsSub.Tables[0].Rows[0]["GROUP"].ToString();
                                //dr["TCODE"] = dsSub.Tables[0].Rows[0]["TCODE"].ToString();
                                //dr["TNAME"] = dsSub.Tables[0].Rows[0]["TNAME"].ToString();
                            }
                        }
                        else if (i == 4)
                        {
                            dr["SUB"] = rm.vocs4; dr["MEDIUM"] = rm.vocm4; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                            if (rm.vocs4 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs4.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 5)
                        {
                            dr["SUB"] = rm.vocs5; dr["MEDIUM"] = rm.vocm5; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                            if (rm.vocs5 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs5.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 6)
                        {
                            dr["SUB"] = rm.vocs6; dr["MEDIUM"] = rm.vocm6; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                            if (rm.vocs6 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs6.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 7)
                        {
                            dr["SUB"] = rm.vocs7; dr["MEDIUM"] = rm.vocm7; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                            if (rm.vocs7 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs7.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 8)
                        {
                            dr["SUB"] = rm.vocs8; dr["MEDIUM"] = rm.vocm8; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "A";
                            if (rm.vocs8 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs8.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 9)
                        {
                            dr["SUB"] = rm.vocs9; dr["MEDIUM"] = rm.vocm9; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                            if (rm.vocs9 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs9.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 10)
                        {
                            dr["SUB"] = rm.vocs10; dr["MEDIUM"] = rm.vocm10; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                            if (rm.vocs10 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs10.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }


                    }
                    //-----------------------------------End Vocational------------

                    //-----------------------------------technical------------
                    if (rm.Tgroup == "TECHNICAL")
                    {
                        if (i == 1)
                        {
                            dr["SUB"] = rm.tecs1; dr["MEDIUM"] = rm.tecm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.tecs1 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs1.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 2)
                        {
                            if (rm.tecm2 != null)
                            {
                                dr["MEDIUM"] = rm.tecm2;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.tecs2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.tecs2 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs2.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 3)
                        {
                            dr["SUB"] = rm.tecs3; dr["MEDIUM"] = rm.tecm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.tecs3 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs3.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 4)
                        {
                            dr["SUB"] = rm.tecs4; dr["MEDIUM"] = rm.tecm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.tecs4 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs4.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 5)
                        {
                            dr["SUB"] = rm.tecs5; dr["MEDIUM"] = rm.tecm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.tecs5 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs5.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 6)
                        {
                            dr["SUB"] = rm.tecs6; dr["MEDIUM"] = rm.tecm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.tecs6 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs6.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 7)
                        {
                            dr["SUB"] = rm.tecs7; dr["MEDIUM"] = rm.tecm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.tecs7 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs7.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 8)
                        {
                            dr["SUB"] = rm.tecs8; dr["MEDIUM"] = rm.tecm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                            if (rm.tecs8 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs8.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }

                    }
                    //-----------------------------------End technical------------

                    //-----------------------------------Agriculture------------
                    if (rm.Tgroup == "AGRICULTURE")
                    {
                        if (i == 1)
                        {
                            dr["SUB"] = rm.agrs1; dr["MEDIUM"] = rm.agrm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.agrs1 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs1.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 2)
                        {
                            if (rm.agrm2 != null)
                            {
                                dr["MEDIUM"] = rm.agrm2;
                            }
                            else
                            {
                                dr["MEDIUM"] = "Medium";
                            }
                            dr["SUB"] = rm.agrs2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.agrs2 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs2.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 3)
                        {
                            dr["SUB"] = rm.agrs3; dr["MEDIUM"] = rm.agrm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.agrs3 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs3.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 4)
                        {
                            dr["SUB"] = rm.agrs4; dr["MEDIUM"] = rm.agrm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                            if (rm.agrs4 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs4.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 5)
                        {
                            dr["SUB"] = rm.agrs5; dr["MEDIUM"] = rm.agrm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.agrs5 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs5.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 6)
                        {
                            dr["SUB"] = rm.agrs6; dr["MEDIUM"] = rm.agrm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.agrs6 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs6.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 7)
                        {
                            dr["SUB"] = rm.agrs7; dr["MEDIUM"] = rm.agrm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            if (rm.agrs7 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs7.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }
                        else if (i == 8)
                        {
                            dr["SUB"] = rm.agrs8; dr["MEDIUM"] = rm.agrm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                            if (rm.agrs8 != null)
                            {
                                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs8.ToString());
                                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            }
                        }

                    }
                    //-----------------------------------End Agriculture------------

                    dtMatricSubject.Rows.Add(dr);
                    //if (rm.Tgroup == "HUMANITIES")
                    //{
                    //    if (i == 5)
                    //    {
                    //        dr = dtMatricSubject.NewRow();
                    //        dr["CLASS"] = 4;
                    //        //DataSet dsSub = new DataSet();
                    //        dr["SUBNM"] = "";
                    //        dr["SUBABBR"] = "";
                    //        dr["MEDIUM"] = "MEDIUM";
                    //        if (rm.NsqfsubS6 != "NO" && rm.NsqfsubS6 != null && rm.NsqfsubS6 != "")
                    //        {
                    //            dr["SUB"] = "205"; dr["SUB_SEQ"] = 12; dr["SUBCAT"] = "R";
                    //            if (dr["SUB"] != null)
                    //            {
                    //                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(dr["SUB"].ToString());
                    //                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                    //                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                    //            }
                    //        }
                    //        //// dtMatricSubject.Rows.Add(dr); HOT (85,205) subject droped by PSEB , So don't insert HOT (85,205) if NSQF Selected (M1,M2,T1,T2)
                    //    }
                    //}


                }

                dtMatricSubject.AcceptChanges();
                dtMatricSubject = dtMatricSubject.AsEnumerable().Where(r => r.ItemArray[1].ToString() != "" && r.ItemArray[1].ToString() != "0").CopyToDataTable();



                //RM.Tgroup == "HUMANITIES"
                string msg = "";
                bool status = objDB.SubjectNotAllowed(rm.Tgroup, dtMatricSubject, out msg);
                if (status == false)
                {
                    ViewData["result"] = 20;
                    ViewData["errorMsg"] = msg;
                    return View(rm);
                }


                // End Subject Master
                //IsNRICandidate
                if (rm.IsNRICandidate == true && (rm.DocProofNRICandidates != null || !string.IsNullOrEmpty(rm.ProofNRICandidates)))
                {
                    //  rm.IsNRICandidate = true;
                    rm.IsNRICandidate = false;
                    rm.ProofNRICandidates = "";
                    rm.DocProofNRICandidates = null;
                }
                else
                {
                    rm.IsNRICandidate = false;
                    rm.ProofNRICandidates = "";
                    rm.DocProofNRICandidates = null;
                }
                rm.IsImportedStudent = "0";
                //rm.OTID = 5;
                rm.Imptblname = "NewEntry";
                if (!string.IsNullOrEmpty(rm.DOB))
                {
                    rm.DOB = AbstractLayer.StaticDB.DateInFormat(rm.DOB) == true ? rm.DOB : "";
                }
                else { rm.DOB = ""; }

                //NsqfPattern
                if (string.IsNullOrEmpty(NSQFsubS6))
                {
                    //if (!string.IsNullOrEmpty(S9))
                    //{
                    //    // NSQFsubS6 = S9;
                    //}
                }
                if (string.IsNullOrEmpty(NSQFsubS6))
                {
                    rm.NSQFPattern = "";
                }
                else if (NSQFsubS6 == "NO")
                {
                    rm.NSQFPattern = string.IsNullOrEmpty(NsqfPattern) ? "2" : NsqfPattern;
                }
                else
                {
                    if (!string.IsNullOrEmpty(NSQFsubS6) && !string.IsNullOrEmpty(PreNSQF) && string.IsNullOrEmpty(NsqfPattern))
                    {
                        NsqfPattern = "2";
                    }
                    //if (string.IsNullOrEmpty(NsqfPattern))
                    //{
                    //    ViewData["result"] = "PATTERN";
                    //    return View(rm);
                    //}
                    //rm.NSQFPattern = NsqfPattern;
                }
                //NsqfPattern
                // Check NSQF Subject exists in Subject List after NSQF Current Class Selection 
                if (!string.IsNullOrEmpty(NSQFsubS6))
                {
                    if (NSQFsubS6.ToUpper() != "NO".ToUpper())
                    {
                        rm.NsqfsubS6 = NSQFsubS6;
                        var NSQFSubExists = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") == NSQFsubS6).Count() > 0;
                        if (!NSQFSubExists)
                        {
                            ViewData["resultUpdate"] = "NSQFSUBWANT";
                            return View(rm);
                        }

                    }
                }



                string result = objDB.Ins_T_Form_Data(rm, frm, formName, session, idno, schl, dtMatricSubject);
                string filepathtosave = "";
                if (result == "0" || result == null)
                {
                    //--------------Not saved
                    ViewData["result"] = 0;
                }
                else if (result == "-1")
                {
                    //-----alredy exist
                    ViewData["result"] = -1;
                }
                else if (result == "-3")
                {
                    //-----alredy exist
                    ViewData["result"] = -3;
                }
                else
                {
                    //----Data Inserted Successfully
                    ViewData["result"] = 1;

                    if (rm.file != null)
                    {
                        //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                        //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                        //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"));
                        //if (!Directory.Exists(FilepathExist))
                        //{
                        //    Directory.CreateDirectory(FilepathExist);
                        //}
                        //rm.file.SaveAs(path);
                        //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                        //ViewBag.ImageURL = filepathtosave;

                        string Orgfile = result + "P" + ".jpg";
                        using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                        {
                            using (var newMemoryStream = new MemoryStream())
                            {
                                var uploadRequest = new TransferUtilityUploadRequest
                                {
                                    InputStream = rm.file.InputStream,
                                    Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                    BucketName = BUCKET_NAME,
                                    CannedACL = S3CannedACL.PublicRead
                                };

                                var fileTransferUtility = new TransferUtility(client);
                                fileTransferUtility.Upload(uploadRequest);
                            }
                        }

                        string PhotoName = formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                        string type = "P";
                        string IsNew = "YES";
                        string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                    }
                    if (rm.std_Sign != null)
                    {
                        //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                        //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"));
                        //if (!Directory.Exists(FilepathExist))
                        //{
                        //    Directory.CreateDirectory(FilepathExist);
                        //}
                        //rm.std_Sign.SaveAs(path);
                        //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                        //ViewBag.ImageURL = filepathtosave;
                        string Orgfile = result + "S" + ".jpg";
                        using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                        {
                            using (var newMemoryStream = new MemoryStream())
                            {
                                var uploadRequest = new TransferUtilityUploadRequest
                                {
                                    InputStream = rm.std_Sign.InputStream,
                                    Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                    BucketName = BUCKET_NAME,
                                    CannedACL = S3CannedACL.PublicRead
                                };

                                var fileTransferUtility = new TransferUtility(client);
                                fileTransferUtility.Upload(uploadRequest);
                            }
                        }


                        string PhotoName = formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                        string type = "S";
                        string IsNew = "YES";
                        string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                    }

                    // Documents


                    //ViewBag.Message = "File has been uploaded successfully";
                    ModelState.Clear();
                    //--For Showing Message---------//
                    ViewData["result"] = 1;
                }
            }
            else
            {
                var errors = ModelState.Where(x => x.Value.Errors.Count > 0)
                    .Select(x => new { x.Key, x.Value.Errors }).ToArray();
            }
            return T1Form();
        }

        [SessionCheckFilter]
        public ActionResult T1Formgrid(RegistrationSearchModelList registrationSearchModel)
        {
            string schl = Session["SCHL"].ToString();
            int status = new AbstractLayer.RegistrationDB().CheckSchoolAssignForm(2, schl);
            if (status <= 0)
            {
                return RedirectToAction("Index", "Home");
            }
            else
            {
                DataSet result1 = new AbstractLayer.RegistrationDB().schooltypes(schl);
                if (result1.Tables[3].Rows.Count > 0)
                {
                    if (result1.Tables[3].Rows[0]["reclock11th"].ToString() == "0")
                    {
                        return RedirectToAction("Index", "Home");
                    }
                }
            }
            DataSet dsOut = new DataSet();
            registrationSearchModel.RegistrationSearchModel = AbstractLayer.RegistrationDB.GetStudentRecordsSearchPM("T1", schl, out dsOut);
            registrationSearchModel.StoreAllData = dsOut;
            return View(registrationSearchModel);
        }
        [SessionCheckFilter]
        public ActionResult T1FormModify(string id)
        {
            ViewBag.YesNoListText = new AbstractLayer.DBClass().GetYesNoText().ToList();
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            ViewBag.YesNoListCP = new AbstractLayer.DBClass().GetYesNo().ToList();
            ViewBag.StaffList = new AbstractLayer.RegistrationDB().GetStaffListBySCHL(0, Session["SCHL"].ToString(), 0);
            ViewBag.YesNoList = new AbstractLayer.DBClass().GetYesNo().Where(s => s.Value == "Y").ToList();
            List<SelectListItem> SubWEL = new List<SelectListItem>();
            SubWEL.Add(new SelectListItem { Text = "WELCOME LIFE", Value = "210" });
            ViewBag.SubWEL = new SelectList(SubWEL, "Value", "Text");

            ViewBag.SessionYearListT1 = objCommon.GetSessionYear().Where(s => Convert.ToInt32(s.Value) <= 2019).ToList();

            ViewBag.catg = objCommon.GetE2Category();
            ViewBag.vm5 = objCommon.GetGroupMedium();
            ViewBag.vm6 = objCommon.GetGroupMedium();
            ViewBag.vm7 = objCommon.GetGroupMedium();
            ViewBag.sm2 = objCommon.GetGroupMedium();
            ViewBag.sm3 = ViewBag.Commonmedium = objCommon.GetGroupMedium();
            ViewBag.sm4 = objCommon.GetGroupMedium();
            ViewBag.ccom2 = objCommon.GetGroupMedium();

            ViewBag.hm2 = objCommon.GetMediumAll();
            ViewBag.hm5 = objCommon.GetMediumAll();
            ViewBag.hm6 = objCommon.GetMediumAll();
            ViewBag.hm7 = objCommon.GetMediumAll();
            ViewBag.hm8 = objCommon.GetMediumAll();

            ViewBag.tm2 = objCommon.GetMediumAll();
            ViewBag.tm5 = objCommon.GetMediumAll();
            ViewBag.tm6 = objCommon.GetMediumAll();
            ViewBag.tm7 = objCommon.GetMediumAll();
            ViewBag.tm8 = objCommon.GetMediumAll();

            ViewBag.vm10 = objCommon.GetMediumAll();
            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();

            //ViewBag.MyMatricBoard = objCommon.GetMatricBoard().Where(s => Convert.ToString(s.Value).ToUpper() == "P.S.E.B BOARD".ToUpper()).ToList();

            List<SelectListItem> reslist = objCommon.GetMatricResult().Where(s => s.Value.ToUpper() == "PASS").ToList();
            ViewBag.MyMatricResult = reslist;

            ViewBag.MyWritter = objCommon.GetWritter();
            ViewBag.Mon = objCommon.GetMonthM1_T1_Modify();
            List<SelectListItem> yearlist = objCommon.GetSessionYear(); // passing Value to DBClass from model   
            yearlist.RemoveRange(3, 45);
            ViewBag.TSYearList = yearlist;
            ViewBag.SessionYearList = objCommon.GetSessionYear();


            RegistrationModels rm = new RegistrationModels();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());

                //int res = 0;
                //objDB.CheckDateE1E2T1T1(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }

            }

            //-----------------------------------------------------Nsqf -------------------------
            string ses = Session["Session"].ToString();
            string schlcode = Session["SCHL"].ToString();
            DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
            rm.NSQF = dsnsqf.Tables[0].Rows[0]["nsqf_flag"].ToString();
            if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
            {
                ViewData["NSQFSCHOOL"] = "1";
            }
            else
            {
                ViewData["NSQFSCHOOL"] = "0";
            }
            string nsqfsub = null;
            DataSet nsresult = objDB.SelectS12(nsqfsub); // passing Value to DBClass from model
            ViewBag.nsfq = nsresult.Tables[0];
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {
                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
            }
            ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
            ViewBag.nsqfcatg = new SelectList(nsfqList, "Value", "Text");

            //-----------------------------------------------------End Nsqf -------------------------

            #region 12th subject bind by stream

            DataSet dsCOMM = objDB.SubjectsTweleve_Commerce();
            if (dsCOMM == null || dsCOMM.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.ssub = dsCOMM.Tables[0];
                List<SelectListItem> COMMSub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in dsCOMM.Tables[0].Rows)
                {
                    COMMSub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                ViewBag.coms9List = new SelectList(COMMSub, "Value", "Text");


            }

            DataSet scis = objDB.SubjectsTweleve_SCI();
            if (scis == null || scis.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.ssub = scis.Tables[0];
                List<SelectListItem> scisub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.ssub.Rows)
                {
                    scisub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                ViewBag.sss8 = new SelectList(scisub, "Value", "Text");


            }
            DataSet hds = objDB.SubjectsTweleve_hum();
            if (hds == null || hds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.hsub = hds.Tables[0];
                List<SelectListItem> humsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.hsub.Rows)
                {
                    humsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.hs5 = new SelectList(humsub, "Value", "Text");
                ViewBag.hs6 = new SelectList(humsub, "Value", "Text");
                ViewBag.hs7 = new SelectList(humsub, "Value", "Text");
                ViewBag.hs8 = new SelectList(humsub, "Value", "Text");
                ViewBag.vs10 = new SelectList(humsub, "Value", "Text"); //--------humanity Subjects Equals To Vocational Aditional Subjects
            }
            DataSet tecds = objDB.SubjectsTweleve_tech();
            if (tecds == null || tecds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.tsub = tecds.Tables[0];
                List<SelectListItem> tecsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.tsub.Rows)
                {
                    tecsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.ts5 = new SelectList(tecsub, "Value", "Text");
                ViewBag.ts6 = new SelectList(tecsub, "Value", "Text");
                ViewBag.ts7 = new SelectList(tecsub, "Value", "Text");
                ViewBag.ts8 = new SelectList(tecsub, "Value", "Text");

            }

            DataSet agrds = objDB.SubjectsTweleve_agr();
            if (agrds == null || agrds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.agrsub = agrds.Tables[0];
                List<SelectListItem> agrsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.agrsub.Rows)
                {
                    agrsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                List<SelectListItem> agrAdditionAlsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in agrds.Tables[1].Rows)
                {
                    agrAdditionAlsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.as5 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value == "065").ToList();
                ViewBag.as6 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value != "065").ToList();
                ViewBag.as7 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value != "065").ToList();
                ViewBag.as8 = new SelectList(agrAdditionAlsub, "Value", "Text");

            }
            DataSet vocds = objDB.Voc_agr();
            if (vocds == null || vocds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.vocsub = vocds.Tables[0];
                List<SelectListItem> vsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.vocsub.Rows)
                {
                    vsub.Add(new SelectListItem { Text = @dr["group"].ToString(), Value = @dr["group"].ToString() });
                }
                ViewBag.VolgroupRN = vsub;
                ViewBag.selgroup = new SelectList(vsub, "Value", "Text");

            }
            DataSet vocsubjects = objDB.SubjectsTweleve_Voc();
            if (vocsubjects == null || vocsubjects.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.vsub = vocsubjects.Tables[0];
                List<SelectListItem> vocsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.vsub.Rows)
                {
                    vocsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.vs5 = ViewBag.vos5 = vocsub;
                ViewBag.vs6 = ViewBag.vos6 = vocsub;
                ViewBag.vs7 = ViewBag.vos7 = vocsub;

                List<SelectListItem> vocAdditionAlsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in vocsubjects.Tables[1].Rows)
                {
                    vocAdditionAlsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.vocAddSubList = new SelectList(vocAdditionAlsub, "Value", "Text");

            }

            DataSet vocTrade = objDB.SubjectsTweleve_Voc_All_Trade();
            if (vocTrade == null || vocTrade.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.Tsub = vocTrade.Tables[0];
                List<SelectListItem> vocTsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.Tsub.Rows)
                {
                    vocTsub.Add(new SelectListItem { Text = @dr["tname"].ToString(), Value = @dr["tcode"].ToString() });
                }
                ViewBag.trgroup = new SelectList(vocTsub, "Value", "Text");

            }

            #endregion 12th subject bind by stream

            ViewBag.MyBoard = objCommon.GetMatricBoard();
            ViewBag.Mon = objCommon.GetMonthM1_T1_Modify();
            ViewBag.SessionYearList = objCommon.GetSessionYear();
            //@ViewBag.DA = objCommon.GetDA();
            // @ViewBag.groupT = objCommon.getGroupT();

            List<SelectListItem> MyGroupList = objCommon.GroupName();
            DataTable dtAssignSubject = objCommon.GetAssignSubjectBySchool(Session["SCHL"].ToString());
            if (dtAssignSubject != null && dtAssignSubject.Rows.Count > 0)
            {
                ViewBag.MyGroup = objCommon.GetSubjectsBySchool(dtAssignSubject, MyGroupList);
            }
            ViewBag.MyGroup = MyGroupList;





            ViewBag.MyDist = objCommon.GetDistE();
            ViewBag.SectionList = objCommon.GetSection();
            ViewBag.Section = "0";
            string formname = "T1";
            if (id != null)
            {
                id = encrypt.QueryStringModule.Decrypt(id);

                DataSet ds = objDB.SearchStudentGetByData_Subject(id, formname);
                if (ds == null || ds.Tables[0].Rows.Count == 0)
                {
                    return RedirectToAction("T1Formgrid", "RegistrationPortal");
                }
                string cat = ds.Tables[0].Rows[0]["Category"].ToString();

                if (cat.ToUpper().Contains("11TH PASSED"))
                {
                    Int32 matricYear = Convert.ToInt32(ds.Tables[0].Rows[0]["Year"].ToString());
                    ViewBag.SessionYearList = objCommon.GetSessionYear().Where(s => Convert.ToInt32(s.Value) <= matricYear).ToList();

                }
                else
                {
                    Int32 matricYear = Convert.ToInt32(ds.Tables[0].Rows[0]["Year"].ToString());
                    ViewBag.SessionYearList = objCommon.GetSessionYear().Where(s => Convert.ToInt32(s.Value) < (matricYear - 1)).ToList();
                }




                if (ds.Tables[0].Rows.Count > 0)
                {
                    rm.old_std_Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                    rm.old_std_sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                    int IsPSEBRegNum = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPSEBRegNum"].ToString() == "" ? "0" : ds.Tables[0].Rows[0]["IsPSEBRegNum"].ToString());

                    if (IsPSEBRegNum == 1)
                    {
                        rm.IsRegNoExists = "Y";
                        rm.IsPSEBRegNum = true;
                        rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                    }
                    else
                    {
                        rm.IsRegNoExists = "N";
                        rm.IsPSEBRegNum = false;
                        rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                    }

                    rm.IsSmartPhone = ds.Tables[0].Rows[0]["IsSmartPhone"].ToString();
                    rm.NSQFPattern = ds.Tables[0].Rows[0]["NSQFPattern"].ToString();
                    rm.IsImportedStudent = ds.Tables[0].Rows[0]["IsImportedStudent"].ToString();

                    rm.IsUnlockForm = ds.Tables[0].Rows[0]["IsUnlockForm"].ToString();
                    // DataSet ds = objDB.SearchStudentGetByData(id);
                    rm.Std_id = Convert.ToInt32(ds.Tables[0].Rows[0]["Std_id"].ToString());
                    rm.SCHL = ds.Tables[0].Rows[0]["SCHL"].ToString();
                    //rm.IDNO = ds.Tables[0].Rows[0]["IDNO"].ToString();
                    rm.Category = ds.Tables[0].Rows[0]["Category"].ToString();
                    ViewBag.catg = objCommon.GetE2Category();

                    //rm.Board = ds.Tables[0].Rows[0]["Board"].ToString();
                    //ViewBag.MyBoard = objCommon.GetN2Board();
                    rm.Board = "P.S.E.B BOARD";
                    if (rm.MetricBoard == "" || rm.MetricBoard == null)
                    {
                        rm.MetricBoard = "P.S.E.B BOARD";
                    }

                    rm.Other_Board = ds.Tables[0].Rows[0]["Other_Board"].ToString();

                    rm.Board_Roll_Num = ds.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                    rm.Prev_School_Name = ds.Tables[0].Rows[0]["Prev_School_Name"].ToString();

                    rm.Month = ds.Tables[0].Rows[0]["Month"].ToString();
                    ViewBag.Mon = objCommon.GetMonthM1_T1_Modify();

                    rm.Year = ds.Tables[0].Rows[0]["Year"].ToString();
                    // AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                    //ViewBag.SessionYearList = objCommon.GetSessionYear();


                    //rm.MyGroup = ds.Tables[0].Rows[0]["Group_name"].ToString().Trim();
                    //ViewBag.MyGroup1 = objCommon.GroupName();

                    rm.Tgroup = ds.Tables[0].Rows[0]["Group_Name"].ToString().Trim();
                    // GetGroupListByGroup(List<SelectListItem> MyGroupList, string Group,string  Form)
                    ViewBag.MyGroup = objCommon.GetGroupListByGroup(ViewBag.MyGroup, rm.Tgroup, "T1");

                    // ViewBag.selgroup
                    if (rm.Tgroup.ToUpper().Trim() == "HUMANITIES")
                    {
                        List<SelectListItem> MyVolGroupList = new List<SelectListItem>();
                        MyVolGroupList = ViewBag.VolgroupRN;
                        MyVolGroupList = MyVolGroupList.Where(item => item.Text.ToUpper().Trim() == "HOME SCIENCE" || item.Value == "0").ToList();
                        ViewBag.selgroup = new SelectList(MyVolGroupList, "Value", "Text");
                    }

                    if (rm.Tgroup.ToUpper().Trim() == "SCIENCE")
                    {
                        List<SelectListItem> MyVolGroupList = new List<SelectListItem>();
                        MyVolGroupList = ViewBag.VolgroupRN;
                        MyVolGroupList = MyVolGroupList.Where(item => item.Text.ToUpper().Trim() == "ENGINEERING & TECHNOLOGY" || item.Value == "0").ToList();
                        ViewBag.selgroup = new SelectList(MyVolGroupList, "Value", "Text");
                    }


                    if (rm.Tgroup.ToUpper().Trim() == "COMMERCE")
                    {
                        List<SelectListItem> MyVolGroupList = new List<SelectListItem>();
                        MyVolGroupList = ViewBag.VolgroupRN;
                        MyVolGroupList = MyVolGroupList.Where(item => item.Text.ToUpper().Trim() == "BUSINESS AND COMMERCE" || item.Value == "0").ToList();
                        ViewBag.selgroup = new SelectList(MyVolGroupList, "Value", "Text");
                    }



                    //ViewBag.MyGroup = objCommon.GroupName();
                    //----------------Subject voc Group-----------
                    if (rm.Tgroup == "VOCATIONAL")
                    {
                        DataSet gp = objDB.selectGP(rm.Std_id);
                        if (gp.Tables.Count > 0)
                        {
                            if (gp.Tables[0].Rows.Count > 0)
                            {
                                rm.groupsel = gp.Tables[0].Rows[0]["Group"].ToString().Trim();
                                string gsel = gp.Tables[0].Rows[0]["Group"].ToString().Trim();
                                rm.grouptr = gp.Tables[0].Rows[0]["TCODE"].ToString().Trim();
                                DataSet vocTRgroup = objDB.Voc_Trgroup(gsel);
                                if (vocds == null || vocds.Tables[0].Rows.Count == 0)
                                { ViewBag.sub = ""; }
                                else
                                {
                                    ViewBag.vocTR = vocTRgroup.Tables[0];
                                    List<SelectListItem> vtrsub = new List<SelectListItem>();
                                    foreach (System.Data.DataRow dr in ViewBag.vocTR.Rows)
                                    {
                                        vtrsub.Add(new SelectListItem { Text = @dr["TNAME"].ToString(), Value = @dr["TCODE"].ToString() });
                                    }

                                    ViewBag.trgroup = new SelectList(vtrsub, "Value", "Text");

                                }
                            }
                        }
                    }
                    //-----------------End---------------

                    rm.AWRegisterNo = ds.Tables[0].Rows[0]["AWRegisterNo"].ToString();
                    rm.Admission_Num = ds.Tables[0].Rows[0]["Admission_Num"].ToString();
                    rm.requestID = ds.Tables[0].Rows[0]["requestID"].ToString();
                    if (rm.requestID != "" && rm.requestID != "0")
                    {
                        rm.IsLateAdm = true;
                        ViewBag.admdate = ds.Tables[0].Rows[0]["ApprovalUpto"].ToString(); ;
                    }
                    else
                    {
                        rm.IsLateAdm = false;
                    }
                    rm.Admission_Date = ds.Tables[0].Rows[0]["Admission_Date"].ToString();
                    rm.Class_Roll_Num_Section = ds.Tables[0].Rows[0]["Class_Roll_Num_Section"].ToString();
                    rm.Candi_Name = ds.Tables[0].Rows[0]["Candi_Name"].ToString();
                    rm.Candi_Name_P = ds.Tables[0].Rows[0]["Candi_Name_P"].ToString();
                    rm.Father_Name = ds.Tables[0].Rows[0]["Father_Name"].ToString();
                    rm.Father_Name_P = ds.Tables[0].Rows[0]["Father_Name_P"].ToString();
                    rm.Mother_Name = ds.Tables[0].Rows[0]["Mother_Name"].ToString();
                    rm.Mother_Name_P = ds.Tables[0].Rows[0]["Mother_Name_P"].ToString();

                    rm.Caste = ds.Tables[0].Rows[0]["Caste"].ToString();
                    //ViewBag.Caste = objCommon.GetCaste();
                    @ViewBag.MyCastList = objCommon.GetCaste();

                    rm.Gender = ds.Tables[0].Rows[0]["Gender"].ToString();


                    //rm.Differently_Abled = ds.Tables[0].Rows[0]["Differently_Abled"].ToString();
                    rm.DA = rm.Differently_Abled = ds.Tables[0].Rows[0]["Differently_Abled"].ToString();
                    ViewBag.DAb = objCommon.GetDA();

                    rm.scribeWriter = ds.Tables[0].Rows[0]["wantwriter"].ToString();

                    rm.Religion = ds.Tables[0].Rows[0]["Religion"].ToString();
                    ViewBag.RE = objCommon.GetReligion();

                    rm.DOB = ds.Tables[0].Rows[0]["DOB"].ToString();
                    rm.Mobile = ds.Tables[0].Rows[0]["Mobile"].ToString();
                    rm.Father_MobNo = ds.Tables[0].Rows[0]["F_MobNo"].ToString();
                    rm.Father_Occup = ds.Tables[0].Rows[0]["F_Occup"].ToString();
                    rm.Mother_MobNo = ds.Tables[0].Rows[0]["M_MobNo"].ToString();
                    rm.Mother_Occup = ds.Tables[0].Rows[0]["M_Occup"].ToString();
                    rm.Belongs_BPL = ds.Tables[0].Rows[0]["Belongs_BPL"].ToString();
                    rm.E_punjab_Std_id = ds.Tables[0].Rows[0]["E_punjab_Std_id"].ToString();
                    rm.Aadhar_num = ds.Tables[0].Rows[0]["Aadhar_num"].ToString();
                    rm.Address = ds.Tables[0].Rows[0]["Address"].ToString();
                    rm.LandMark = ds.Tables[0].Rows[0]["LandMark"].ToString();
                    rm.Block = ds.Tables[0].Rows[0]["Block"].ToString();
                    string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();



                    rm.MyDistrict = ds.Tables[0].Rows[0]["District"].ToString();
                    //rm.District = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString());
                    ViewBag.MyDist = objCommon.GetDistE();

                    rm.Tehsil = Convert.ToInt32(ds.Tables[0].Rows[0]["Tehsil"].ToString() == "" ? "0" : ds.Tables[0].Rows[0]["Tehsil"].ToString());
                    int dist = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString() == "" ? "0" : ds.Tables[0].Rows[0]["District"].ToString());

                    DataSet result1 = objDB.SelectAllTehsil(dist);
                    List<SelectListItem> TehList = new List<SelectListItem>();
                    if (result1.Tables[0].Rows.Count > 0)
                    {
                        ViewBag.MyTeh = result1.Tables[0];

                        foreach (System.Data.DataRow dr in ViewBag.MyTeh.Rows)
                        {

                            TehList.Add(new SelectListItem { Text = @dr["TEHSIL"].ToString(), Value = @dr["TCODE"].ToString() });
                        }
                        ViewBag.MyTeh = TehList;
                    }
                    else
                    {

                        TehList.Add(new SelectListItem { Text = "--Select--", Value = "0" });
                    }
                    ViewBag.MyTeh = TehList;

                    rm.PinCode = ds.Tables[0].Rows[0]["PinCode"].ToString();
                    int IsPrevSchoolSelf = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPrevSchoolSelf"].ToString());
                    if (IsPrevSchoolSelf == 1)
                    {
                        rm.IsPrevSchoolSelf = true;
                    }
                    else
                    {
                        rm.IsPrevSchoolSelf = false;
                    }

                    rm.CandiMedium = ds.Tables[0].Rows[0]["CandStudyMedium"].ToString();
                    rm.MetricBoard = ds.Tables[0].Rows[0]["MatricBoard"].ToString();
                    rm.MatricResult = ds.Tables[0].Rows[0]["MatricResult"].ToString();
                    rm.DP = ds.Tables[0].Rows[0]["DisabilityPercent"].ToString();
                    rm.PreNSQF = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();

                    ViewBag.PreNSQF = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();
                    ViewBag.NsqfsubS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();

                    rm.PreNSQFsci = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();
                    rm.NsqfsubS6sci = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                    rm.PreNSQFcomm = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();
                    rm.NsqfsubS6comm = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                    rm.PreNSQFvoc = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();
                    rm.NsqfsubS6voc = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                    //-----------------------------For NSQF SUBJECTS----------------
                    string sid = id;
                    DataSet isCHkNSQF = objDB.CHkNSQFStudents(sid);
                    rm.NSQF = isCHkNSQF.Tables[0].Rows[0]["nsqf_flag"].ToString();
                    if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
                    {
                        ViewData["NSQFSTUDENT"] = "1";
                        if (rm.NsqfsubS6 == null)
                        {
                            rm.NsqfsubS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                        }
                        DataSet nsTextresult = objDB.GetNSQFVIEWSUBJECT11TH(rm.NsqfsubS6, rm.PreNSQF);
                        List<SelectListItem> nssub6 = new List<SelectListItem>();
                        if (nsTextresult.Tables[0].Rows.Count > 0)
                        {
                            nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            nssub6.Add(new SelectListItem { Text = nsTextresult.Tables[0].Rows[0]["Name_ENG"].ToString(), Value = rm.NsqfsubS6 });
                            ViewBag.nsqfcatg = nssub6;
                        }
                        else
                        {

                            nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            ViewBag.nsqfcatg = nssub6;
                        }

                    }
                    else
                    {
                        List<SelectListItem> nssub6 = new List<SelectListItem>();
                        nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                        ViewBag.nsqfcatg = nssub6;
                    }


                    //--------------------------------End NSQF SUBJECTS-------------


                    if (ds.Tables[1].Rows.Count > 0)
                    {
                        for (int i = 0; i < ds.Tables[1].Rows.Count; i++)
                        {
                            if (ds.Tables[0].Rows[0]["Group_Name"].ToString() == "SCIENCE")
                            {
                                if (i == 0)
                                {
                                    rm.coms1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                    rm.comm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.coms2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                    //rm.comm2 = ds.Tables[1].Rows[1]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.coms2);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.comm2 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[1]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 2)
                                {
                                    rm.coms3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                    //rm.comm3 = ds.Tables[1].Rows[2]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.coms3);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.comm3 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[2]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;

                                }
                                else if (i == 3)
                                {

                                    rm.coms4sci = ds.Tables[1].Rows[3]["SUB"].ToString();
                                    ViewBag.comm4NM = ds.Tables[1].Rows[3]["SUBNM"].ToString();

                                    //rm.comm4 = ds.Tables[1].Rows[3]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.coms4sci);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.comm4 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[3]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                //else if (i == 4)
                                //{
                                //    rm.ssWEL = ds.Tables[1].Rows[i]["SUB"].ToString();
                                //    rm.smWEL = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                //}

                                else if (i == 4)
                                {
                                    rm.ss5 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.sm5 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 5)
                                {
                                    rm.ss6 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.sm6 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 6)
                                {
                                    rm.ss7 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.sm7 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 7)
                                {
                                    rm.ss8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.sm8 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }

                                //else if (i == 8)
                                //{
                                //    rm.s9 = ds.Tables[1].Rows[8]["SUB"].ToString();
                                //    DataSet SelectedMediumList = objDB.SelectS1(rm.s9);
                                //    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                //    rm.m9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[8]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                //    ViewBag.SubS9m = iMEdiumList;
                                //}

                            }
                            if (ds.Tables[0].Rows[0]["Group_Name"].ToString() == "COMMERCE")
                            {
                                if (i == 0)
                                {
                                    rm.coms1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                    rm.comcm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.comcs2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                    //rm.comcm2 = ds.Tables[1].Rows[1]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.comcs2);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.comcm2 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[1]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 2)
                                {
                                    rm.coms3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                    rm.comcm3 = ds.Tables[1].Rows[2]["MEDIUM"].ToString();
                                }
                                else if (i == 3)
                                {
                                    rm.coms4comm = ds.Tables[1].Rows[3]["SUB"].ToString();
                                    ViewBag.comm4NM = ds.Tables[1].Rows[3]["SUBNM"].ToString();
                                    rm.comcm4 = ds.Tables[1].Rows[3]["MEDIUM"].ToString();
                                }
                                //else if (i == 4)
                                //{
                                //    rm.ssWEL = ds.Tables[1].Rows[i]["SUB"].ToString();
                                //    rm.smWEL = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                //}
                                else if (i == 4)
                                {
                                    rm.coms5 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.comm5 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 5)
                                {
                                    rm.coms6 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.comm6 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                //else if (i == 7)
                                //{
                                //    rm.coms7 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                //    rm.comm7 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                //}
                                else if (i == 6)
                                {
                                    rm.coms8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.comm8 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 7)
                                {
                                    rm.coms9 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.comm9 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                //else if (i == 8)
                                //{
                                //    rm.s9 = ds.Tables[1].Rows[8]["SUB"].ToString();
                                //    DataSet SelectedMediumList = objDB.SelectS1(rm.s9);
                                //    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                //    rm.m9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[8]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                //    ViewBag.SubS9m = iMEdiumList;
                                //}



                            }
                            if (ds.Tables[0].Rows[0]["Group_Name"].ToString() == "HUMANITIES")
                            {
                                if (i == 0)
                                {
                                    rm.hums1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                    rm.humm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.hums2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                    //rm.humm2 = ds.Tables[1].Rows[1]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.hums2);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.humm2 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[1]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 2)
                                {
                                    rm.hums3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                    rm.humm3 = ds.Tables[1].Rows[2]["MEDIUM"].ToString();
                                }
                                else if (i == 3)
                                {
                                    rm.hums4 = ds.Tables[1].Rows[3]["SUB"].ToString();
                                    rm.humm4 = ds.Tables[1].Rows[3]["MEDIUM"].ToString();
                                }
                                //else if (i == 4)
                                //{
                                //    rm.ssWEL = ds.Tables[1].Rows[i]["SUB"].ToString();
                                //    rm.smWEL = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                //}
                                else if (i == 4)
                                {
                                    rm.hums5 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.hums5);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.humm5 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 5)
                                {
                                    rm.hums6 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    // rm.humm6 = ds.Tables[1].Rows[5]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.hums6);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.humm6 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;

                                }
                                else if (i == 6)
                                {
                                    rm.hums7 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.humm7 = ds.Tables[1].Rows[6]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.hums7);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.humm7 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 7)
                                {
                                    rm.hums8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.humm8 = ds.Tables[1].Rows[7]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.hums8);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.humm8 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }


                            }
                            if (ds.Tables[0].Rows[0]["Group_Name"].ToString() == "TECHNICAL")
                            {
                                if (i == 0)
                                {
                                    rm.tecs1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                    rm.tecm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.tecs2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                    //rm.tecm2 = ds.Tables[1].Rows[1]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.tecs2);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.tecm2 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[1]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 2)
                                {
                                    rm.tecs3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                    rm.tecm3 = ds.Tables[1].Rows[2]["MEDIUM"].ToString();
                                }
                                else if (i == 3)
                                {
                                    rm.tecs4 = ds.Tables[1].Rows[3]["SUB"].ToString();
                                    rm.tecm4 = ds.Tables[1].Rows[3]["MEDIUM"].ToString();
                                }
                                //else if (i == 4)
                                //{
                                //    rm.ssWEL = ds.Tables[1].Rows[i]["SUB"].ToString();
                                //    rm.smWEL = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                //}
                                else if (i == 4)
                                {
                                    rm.tecs5 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.tecm5 = ds.Tables[1].Rows[4]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.tecs5);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.tecm5 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 5)
                                {
                                    rm.tecs6 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.tecm6 = ds.Tables[1].Rows[5]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.tecs6);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.tecm6 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 6)
                                {
                                    rm.tecs7 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.tecm7 = ds.Tables[1].Rows[6]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.tecs7);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.tecm7 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 7)
                                {
                                    rm.tecs8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.tecm8 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.tecs8);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.tecm8 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }


                            }
                            if (ds.Tables[0].Rows[0]["Group_Name"].ToString() == "AGRICULTURE")
                            {
                                if (i == 0)
                                {
                                    rm.agrs1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                    rm.agrm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.agrs2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                    //rm.agrm2 = ds.Tables[1].Rows[1]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.agrs2);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.agrm2 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[1]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 2)
                                {
                                    rm.agrs3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                    rm.agrm3 = ds.Tables[1].Rows[2]["MEDIUM"].ToString();
                                }
                                else if (i == 3)
                                {
                                    rm.agrs4 = ds.Tables[1].Rows[3]["SUB"].ToString();
                                    rm.agrm4 = ds.Tables[1].Rows[3]["MEDIUM"].ToString();
                                }
                                //else if (i == 4)
                                //{
                                //    rm.ssWEL = ds.Tables[1].Rows[i]["SUB"].ToString();
                                //    rm.smWEL = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                //}
                                else if (i == 4)
                                {
                                    rm.agrs5 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.agrm5 = ds.Tables[1].Rows[4]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.agrs5);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.agrm5 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 5)
                                {
                                    rm.agrs6 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.agrm6 = ds.Tables[1].Rows[5]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.agrs6);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.agrm6 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 6)
                                {
                                    rm.agrs7 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.agrm7 = ds.Tables[1].Rows[6]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.agrs7);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.agrm7 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 7)
                                {
                                    rm.agrs8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.agrm8 = ds.Tables[1].Rows[7]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.agrs8);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.agrm8 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }

                                //else if (i == 8)
                                //{
                                //    rm.s9 = ds.Tables[1].Rows[8]["SUB"].ToString();
                                //    DataSet SelectedMediumList = objDB.SelectS1(rm.s9);
                                //    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                //    rm.m9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[8]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                //    ViewBag.SubS9m = iMEdiumList;
                                //}

                            }
                            if (ds.Tables[0].Rows[0]["Group_Name"].ToString() == "VOCATIONAL")
                            {
                                if (i == 0)
                                {
                                    rm.vocs1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                    rm.vocm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.vocs2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                    rm.vocm2 = ds.Tables[1].Rows[1]["MEDIUM"].ToString();
                                }
                                else if (i == 2)
                                {
                                    rm.vocs3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                    rm.vocm3 = ds.Tables[1].Rows[2]["MEDIUM"].ToString();
                                }
                                else if (i == 3)
                                {
                                    rm.vocs4 = ds.Tables[1].Rows[3]["SUB"].ToString();
                                    ViewBag.vocs4 = ds.Tables[1].Rows[3]["SUBNM"].ToString();
                                    rm.vocm4 = ds.Tables[1].Rows[3]["MEDIUM"].ToString();
                                }
                                //else if (i == 4)
                                //{
                                //    rm.ssWEL = ds.Tables[1].Rows[i]["SUB"].ToString();
                                //    rm.smWEL = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                //}
                                else if (i == 4)
                                {
                                    rm.vocs5 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.vocm5 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                    List<SelectListItem> vos5 = (List<SelectListItem>)ViewBag.vos5;
                                    var VS1 = vos5.ToList().Where(s => s.Value == rm.vocs5).Select(s => s);
                                    ViewBag.vos5 = VS1.ToList();
                                }
                                else if (i == 5)
                                {
                                    rm.vocs6 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.vocm6 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();

                                    List<SelectListItem> vos6 = (List<SelectListItem>)ViewBag.vos6;
                                    var VS2 = vos6.ToList().Where(s => s.Value == rm.vocs6).Select(s => s);
                                    ViewBag.vos6 = VS2.ToList();
                                }
                                else if (i == 6)
                                {
                                    rm.vocs7 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.vocm7 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();

                                    List<SelectListItem> vos7 = (List<SelectListItem>)ViewBag.vos7;
                                    var VS3 = vos7.ToList().Where(s => s.Value == rm.vocs7).Select(s => s);
                                    ViewBag.vos7 = VS3.ToList();
                                }
                                else if (i == 7)
                                {
                                    rm.vocs8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.vocm8 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 8)
                                {
                                    rm.vocs9 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.vocm9 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 9)
                                {
                                    rm.vocs10 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.vocm10 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                //else if (i == 8)
                                //{
                                //    rm.s9 = ds.Tables[1].Rows[8]["SUB"].ToString();
                                //    DataSet SelectedMediumList = objDB.SelectS1(rm.s9);
                                //    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                //    rm.m9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[8]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                //    ViewBag.SubS9m = iMEdiumList;
                                //}

                            }
                        }
                    }
                    int IsPro = Convert.ToInt32(ds.Tables[0].Rows[0]["Provisional"].ToString());
                    if (IsPro == 1)
                    {
                        rm.Provisional = true;
                    }
                    else
                    {
                        rm.Provisional = false;
                    }
                    rm.MetricYear = ds.Tables[0].Rows[0]["MetricYear"].ToString();
                    rm.MetricMonth = ds.Tables[0].Rows[0]["MetricMonth"].ToString();
                    rm.Metric_Roll_Num = ds.Tables[0].Rows[0]["MetricRollNum"].ToString();
                    rm.MetricBoard = ds.Tables[0].Rows[0]["MatricBoard"].ToString();
                    //--------------------------End Subject Details--------------
                    // rm.fname= ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    // @ViewBag.ImageURL = "../../StdImages/Upload/" + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    //rm.PhotoString= "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["std_Photo"].ToString();


                    #region Photo and Sign
                    string filePath = "";
                    string filePathSign = "";
                    string Upload = System.Configuration.ConfigurationManager.AppSettings["Upload"];
                    // string UploadView = System.Configuration.ConfigurationManager.AppSettings["UploadView"];

                    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["std_Photo"].ToString() != "")
                    {
                        //  not imported
                        rm.checkCategory = "";
                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    }
                    else
                    {
                        //updated by anil chnage condtion year wise to bucket path
                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                        //string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                        //if (oldyear.ToString() == "2022")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                        //        {

                        //            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                        //            filePath = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                        //            // filePath =  UploadView.ToString() +  "\upload2022\ + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        //    }
                        //}
                        //else if (oldyear.ToString() == "2021")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                        //        {

                        //            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                        //            filePath = @"C:\ClusterStorage\Volume1\upload\upload2020\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2020/", "");
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        //    }
                        //}
                        //else if (oldyear.ToString() == "2020")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                        //        {

                        //            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                        //            filePath = @"C:\ClusterStorage\Volume1\upload\upload2019\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2019", "");

                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        //    }
                        //}
                        //else
                        //{
                        //    @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        //}
                    }
                    //---------------------------------------------------------For Sign------------------------------------------

                    if (ds.Tables[0].Rows[0]["std_sign"].ToString() != null && ds.Tables[0].Rows[0]["std_sign"].ToString() != "")
                    {
                        //  not imported
                        rm.checkCategory = "";
                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }
                    else
                    {
                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                        //string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                        //if (oldyear.ToString() == "2022")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                        //        {
                        //            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                        //            filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                        //    }
                        //}
                        //else if (oldyear.ToString() == "2021")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                        //        {

                        //            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                        //            filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2020\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2020/", "");
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                        //    }
                        //}
                        //else if (oldyear.ToString() == "2020")
                        //{
                        //    if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                        //    {
                        //        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                        //        {
                        //            @ViewBag.sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                        //            filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2019\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2019/", "");
                        //        }
                        //    }
                        //    else
                        //    {
                        //        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                        //    }
                        //}

                        //else
                        //{
                        //    @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                        //}
                    }

                    #endregion


                    #region check photo sign exists

                    if (!string.IsNullOrEmpty(rm.old_std_Photo))
                    {
                        string CandPhotoTempPath = rm.old_std_Photo;
                        if (!string.IsNullOrEmpty(CandPhotoTempPath))
                        {
                            CandPhotoTempPath = CandPhotoTempPath.Replace("https://registration2022.pseb.ac.in/upload/", "");
                            CandPhotoTempPath = CandPhotoTempPath.Replace(ConfigurationManager.AppSettings["AWSURL"], "");
                        }
                        string PhotoExist = CandPhotoTempPath;// Path.Combine(Server.MapPath("~/Upload/" + ));
                        if (!System.IO.File.Exists(PhotoExist))
                        {
                            //Photo Not Exist
                            rm.PhotoExist = "";
                        }
                        else { rm.PhotoExist = PhotoExist; }
                    }


                    if (!string.IsNullOrEmpty(rm.old_std_sign))
                    {
                        string CandSignTempPath = rm.old_std_sign;
                        if (!string.IsNullOrEmpty(CandSignTempPath))
                        {
                            CandSignTempPath = CandSignTempPath.Replace("https://registration2022.pseb.ac.in/upload/", "");
                            CandSignTempPath = CandSignTempPath.Replace(ConfigurationManager.AppSettings["AWSURL"], "");
                        }
                        string SignExist = CandSignTempPath;//Path.Combine(Server.MapPath("~/Upload/" + CandSignTempPath));
                        if (!System.IO.File.Exists(SignExist))
                        {
                            //Photo Not Exist
                            rm.SignExist = "";
                        }
                        else { rm.SignExist = SignExist; }
                    }


                    #endregion

                    //  rm.std_Sign = "";
                    ViewBag.section = rm.Section = Convert.ToChar(ds.Tables[0].Rows[0]["Section"].ToString() == "" ? "0" : ds.Tables[0].Rows[0]["Section"].ToString());
                    ViewBag.SectionList = objCommon.GetSection();


                    if (rm.IsImportedStudent != "1")
                    {
                        //ViewBag.MyMatricBoard = objCommon.GetMatricBoard().Where(s => Convert.ToString(s.Value).ToUpper() == "P.S.E.B BOARD".ToUpper()).ToList();
                        ViewBag.MyBoard = objCommon.GetMatricBoard().Where(s => Convert.ToString(s.Value).ToUpper() == "P.S.E.B BOARD".ToUpper()).ToList();
                    }
                }
                else
                {
                    return RedirectToAction("T1Formgrid", "RegistrationPortal");
                }

            }


            return View(rm);
        }
        //--------------------------Modify------------------

        [SessionCheckFilter]
        [HttpPost]
        public ActionResult T1FormModify(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern, string subS6)
        {
            try
            {


                ViewBag.YesNoListText = new AbstractLayer.DBClass().GetYesNoText().ToList();
                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                ViewBag.YesNoListCP = new AbstractLayer.DBClass().GetYesNo().ToList();
                ViewBag.StaffList = new AbstractLayer.RegistrationDB().GetStaffListBySCHL(0, Session["SCHL"].ToString(), 0);
                ViewBag.SessionYearListT1 = objCommon.GetSessionYear().Where(s => Convert.ToInt32(s.Value) <= 2019).ToList();

                ViewBag.YesNoList = new AbstractLayer.DBClass().GetYesNo().Where(s => s.Value == "Y").ToList();
                List<SelectListItem> SubWEL = new List<SelectListItem>();
                SubWEL.Add(new SelectListItem { Text = "WELCOME LIFE", Value = "210" });
                ViewBag.SubWEL = new SelectList(SubWEL, "Value", "Text");


                ViewBag.catg = objCommon.GetE2Category();
                string schlDist = null;
                ViewBag.SessionYearList = objCommon.GetSessionYear();

                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                DataSet result1 = objDB.SelectDist(); // passing Value to DBClass from model
                ViewBag.MyDist = result1.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
                List<SelectListItem> items = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
                {
                    items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
                }
                ViewBag.MyDist = items;
                ViewBag.MyTeh = objCommon.GetAllTehsil();
                ViewBag.MyBoard = objCommon.GetMatricBoard();
                ViewBag.SectionList = objCommon.GetSection();
                ViewBag.MyGroup = objCommon.GroupName();
                ViewBag.MyGroup = objCommon.GetGroupListByGroup(ViewBag.MyGroup, rm.Tgroup, "T1");
                ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
                List<SelectListItem> reslist = objCommon.GetMatricResult().Where(s => s.Value.ToUpper() == "PASS").ToList();
                ////reslist.RemoveRange(2, 12);
                ViewBag.MyMatricResult = reslist;

                ViewBag.MyWritter = objCommon.GetWritter();
                //int res = 0;
                //objDB.CheckDateE1E2T1T1(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.


                //-----------------------------------------------------Nsqf -------------------------
                string ses = Session["Session"].ToString();
                string schlcode = Session["SCHL"].ToString();
                DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                {
                    ViewData["NSQFSCHOOL"] = "1";
                }
                else
                {
                    ViewData["NSQFSCHOOL"] = "0";
                }
                string nsqfsub = null;
                DataSet nsresult = objDB.SelectS12(nsqfsub); // passing Value to DBClass from model
                ViewBag.nsfq = nsresult.Tables[0];
                List<SelectListItem> nsfqList = new List<SelectListItem>();
                //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                {
                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
                }
                ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
                ViewBag.nsqfcatg = new SelectList(nsfqList, "Value", "Text");

                //-----------------------------------------------------End Nsqf -------------------------
                DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
                if (schlDistds.Tables[0].Rows.Count > 0)
                {
                    schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
                }

                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
                @ViewBag.MyCastList = objCommon.GetCaste();
                @ViewBag.DAb = objCommon.GetDA();
                List<SelectListItem> yearlist = objCommon.GetSessionYear(); // passing Value to DBClass from model   
                yearlist.RemoveRange(3, 45);
                ViewBag.TSYearList = yearlist;
                ViewBag.SessionYearList = objCommon.GetSessionYear();

                string session = null;
                string idno = null;
                string schl = null;
                if (Session["Session"] != null)
                {
                    session = Session["Session"].ToString();
                    idno = Session["IDNO"].ToString();
                    schl = Session["SCHL"].ToString();
                }
                else
                {
                    return RedirectToAction("Index", "Login");
                }
                //--------------------Start
                ViewBag.vm5 = objCommon.GetGroupMedium();
                ViewBag.vm6 = objCommon.GetGroupMedium();
                ViewBag.vm7 = objCommon.GetGroupMedium();
                ViewBag.sm2 = objCommon.GetGroupMedium();
                ViewBag.sm3 = objCommon.GetGroupMedium();
                ViewBag.sm4 = objCommon.GetGroupMedium();
                ViewBag.Commonmedium = objCommon.GetGroupMedium();
                ViewBag.ccom2 = objCommon.GetGroupMedium();

                ViewBag.hm2 = objCommon.GetMediumAll();
                ViewBag.hm5 = objCommon.GetMediumAll();
                ViewBag.hm6 = objCommon.GetMediumAll();
                ViewBag.hm7 = objCommon.GetMediumAll();
                ViewBag.hm8 = objCommon.GetMediumAll();

                ViewBag.tm2 = objCommon.GetMediumAll();
                ViewBag.tm5 = objCommon.GetMediumAll();
                ViewBag.tm6 = objCommon.GetMediumAll();
                ViewBag.tm7 = objCommon.GetMediumAll();
                ViewBag.tm8 = objCommon.GetMediumAll();

                ViewBag.vm10 = objCommon.GetMediumAll();

                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());
                    if (status > 0)
                    {
                        if (status == 0)
                        { return RedirectToAction("Index", "Home"); }
                    }
                    else
                    {
                        return RedirectToAction("Index", "Home");
                    }

                }


                DataSet dsCOMM = objDB.SubjectsTweleve_Commerce();
                if (dsCOMM == null || dsCOMM.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.ssub = dsCOMM.Tables[0];
                    List<SelectListItem> COMMSub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in dsCOMM.Tables[0].Rows)
                    {
                        COMMSub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }

                    ViewBag.coms9List = new SelectList(COMMSub, "Value", "Text");


                }

                DataSet scis = objDB.SubjectsTweleve_SCI();
                if (scis == null || scis.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.ssub = scis.Tables[0];
                    List<SelectListItem> scisub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.ssub.Rows)
                    {
                        scisub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }

                    ViewBag.sss8 = new SelectList(scisub, "Value", "Text");


                }
                DataSet hds = objDB.SubjectsTweleve_hum();
                if (hds == null || hds.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.hsub = hds.Tables[0];
                    List<SelectListItem> humsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.hsub.Rows)
                    {
                        humsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    ViewBag.hs5 = new SelectList(humsub, "Value", "Text");
                    ViewBag.hs6 = new SelectList(humsub, "Value", "Text");
                    ViewBag.hs7 = new SelectList(humsub, "Value", "Text");
                    ViewBag.hs8 = new SelectList(humsub, "Value", "Text");
                    ViewBag.vs10 = new SelectList(humsub, "Value", "Text"); //--------humanity Subjects Equals To Vocational Aditional Subjects
                }
                DataSet tecds = objDB.SubjectsTweleve_tech();
                if (tecds == null || tecds.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.tsub = tecds.Tables[0];
                    List<SelectListItem> tecsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.tsub.Rows)
                    {
                        tecsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    ViewBag.ts5 = new SelectList(tecsub, "Value", "Text");
                    ViewBag.ts6 = new SelectList(tecsub, "Value", "Text");
                    ViewBag.ts7 = new SelectList(tecsub, "Value", "Text");
                    ViewBag.ts8 = new SelectList(tecsub, "Value", "Text");

                }
                DataSet agrds = objDB.SubjectsTweleve_agr();
                if (agrds == null || agrds.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.agrsub = agrds.Tables[0];
                    List<SelectListItem> agrsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.agrsub.Rows)
                    {
                        agrsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    List<SelectListItem> agrAdditionAlsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in agrds.Tables[1].Rows)
                    {
                        agrAdditionAlsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    ViewBag.as5 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value == "065").ToList();
                    ViewBag.as6 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value != "065").ToList();
                    ViewBag.as7 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value != "065").ToList();
                    ViewBag.as8 = new SelectList(agrAdditionAlsub, "Value", "Text");

                }


                DataSet vocds = objDB.Voc_agr();
                if (vocds == null || vocds.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.vocsub = vocds.Tables[0];
                    List<SelectListItem> vsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.vocsub.Rows)
                    {
                        vsub.Add(new SelectListItem { Text = @dr["group"].ToString(), Value = @dr["group"].ToString() });
                    }

                    ViewBag.selgroup = new SelectList(vsub, "Value", "Text");

                }
                DataSet vocTrade = objDB.SubjectsTweleve_Voc_All_Trade();
                if (vocTrade == null || vocTrade.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.Tsub = vocTrade.Tables[0];
                    List<SelectListItem> vocTsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.Tsub.Rows)
                    {
                        vocTsub.Add(new SelectListItem { Text = @dr["tname"].ToString(), Value = @dr["tcode"].ToString() });
                    }
                    ViewBag.trgroup = new SelectList(vocTsub, "Value", "Text");

                }
                DataSet vocsubjects = objDB.SubjectsTweleve_Voc();
                if (vocsubjects == null || vocsubjects.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.vsub = vocsubjects.Tables[0];
                    List<SelectListItem> vocsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.vsub.Rows)
                    {
                        vocsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    ViewBag.vs5 = ViewBag.vos5 = vocsub;
                    ViewBag.vs6 = ViewBag.vos6 = vocsub;
                    ViewBag.vs7 = ViewBag.vos7 = vocsub;

                    List<SelectListItem> vocAdditionAlsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in vocsubjects.Tables[1].Rows)
                    {
                        vocAdditionAlsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    ViewBag.vocAddSubList = new SelectList(vocAdditionAlsub, "Value", "Text");

                }


                ViewBag.Mon = objCommon.GetMonthM1_T1_Modify();
                ViewBag.SessionYearList = objCommon.GetSessionYear();

                List<SelectListItem> MyGroupList = objCommon.GroupName();
                DataTable dtAssignSubject = objCommon.GetAssignSubjectBySchool(Session["SCHL"].ToString());
                if (dtAssignSubject != null && dtAssignSubject.Rows.Count > 0)
                {
                    ViewBag.MyGroup = objCommon.GetSubjectsBySchool(dtAssignSubject, MyGroupList);
                }
                ViewBag.MyGroup = MyGroupList;

                ViewBag.MyDist = objCommon.GetDistE();
                ViewBag.SectionList = objCommon.GetSection();
                ViewBag.Section = "0";

                //-------------------End----
                //Check server side validation using data annotation
                if (ModelState.IsValid)
                {
                    // AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                    string id = frm["Std_id"].ToString();
                    string formname = "T1";
                    DataSet ds = objDB.SearchStudentGetByData_Subject(id, formname);
                    string distOld = "";
                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        //DataSet ds = objDB.SearchStudentGetByData(id);
                        distOld = ds.Tables[0].Rows[0]["District"].ToString();
                        rm.MyDistrict = distOld;
                    }
                    else
                    {
                        distOld = rm.MyDistrict;
                    }
                    //string stdPic = null;
                    string formName = "T1";
                    //if (frm["file"].ToString() != "")
                    if (rm.file != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdPic = Path.GetFileName(rm.file.FileName);

                    }
                    else
                    {

                        stdPic = ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    }
                    if (rm.std_Sign != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);

                    }
                    else
                    {

                        stdSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }
                    //var stdPic = Path.GetFileName(rm.file.FileName);
                    //var stdSign = Path.GetFileName(rm.std_Sign.FileName);

                    //-------------------Std PHOTO and Sign----------------

                    #region Photo and Sign
                    string filePath = "";
                    string filePathSign = "";
                    string Upload = System.Configuration.ConfigurationManager.AppSettings["Upload"];

                    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["std_Photo"].ToString() != "")
                    {
                        //  not imported
                        rm.checkCategory = "";
                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    }
                    else
                    {
                        string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                        if (oldyear.ToString() == "2022")
                        {
                            if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                {

                                    @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                    filePath = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2021")
                        {
                            if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                {

                                    @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                    filePath = @"C:\ClusterStorage\Volume1\upload\upload2020\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2020/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2020")
                        {
                            if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                {

                                    @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                                    filePath = @"C:\ClusterStorage\Volume1\upload\upload2019\" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2019", "");

                                }
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            }
                        }
                        else
                        {
                            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        }
                    }
                    //---------------------------------------------------------For Sign------------------------------------------

                    if (ds.Tables[0].Rows[0]["std_sign"].ToString() != null && ds.Tables[0].Rows[0]["std_sign"].ToString() != "")
                    {
                        //  not imported
                        rm.checkCategory = "";
                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }
                    else
                    {
                        string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                        if (oldyear.ToString() == "2022")
                        {
                            if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                {
                                    @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                    filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2022/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2021")
                        {
                            if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                {

                                    @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                    filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2020\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2020/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2020")
                        {
                            if (ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                {
                                    @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                    filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2019\" + ds.Tables[0].Rows[0]["old_std_sign"].ToString().Replace("https://registration2022.pseb.ac.in/upload/Upload2019/", "");
                                }
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                            }
                        }

                        else
                        {
                            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                        }
                    }

                    #endregion
                    //--------------------PhotoSign----------------------

                    // Start Subject Master
                    DataTable dtMatricSubject = new DataTable();
                    dtMatricSubject.Columns.Add(new DataColumn("CLASS", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUB", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBNM", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBABBR", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("MEDIUM", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBCAT", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUB_SEQ", typeof(int)));

                    dtMatricSubject.Columns.Add(new DataColumn("GROUP", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("TCODE", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("TNAME", typeof(string)));

                    DataRow dr = null;
                    for (int i = 1; i <= 11; i++)
                    {
                        dr = dtMatricSubject.NewRow();
                        dr["CLASS"] = 4;
                        DataSet dsSub = new DataSet();
                        dr["SUBNM"] = "";
                        dr["SUBABBR"] = "";
                        //---------------------------------Science----------------------//
                        if (rm.Tgroup == "SCIENCE")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.coms1; dr["MEDIUM"] = rm.comm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.comm2 != null)
                                {
                                    dr["MEDIUM"] = rm.comm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.coms2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.coms3; dr["MEDIUM"] = rm.comm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.coms3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.coms4sci; dr["MEDIUM"] = rm.comm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.coms4sci != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms4sci.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                            //else if (i == 5)
                            //{
                            //dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            //if (rm.ssWEL != null)
                            //{
                            //    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                            //    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //}
                            //}


                            else if (i == 5)
                            {
                                dr["SUB"] = rm.ss5; dr["MEDIUM"] = rm.sm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ss5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 6)
                            {
                                dr["SUB"] = rm.ss6; dr["MEDIUM"] = rm.sm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ss6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.ss7; dr["MEDIUM"] = rm.sm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ss7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.ss8; dr["MEDIUM"] = rm.sm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.ss8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }


                        }
                        //---------------------------------End Science----------------------//
                        //-----------------------------------Commerce------------
                        if (rm.Tgroup == "COMMERCE")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.coms1; dr["MEDIUM"] = rm.comcm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.comcm2 != null)
                                {
                                    dr["MEDIUM"] = rm.comcm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.comcs2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.comcs2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.comcs2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.coms3; dr["MEDIUM"] = rm.comcm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.coms3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.coms4comm; dr["MEDIUM"] = rm.comcm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.coms4comm != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms4comm.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                            //else if (i == 5)
                            //{
                            //    dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            //    if (rm.ssWEL != null)
                            //    {
                            //        dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                            //        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //    }
                            //}


                            else if (i == 5)
                            {
                                dr["SUB"] = rm.coms5; dr["MEDIUM"] = rm.comm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 6)
                            {
                                dr["SUB"] = rm.coms6; dr["MEDIUM"] = rm.comm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.coms7; dr["MEDIUM"] = rm.comm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.coms8; dr["MEDIUM"] = rm.comm8; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 9)
                            {
                                dr["SUB"] = rm.coms9; dr["MEDIUM"] = rm.comm9; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.coms9 != null)
                                {
                                    if (rm.coms9 == "0")
                                    {

                                    }
                                    else
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms9.ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }
                                }
                            }

                        }
                        //-----------------------------------End Commerce------------
                        //-----------------------------------Humanity------------
                        if (rm.Tgroup == "HUMANITIES")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.hums1; dr["MEDIUM"] = rm.humm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.humm2 != null)
                                {
                                    dr["MEDIUM"] = rm.humm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.hums2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.hums3; dr["MEDIUM"] = rm.humm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.hums3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.hums4; dr["MEDIUM"] = rm.humm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.hums4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                            //else if (i == 5)
                            //{
                            //    dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            //    if (rm.ssWEL != null)
                            //    {
                            //        dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                            //        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //    }
                            //}



                            else if (i == 5)
                            {
                                dr["SUB"] = rm.hums5; dr["MEDIUM"] = rm.humm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 6)
                            {
                                dr["SUB"] = rm.hums6; dr["MEDIUM"] = rm.humm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.hums7; dr["MEDIUM"] = rm.humm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.hums8; dr["MEDIUM"] = rm.humm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.hums8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }


                        }
                        //-----------------------------------End Humanity------------
                        //-----------------------------------vocational------------
                        if (rm.Tgroup == "VOCATIONAL")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.vocs1; dr["MEDIUM"] = rm.vocm1; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();

                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.vocm2 != null)
                                {
                                    dr["MEDIUM"] = rm.vocm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.vocs2; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();

                                    //dr["GROUP"] = dsSub.Tables[0].Rows[0]["GROUP"].ToString();
                                    //dr["TCODE"] = dsSub.Tables[0].Rows[0]["TCODE"].ToString();
                                    //dr["TNAME"] = dsSub.Tables[0].Rows[0]["TNAME"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.vocs3; dr["MEDIUM"] = rm.vocm3; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                                if (rm.vocs3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    //dr["GROUP"] = dsSub.Tables[0].Rows[0]["GROUP"].ToString();
                                    //dr["TCODE"] = dsSub.Tables[0].Rows[0]["TCODE"].ToString();
                                    //dr["TNAME"] = dsSub.Tables[0].Rows[0]["TNAME"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.vocs4; dr["MEDIUM"] = rm.vocm4; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                                if (rm.vocs4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            //else if (i == 5)
                            //{
                            //    dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            //    if (rm.ssWEL != null)
                            //    {
                            //        dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                            //        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //    }
                            //}

                            else if (i == 5)
                            {
                                dr["SUB"] = rm.vocs5; dr["MEDIUM"] = rm.vocm5; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 6)
                            {
                                dr["SUB"] = rm.vocs6; dr["MEDIUM"] = rm.vocm6; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.vocs7; dr["MEDIUM"] = rm.vocm7; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.vocs8; dr["MEDIUM"] = rm.vocm8; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "A";
                                if (rm.vocs8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 9)
                            {
                                dr["SUB"] = rm.vocs9; dr["MEDIUM"] = rm.vocm9; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                                if (rm.vocs9 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs9.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 10)
                            {
                                if (rm.vocm10 != null)
                                {
                                    dr["MEDIUM"] = rm.vocm10;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.vocs10; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                                if (rm.vocs10 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs10.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }


                        }
                        //-----------------------------------End Vocational------------

                        //-----------------------------------technical------------
                        if (rm.Tgroup == "TECHNICAL")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.tecs1; dr["MEDIUM"] = rm.tecm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.tecm2 != null)
                                {
                                    dr["MEDIUM"] = rm.tecm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.tecs2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.tecs3; dr["MEDIUM"] = rm.tecm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.tecs3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.tecs4; dr["MEDIUM"] = rm.tecm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.tecs4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            //else if (i == 5)
                            //{
                            //dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            //if (rm.ssWEL != null)
                            //{
                            //    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                            //    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //}
                            //}

                            else if (i == 5)
                            {
                                dr["SUB"] = rm.tecs5; dr["MEDIUM"] = rm.tecm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 6)
                            {
                                dr["SUB"] = rm.tecs6; dr["MEDIUM"] = rm.tecm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.tecs7; dr["MEDIUM"] = rm.tecm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.tecs8; dr["MEDIUM"] = rm.tecm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.tecs8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                        }
                        //-----------------------------------End technical------------

                        //-----------------------------------Agriculture------------
                        if (rm.Tgroup == "AGRICULTURE")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.agrs1; dr["MEDIUM"] = rm.agrm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.agrm2 != null)
                                {
                                    dr["MEDIUM"] = rm.agrm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.agrs2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                            else if (i == 3)
                            {
                                dr["SUB"] = rm.agrs3; dr["MEDIUM"] = rm.agrm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.agrs3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.agrs4; dr["MEDIUM"] = rm.agrm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.agrs4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            //else if (i == 5)
                            //{
                            //dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                            //if (rm.ssWEL != null)
                            //{
                            //    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                            //    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                            //    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                            //}
                            //}

                            else if (i == 5)
                            {
                                dr["SUB"] = rm.agrs5; dr["MEDIUM"] = rm.agrm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 6)
                            {
                                dr["SUB"] = rm.agrs6; dr["MEDIUM"] = rm.agrm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.agrs7; dr["MEDIUM"] = rm.agrm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.agrs8; dr["MEDIUM"] = rm.agrm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.agrs8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                        }
                        //-----------------------------------End Agriculture------------

                        dtMatricSubject.Rows.Add(dr);

                        //    if (rm.Tgroup == "HUMANITIES")
                        //    {
                        //        if (i == 6)
                        //        {
                        //            dr = dtMatricSubject.NewRow();
                        //            dr["CLASS"] = 4;
                        //            //DataSet dsSub = new DataSet();
                        //            dr["SUBNM"] = "";
                        //            dr["SUBABBR"] = "";
                        //            dr["MEDIUM"] = "MEDIUM";
                        //            if (rm.NsqfsubS6 != "NO" && rm.NsqfsubS6 != null && rm.NsqfsubS6 != "")
                        //            {
                        //                dr["SUB"] = "205"; dr["SUB_SEQ"] = 12; dr["SUBCAT"] = "R";
                        //                if (dr["SUB"] != null)
                        //                {
                        //                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(dr["SUB"].ToString());
                        //                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                        //                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                        //                }
                        //            }
                        //            //// dtMatricSubject.Rows.Add(dr); HOT (85,205) subject droped by PSEB , So don't insert HOT (85,205) if NSQF Selected (M1,M2,T1,T2)
                        //        }
                        //    }

                    }

                    dtMatricSubject.AcceptChanges();
                    dtMatricSubject = dtMatricSubject.AsEnumerable().Where(r => r.ItemArray[1].ToString() != "" && r.ItemArray[1].ToString() != "0").CopyToDataTable();

                    rm.Board = "P.S.E.B BOARD";
                    //rm.MetricBoard = "P.S.E.B BOARD";
                    if (rm.MetricBoard == "" || rm.MetricBoard == null)
                    {
                        rm.MetricBoard = "P.S.E.B BOARD";
                    }

                    if (rm.IsImportedStudent != "1")
                    {
                        // ViewBag.MyMatricBoard = objCommon.GetMatricBoard().Where(s => Convert.ToString(s.Value).ToUpper() == "P.S.E.B BOARD".ToUpper()).ToList();
                        ViewBag.MyBoard = objCommon.GetMatricBoard().Where(s => Convert.ToString(s.Value).ToUpper() == "P.S.E.B BOARD".ToUpper()).ToList();
                    }

                    int PNAMECount = System.Text.RegularExpressions.Regex.Matches(rm.Candi_Name_P, @"[a-zA-Z]").Count;
                    int FPNAMECount = System.Text.RegularExpressions.Regex.Matches(rm.Father_Name_P, @"[a-zA-Z]").Count;
                    int MPNAMECount = System.Text.RegularExpressions.Regex.Matches(rm.Mother_Name_P, @"[a-zA-Z]").Count;

                    var duplicates = dtMatricSubject.AsEnumerable().GroupBy(r => r[2]).Where(gr => gr.Count() > 1).ToList();
                    if (duplicates.Any())
                    {
                        ViewBag.Duplicate = "Duplicate Subjects: " + String.Join(", ", duplicates.Select(dupl => dupl.Key));
                        ViewData["resultUpdate"] = 10;
                        return View(rm);

                    }

                    var DTNoOfSub = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") != "72" && r.Field<string>("SUB") != "73" && r.Field<string>("SUB") != "205").ToList();

                    int NoOfSub = DTNoOfSub.Count();
                    if (rm.DA == "N.A.")
                    {
                        if (NoOfSub < 7)
                        {
                            ViewData["resultUpdate"] = 15;
                            return View(rm);
                        }
                    }
                    else
                    {
                        if (NoOfSub < 7)
                        {
                            ViewData["resultUpdate"] = 15;
                            return View(rm);
                        }
                    }



                    string msg = "";
                    bool status = objDB.SubjectNotAllowed(rm.Tgroup, dtMatricSubject, out msg);
                    if (status == false)
                    {
                        ViewData["resultUpdate"] = 20;
                        ViewData["errorMsg"] = msg;
                        return View(rm);
                    }

                    if (!string.IsNullOrEmpty(rm.DOB))
                    {
                        rm.DOB = AbstractLayer.StaticDB.DateInFormat(rm.DOB) == true ? rm.DOB : "";
                    }
                    else { rm.DOB = ""; }


                    // Check NSQF Subject exists in Subject List after NSQF Current Class Selection 
                    if (!string.IsNullOrEmpty(NSQFsubS6))
                    {
                        if (NSQFsubS6.ToUpper() != "NO".ToUpper())
                        {
                            rm.NsqfsubS6 = NSQFsubS6;
                            var NSQFSubExists = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") == NSQFsubS6).Count() > 0;
                            if (!NSQFSubExists)
                            {
                                ViewData["resultUpdate"] = "NSQFSUBWANT";
                                return View(rm);
                            }

                        }
                    }

                    string result = objDB.Update_T_Data(rm, frm, formName, id, stdPic, stdSign, dtMatricSubject);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not updated
                        ViewData["resultUpdate"] = 0;
                    }
                    else if (result.Length > 5)
                    {
                        ViewData["resultUpdate"] = 1;
                        if (Session["Session"] != null)
                        {
                            if (Session["Session"].ToString() == "2023-2024")
                            {
                                //-----------------------------------Session 2017-2018------------
                                if (rm.file != null)
                                {
                                    //var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                                    //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Photo"));
                                    //if (!Directory.Exists(FilepathExist))
                                    //{
                                    //    Directory.CreateDirectory(FilepathExist);
                                    //}
                                    //rm.file.SaveAs(path);
                                    //filepathtosave = "../Upload/Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                                    //ViewBag.ImageURL = filepathtosave;
                                    string Orgfile = result + "P" + ".jpg";
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.file.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }


                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                                    string type = "P";
                                    string IsNew = "YES";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                                }
                                else
                                {

                                    var filePath1 = filePath;
                                    if ((ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "") && (filePath != null && filePath != ""))
                                    {
                                        //var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                                        //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Photo"));
                                        //if (!Directory.Exists(FilepathExist))
                                        //{
                                        //    Directory.CreateDirectory(FilepathExist);
                                        //}
                                        //if (System.IO.File.Exists(path))
                                        //{
                                        //    System.IO.File.Delete(path);
                                        //}
                                        //System.IO.File.Copy(filePath1, path);
                                        //filepathtosave = "../Upload/Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                                        //ViewBag.ImageURL = filepathtosave;

                                        string Orgfile = result + "P" + ".jpg";
                                        using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                        {
                                            using (var newMemoryStream = new MemoryStream())
                                            {
                                                var uploadRequest = new TransferUtilityUploadRequest
                                                {
                                                    InputStream = rm.file.InputStream,
                                                    Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                                    BucketName = BUCKET_NAME,
                                                    CannedACL = S3CannedACL.PublicRead
                                                };

                                                var fileTransferUtility = new TransferUtility(client);
                                                fileTransferUtility.Upload(uploadRequest);
                                            }
                                        }


                                        string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                                        string type = "P";
                                        string IsNew = "NO";
                                        string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);


                                    }
                                }
                                if (rm.std_Sign != null)
                                {
                                    //var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                                    //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Sign"));
                                    //if (!Directory.Exists(FilepathExist))
                                    //{
                                    //    Directory.CreateDirectory(FilepathExist);
                                    //}
                                    //rm.std_Sign.SaveAs(path);
                                    //filepathtosave = "../Upload/Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                                    //ViewBag.ImageURL = filepathtosave;

                                    string Orgfile = result + "S" + ".jpg";
                                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                    {
                                        using (var newMemoryStream = new MemoryStream())
                                        {
                                            var uploadRequest = new TransferUtilityUploadRequest
                                            {
                                                InputStream = rm.std_Sign.InputStream,
                                                Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                                BucketName = BUCKET_NAME,
                                                CannedACL = S3CannedACL.PublicRead
                                            };

                                            var fileTransferUtility = new TransferUtility(client);
                                            fileTransferUtility.Upload(uploadRequest);
                                        }
                                    }

                                    string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                                    string type = "S";
                                    string IsNew = "YES";
                                    string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                                }
                                else
                                {
                                    var filePathS = filePathSign;
                                    if ((ds.Tables[0].Rows[0]["std_sign"].ToString() == null || ds.Tables[0].Rows[0]["std_sign"].ToString() == "") && (filePathSign != null && filePathSign != ""))
                                    {
                                        //var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                                        //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + schlDist + "/Sign"));
                                        //if (!Directory.Exists(FilepathExist))
                                        //{
                                        //    Directory.CreateDirectory(FilepathExist);
                                        //}
                                        //if (System.IO.File.Exists(path))
                                        //{
                                        //    System.IO.File.Delete(path);
                                        //}
                                        //System.IO.File.Copy(filePathS, path);
                                        //filepathtosave = "../Upload/Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                                        //ViewBag.ImageURL = filepathtosave;

                                        string Orgfile = result + "S" + ".jpg";
                                        using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                        {
                                            using (var newMemoryStream = new MemoryStream())
                                            {
                                                var uploadRequest = new TransferUtilityUploadRequest
                                                {
                                                    InputStream = rm.std_Sign.InputStream,
                                                    Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                                    BucketName = BUCKET_NAME,
                                                    CannedACL = S3CannedACL.PublicRead
                                                };

                                                var fileTransferUtility = new TransferUtility(client);
                                                fileTransferUtility.Upload(uploadRequest);
                                            }
                                        }

                                        string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                                        string type = "S";
                                        string IsNew = "NO";
                                        string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);


                                    }
                                }
                                // //-----------------------------------End  Session 2017-2018------------
                            }

                        }
                        ModelState.Clear();
                        //--For Showing Message---------//
                        ViewData["resultUpdate"] = 1;
                        //return RedirectToAction("M2Formgrid", "RegistrationPortal");

                    }
                    else
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = result;
                    }
                }

            }
            catch (Exception ex1)
            {
                oErrorLog.WriteErrorLog(ex1.ToString(), Path.GetFileName(Request.Path));

            }
            return View(rm);
        }


        [SessionCheckFilter]
        public ActionResult T1FormDelete(string id)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }

            }
            if (id == null)
            {
                return RedirectToAction("T1Formgrid", "RegistrationPortal");
            }
            string formname = "T1";
            id = encrypt.QueryStringModule.Decrypt(id);

            string schlDist = null;
            DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
            if (schlDistds.Tables[0].Rows.Count > 0)
            {
                schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
            }
            DataSet ds = objDB.SearchStudentGetByData_Subject(id, formname);
            //DataSet ds = objDB.SearchStudentGetByData(id);
            string result = "";
            if (ds == null || ds.Tables[0].Rows.Count == 0)
            {
                result = objDB.Delete_T_FromData(id);
                return RedirectToAction("T1Formgrid", "RegistrationPortal");
            }
            else
            {
                string dist = ds.Tables[0].Rows[0]["District"].ToString();
                string imgPhoto = ds.Tables[0].Rows[0]["std_Photo"].ToString();
                string imgSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
                string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();
                result = objDB.Delete_T_FromData(id); // passing Value to DBClass from model

                //--------Photo Delete------
                RegistrationModels RM = new RegistrationModels();
                var fileDesti = "";
                var fileDestiPic = "";
                if (Session["Session"] != null)
                {
                    if (Session["Session"].ToString() == "2023-2024")
                    {
                        // var pathPhoto = "D:\\LatestPSEBONLINE - 2018 - 12042017\\PSEBONLINE\\PSEBONLINE\\Upload\\upload2018\\N1\\165\\Photo\\N1165100003P.jpg";
                        var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), imgPhoto);
                        //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

                        if (System.IO.File.Exists(pathPhoto))
                        {
                            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"));
                            if (!Directory.Exists(FilepathExist))
                            {
                                Directory.CreateDirectory(FilepathExist);
                            }

                            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                            fileDestiPic = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"), imgPhoto);
                            System.IO.File.Move(pathPhoto, fileDestiPic);
                            System.IO.File.Delete(pathPhoto);

                        }
                        var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), imgSign);
                        //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
                        if (System.IO.File.Exists(pathSIGN))
                        {
                            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"));
                            if (!Directory.Exists(FilepathExist))
                            {
                                Directory.CreateDirectory(FilepathExist);
                            }
                            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                            fileDesti = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"), imgSign);
                            System.IO.File.Move(pathSIGN, fileDesti);
                            System.IO.File.Delete(pathSIGN);

                        }
                        //------------End photo Delete------
                    }

                }


                //------------End photo Delete------
                TempData["resultDelete"] = result;
                // for dislaying message after saving storing output.
                return RedirectToAction("T1Formgrid", "RegistrationPortal");

            }
        }
        #endregion T1 Form Start

        //------T1 End------------------------

        //------------------------T2 Start-------------------

        #region T2 form Start
        [SessionCheckFilter]
        public ActionResult T2Form()
        {
            ViewBag.YesNoListText = new AbstractLayer.DBClass().GetYesNoText().ToList();
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            List<SelectListItem> SubWEL = new List<SelectListItem>();
            SubWEL.Add(new SelectListItem { Text = "WELCOME LIFE", Value = "210" });
            ViewBag.SubWEL = new SelectList(SubWEL, "Value", "Text");
            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
            ViewBag.vm5 = objCommon.GetGroupMedium();
            ViewBag.vm6 = objCommon.GetGroupMedium();
            ViewBag.vm7 = objCommon.GetGroupMedium();
            RegistrationModels rm = new RegistrationModels();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());

                //int res = 0;
                //objDB.CheckDateE1E2T1T2(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;

                //int res = 0;
                //objDB.CheckDateE1E2T1T2(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }
            }

            //-----------------------------------------------------Nsqf -------------------------
            string ses = Session["Session"].ToString();
            string schlcode = Session["SCHL"].ToString();
            DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
            if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
            {
                ViewData["NSQFSCHOOL"] = "1";
            }
            else
            {
                ViewData["NSQFSCHOOL"] = "0";
            }
            string nsqfsub = null;
            DataSet nsresult = objDB.SelectS12(nsqfsub); // passing Value to DBClass from model
            ViewBag.nsfq = nsresult.Tables[0];
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {
                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
            }
            ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
            ViewBag.nsqfcatg = new SelectList(nsfqList, "Value", "Text");

            //-----------------------------------------------------End Nsqf -------------------------

            DataSet dsCOMM = objDB.SubjectsTweleve_Commerce();
            if (dsCOMM == null || dsCOMM.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.ssub = dsCOMM.Tables[0];
                List<SelectListItem> COMMSub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in dsCOMM.Tables[0].Rows)
                {
                    COMMSub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                ViewBag.coms9List = new SelectList(COMMSub, "Value", "Text");


            }

            DataSet scis = objDB.SubjectsTweleve_SCI();
            if (scis == null || scis.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.ssub = scis.Tables[0];
                List<SelectListItem> scisub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.ssub.Rows)
                {
                    scisub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                ViewBag.sss8 = new SelectList(scisub, "Value", "Text");


            }
            DataSet hds = objDB.SubjectsTweleve_hum();
            if (hds == null || hds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.hsub = hds.Tables[0];
                List<SelectListItem> humsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.hsub.Rows)
                {
                    humsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.hs5 = new SelectList(humsub, "Value", "Text");
                ViewBag.hs6 = new SelectList(humsub, "Value", "Text");
                ViewBag.hs7 = new SelectList(humsub, "Value", "Text");
                ViewBag.hs8 = new SelectList(humsub, "Value", "Text");
                ViewBag.vs10 = new SelectList(humsub, "Value", "Text"); //--------humanity Subjects Equals To Vocational Aditional Subjects
            }
            DataSet tecds = objDB.SubjectsTweleve_tech();
            if (tecds == null || tecds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.tsub = tecds.Tables[0];
                List<SelectListItem> tecsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.tsub.Rows)
                {
                    tecsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.ts5 = new SelectList(tecsub, "Value", "Text");
                ViewBag.ts6 = new SelectList(tecsub, "Value", "Text");
                ViewBag.ts7 = new SelectList(tecsub, "Value", "Text");
                ViewBag.ts8 = new SelectList(tecsub, "Value", "Text");

            }
            DataSet agrds = objDB.SubjectsTweleve_agr();
            if (agrds == null || agrds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.agrsub = agrds.Tables[0];
                List<SelectListItem> agrsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.agrsub.Rows)
                {
                    agrsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                List<SelectListItem> agrAdditionAlsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in agrds.Tables[1].Rows)
                {
                    agrAdditionAlsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.as5 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value == "065").ToList();
                ViewBag.as6 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value != "065").ToList();
                ViewBag.as7 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value != "065").ToList();
                ViewBag.as8 = new SelectList(agrAdditionAlsub, "Value", "Text");

            }
            DataSet vocds = objDB.Voc_agr();
            if (vocds == null || vocds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.vocsub = vocds.Tables[0];
                List<SelectListItem> vsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.vocsub.Rows)
                {
                    vsub.Add(new SelectListItem { Text = @dr["group"].ToString(), Value = @dr["group"].ToString() });
                }

                ViewBag.selgroup = new SelectList(vsub, "Value", "Text");

            }

            DataSet vocsubjects = objDB.SubjectsTweleve_Voc();
            if (vocsubjects == null || vocsubjects.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.vsub = vocsubjects.Tables[0];
                List<SelectListItem> vocsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.vsub.Rows)
                {
                    vocsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.vs5 = ViewBag.vos5 = vocsub;
                ViewBag.vs6 = ViewBag.vos6 = vocsub;
                ViewBag.vs7 = ViewBag.vos7 = vocsub;
                //ViewBag.hs8 = new SelectList(vocsub, "Value", "Text");
                List<SelectListItem> vocAdditionAlsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in vocsubjects.Tables[1].Rows)
                {
                    vocAdditionAlsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.vocAddSubList = new SelectList(vocAdditionAlsub, "Value", "Text");

            }

            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();

            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
            List<SelectListItem> reslist = objCommon.GetMatricResult().Where(s => s.Value.ToUpper() == "PASS").ToList();
            ViewBag.MyMatricResult = reslist;

            ViewBag.MyWritter = objCommon.GetWritter();
            ViewBag.MyBoard = objCommon.GetN2Board();
            ViewBag.Mon = objCommon.GetMonth();
            List<SelectListItem> yearlist = objCommon.GetSessionYear(); // passing Value to DBClass from model   
            yearlist.RemoveRange(3, 45);
            ViewBag.TSYearList = yearlist;
            ViewBag.SessionYearList = objCommon.GetSessionYear();



            @ViewBag.DA = objCommon.GetDA();
            // @ViewBag.groupT = objCommon.getGroupT();

            List<SelectListItem> MyGroupList = objCommon.GroupName();
            DataTable dtAssignSubject = objCommon.GetAssignSubjectBySchool(Session["SCHL"].ToString());
            if (dtAssignSubject != null && dtAssignSubject.Rows.Count > 0)
            {
                ViewBag.MyGroup = objCommon.GetSubjectsBySchool(dtAssignSubject, MyGroupList);
            }
            ViewBag.MyGroup = MyGroupList;

            ViewBag.MyDist = objCommon.GetDistE();
            ViewBag.SectionList = objCommon.GetSection();
            ViewBag.Section = "0";
            string formname = "T2";
            string schlid = "";
            if (Session["SCHL"] != null)
            {
                schlid = Session["SCHL"].ToString();
            }
            else
            {
                return View(rm);
            }
            DataSet seleLastCan = objDB.SelectlastEntryCandidate(formname, schlid);
            // DataSet seleLastCan = objDB.SelectlastEntry_E2_Candidate(formname);
            if (seleLastCan.Tables[0].Rows.Count > 0)
            {
                //                rm.Board_Roll_Num, rm.Admission_Num,po.Candi_Name,po.Father_Name,po.Std_id
                //FROM regMasterRegular2016 rm, Personal_Info Po
                //WHERE po.Std_id = rm.Std_id and rm.std_id = (SELECT max(rm.std_id) FROM regMasterRegular2016 rm)
                @ViewBag.message = "1";
                @ViewBag.Board_Roll_Num = seleLastCan.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                @ViewBag.Admission_Num = seleLastCan.Tables[0].Rows[0]["Admission_Num"].ToString();
                @ViewBag.Candi_Name = seleLastCan.Tables[0].Rows[0]["Candi_Name"].ToString();
                @ViewBag.Father_Name = seleLastCan.Tables[0].Rows[0]["Father_Name"].ToString();
                @ViewBag.id = seleLastCan.Tables[0].Rows[0]["Std_id"].ToString();
                @ViewBag.lot = seleLastCan.Tables[0].Rows[0]["lot"].ToString();
            }
            else
            {
                @ViewBag.message = "Record Not Found";
            }
            return View(rm);
        }

        [SessionCheckFilter]
        [HttpPost]
        public ActionResult T2Form(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern, string subS6)
        {
            try
            {


                ViewBag.YesNoListText = new AbstractLayer.DBClass().GetYesNoText().ToList();
                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                List<SelectListItem> SubWEL = new List<SelectListItem>();
                SubWEL.Add(new SelectListItem { Text = "WELCOME LIFE", Value = "210" });
                ViewBag.SubWEL = new SelectList(SubWEL, "Value", "Text");

                string schlDist = null;
                ViewBag.vm5 = objCommon.GetGroupMedium();
                ViewBag.vm6 = objCommon.GetGroupMedium();
                ViewBag.vm7 = objCommon.GetGroupMedium();
                ViewBag.sm2 = objCommon.GetGroupMedium();
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                DataSet result1 = objDB.SelectDist(); // passing Value to DBClass from model
                ViewBag.MyDist = result1.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
                List<SelectListItem> items = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
                {
                    items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
                }
                // ViewBag.MyDist = items;
                ViewBag.MyDist = new SelectList(items, "Value", "Text", 047);
                ViewBag.MyBoard = objCommon.GetN2Board();
                ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
                ViewBag.MyMatricResult = objCommon.GetMatricResult().Where(s => s.Value.ToUpper() == "PASS").ToList();
                //int res = 0;
                //objDB.CheckDateE1E2T1T2(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;
                DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
                if (schlDistds.Tables[0].Rows.Count > 0)
                {
                    schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
                }

                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
                List<SelectListItem> yearlist = objCommon.GetSessionYear(); // passing Value to DBClass from model   
                yearlist.RemoveRange(3, 45);
                ViewBag.TSYearList = yearlist;
                ViewBag.MyGroup = objCommon.GroupName();
                ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
                ViewBag.MyWritter = objCommon.GetWritter();


                string session = null;
                string idno = null;
                string schl = null;
                if (Session["Session"] != null)
                {
                    session = Session["Session"].ToString();
                    idno = Session["IDNO"].ToString();
                    schl = Session["SCHL"].ToString();
                }
                else
                {
                    return RedirectToAction("Index", "Login");
                }

                //Check server side validation using data annotation
                if (ModelState.IsValid)
                {
                    string group = rm.MyGroup;
                    string dist = frm["MyDist"].ToString();
                    string Tehsil = frm["MyTeh"].ToString();
                    //string Mygroup = frm["MyGroup"];
                    string formName = "T2";

                    if (rm.file != null)
                    {
                        stdPic = Path.GetFileName(rm.file.FileName);
                    }
                    else
                    {
                        //Response.Write("<script>alert('Please Upload Photo')</script>");
                        //return View();

                    }
                    if (rm.std_Sign != null)
                    {
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);
                    }
                    else
                    {
                        //Response.Write("<script>alert('Please Upload sign')</script>");
                        //return View();
                    }


                    if (rm.DocProofCertificate != null)
                    {
                        rm.ProofCertificate = Path.GetFileName(rm.DocProofCertificate.FileName);
                    }


                    if (rm.DocProofNRICandidates != null)
                    {
                        rm.ProofNRICandidates = Path.GetFileName(rm.DocProofNRICandidates.FileName);
                    }


                    // Start Subject Master
                    DataTable dtMatricSubject = new DataTable();
                    dtMatricSubject.Columns.Add(new DataColumn("CLASS", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUB", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBNM", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBABBR", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("MEDIUM", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBCAT", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUB_SEQ", typeof(int)));

                    dtMatricSubject.Columns.Add(new DataColumn("GROUP", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("TCODE", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("TNAME", typeof(string)));
                    DataRow dr = null;
                    for (int i = 1; i <= 11; i++)
                    {
                        dr = dtMatricSubject.NewRow();
                        dr["CLASS"] = 4;
                        DataSet dsSub = new DataSet();
                        dr["SUBNM"] = "";
                        dr["SUBABBR"] = "";
                        //---------------------------------Science----------------------//
                        if (rm.Tgroup == "SCIENCE")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.coms1; dr["MEDIUM"] = rm.comm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.comm2 != null)
                                {
                                    dr["MEDIUM"] = rm.comm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.coms2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.coms3; dr["MEDIUM"] = rm.comm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.coms3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.coms4sci; dr["MEDIUM"] = rm.comm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.coms4sci != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms4sci.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                            else if (i == 5)
                            {
                                dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ssWEL != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }



                            else if (i == 6)
                            {
                                dr["SUB"] = rm.ss5; dr["MEDIUM"] = rm.sm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ss5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.ss6; dr["MEDIUM"] = rm.sm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ss6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.ss7; dr["MEDIUM"] = rm.sm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ss7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 9)
                            {
                                dr["SUB"] = rm.ss8; dr["MEDIUM"] = rm.sm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.ss8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }


                        }
                        //---------------------------------End Science----------------------//
                        //-----------------------------------Commerce------------
                        if (rm.Tgroup == "COMMERCE")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.coms1; dr["MEDIUM"] = rm.comcm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.comcm2 != null)
                                {
                                    dr["MEDIUM"] = rm.comcm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.comcs2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.comcs2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.comcs2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.coms3; dr["MEDIUM"] = rm.comcm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.coms3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.coms4comm; dr["MEDIUM"] = rm.comcm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.coms4comm != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms4comm.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                            else if (i == 5)
                            {
                                dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ssWEL != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }


                            else if (i == 6)
                            {
                                dr["SUB"] = rm.coms5; dr["MEDIUM"] = rm.comm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.coms6; dr["MEDIUM"] = rm.comm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.coms7; dr["MEDIUM"] = rm.comm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 9)
                            {
                                dr["SUB"] = rm.coms8; dr["MEDIUM"] = rm.comm8; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 10)
                            {
                                dr["SUB"] = rm.coms9; dr["MEDIUM"] = rm.comm9; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.coms9 != null)
                                {
                                    if (rm.coms9 == "0")
                                    {

                                    }
                                    else
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms9.ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }
                                }
                            }

                        }
                        //-----------------------------------End Commerce------------
                        //-----------------------------------Humanity------------
                        if (rm.Tgroup == "HUMANITIES")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.hums1; dr["MEDIUM"] = rm.humm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.humm2 != null)
                                {
                                    dr["MEDIUM"] = rm.humm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.hums2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.hums3; dr["MEDIUM"] = rm.humm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.hums3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.hums4; dr["MEDIUM"] = rm.humm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.hums4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                            else if (i == 5)
                            {
                                dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ssWEL != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }



                            else if (i == 6)
                            {
                                dr["SUB"] = rm.hums5; dr["MEDIUM"] = rm.humm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.hums6; dr["MEDIUM"] = rm.humm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.hums7; dr["MEDIUM"] = rm.humm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 9)
                            {
                                dr["SUB"] = rm.hums8; dr["MEDIUM"] = rm.humm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.hums8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }


                        }
                        //-----------------------------------End Humanity------------
                        //-----------------------------------vocational------------
                        if (rm.Tgroup == "VOCATIONAL")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.vocs1; dr["MEDIUM"] = rm.vocm1; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();

                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.vocm2 != null)
                                {
                                    dr["MEDIUM"] = rm.vocm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.vocs2; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();

                                    //dr["GROUP"] = dsSub.Tables[0].Rows[0]["GROUP"].ToString();
                                    //dr["TCODE"] = dsSub.Tables[0].Rows[0]["TCODE"].ToString();
                                    //dr["TNAME"] = dsSub.Tables[0].Rows[0]["TNAME"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.vocs3; dr["MEDIUM"] = rm.vocm3; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                                if (rm.vocs3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    //dr["GROUP"] = dsSub.Tables[0].Rows[0]["GROUP"].ToString();
                                    //dr["TCODE"] = dsSub.Tables[0].Rows[0]["TCODE"].ToString();
                                    //dr["TNAME"] = dsSub.Tables[0].Rows[0]["TNAME"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.vocs4; dr["MEDIUM"] = rm.vocm4; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                                if (rm.vocs4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 5)
                            {
                                dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ssWEL != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }


                            else if (i == 6)
                            {
                                dr["SUB"] = rm.vocs5; dr["MEDIUM"] = rm.vocm5; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.vocs6; dr["MEDIUM"] = rm.vocm6; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.vocs7; dr["MEDIUM"] = rm.vocm7; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 9)
                            {
                                dr["SUB"] = rm.vocs8; dr["MEDIUM"] = rm.vocm8; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "A";
                                if (rm.vocs8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 10)
                            {
                                dr["SUB"] = rm.vocs9; dr["MEDIUM"] = rm.vocm9; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                                if (rm.vocs9 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs9.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 11)
                            {
                                if (rm.vocm10 != null)
                                {
                                    dr["MEDIUM"] = rm.vocm10;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.vocs10; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                                if (rm.vocs10 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs10.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }


                        }
                        //-----------------------------------End Vocational------------

                        //-----------------------------------technical------------
                        if (rm.Tgroup == "TECHNICAL")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.tecs1; dr["MEDIUM"] = rm.tecm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.tecm2 != null)
                                {
                                    dr["MEDIUM"] = rm.tecm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.tecs2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.tecs3; dr["MEDIUM"] = rm.tecm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.tecs3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.tecs4; dr["MEDIUM"] = rm.tecm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.tecs4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 5)
                            {
                                dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ssWEL != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                            else if (i == 6)
                            {
                                dr["SUB"] = rm.tecs5; dr["MEDIUM"] = rm.tecm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.tecs6; dr["MEDIUM"] = rm.tecm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.tecs7; dr["MEDIUM"] = rm.tecm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 9)
                            {
                                dr["SUB"] = rm.tecs8; dr["MEDIUM"] = rm.tecm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.tecs8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                        }
                        //-----------------------------------End technical------------

                        //-----------------------------------Agriculture------------
                        if (rm.Tgroup == "AGRICULTURE")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.agrs1; dr["MEDIUM"] = rm.agrm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.agrm2 != null)
                                {
                                    dr["MEDIUM"] = rm.agrm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.agrs2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.agrs3; dr["MEDIUM"] = rm.agrm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.agrs3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.agrs4; dr["MEDIUM"] = rm.agrm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.agrs4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 5)
                            {
                                dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ssWEL != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                            else if (i == 6)
                            {
                                dr["SUB"] = rm.agrs5; dr["MEDIUM"] = rm.agrm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.agrs6; dr["MEDIUM"] = rm.agrm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.agrs7; dr["MEDIUM"] = rm.agrm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 9)
                            {
                                dr["SUB"] = rm.agrs8; dr["MEDIUM"] = rm.agrm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.agrs8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                        }
                        //-----------------------------------End Agriculture------------

                        dtMatricSubject.Rows.Add(dr);

                        //if (rm.Tgroup == "HUMANITIES")
                        //{
                        //    if (i == 6)
                        //    {
                        //        dr = dtMatricSubject.NewRow();
                        //        dr["CLASS"] = 4;
                        //        //DataSet dsSub = new DataSet();
                        //        dr["SUBNM"] = "";
                        //        dr["SUBABBR"] = "";
                        //        dr["MEDIUM"] = "MEDIUM";
                        //        if (rm.NsqfsubS6 != "NO" && rm.NsqfsubS6 != null && rm.NsqfsubS6 != "")
                        //        {
                        //            dr["SUB"] = "205"; dr["SUB_SEQ"] = 12; dr["SUBCAT"] = "R";
                        //            if (dr["SUB"] != null)
                        //            {
                        //                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(dr["SUB"].ToString());
                        //                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                        //                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                        //            }
                        //        }
                        //        //// dtMatricSubject.Rows.Add(dr); HOT (85,205) subject droped by PSEB , So don't insert HOT (85,205) if NSQF Selected (M1,M2,T1,T2)
                        //    }
                        //}

                    }

                    dtMatricSubject.AcceptChanges();
                    dtMatricSubject = dtMatricSubject.AsEnumerable().Where(r => r.ItemArray[1].ToString() != "" && r.ItemArray[1].ToString() != "0").CopyToDataTable();

                    var duplicates = dtMatricSubject.AsEnumerable().GroupBy(r => r[2]).Where(gr => gr.Count() > 1).ToList();
                    if (duplicates.Any())
                    {
                        ViewBag.Duplicate = "Duplicate Subjects: " + String.Join(", ", duplicates.Select(dupl => dupl.Key));
                        ViewData["resultUpdate"] = 10;
                        return View(rm);

                    }

                    var DTNoOfSub = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") != "72" && r.Field<string>("SUB") != "73" && r.Field<string>("SUB") != "205").ToList();

                    int NoOfSub = DTNoOfSub.Count();
                    if (rm.DA == "N.A.")
                    {
                        //if (NoOfSub < 8)
                        if (NoOfSub < 7)
                        {
                            ViewData["result"] = 15;
                            return View(rm);
                        }
                    }
                    else
                    {
                        if (NoOfSub < 7)
                        {
                            ViewData["result"] = 15;
                            return View(rm);
                        }
                    }


                    //RM.Tgroup == "HUMANITIES"
                    string msg = "";
                    bool status = objDB.SubjectNotAllowed(rm.Tgroup, dtMatricSubject, out msg);
                    if (status == false)
                    {
                        ViewData["result"] = 20;
                        ViewData["errorMsg"] = msg;
                        return View(rm);
                    }


                    // End Subject Master
                    //IsNRICandidate
                    if (rm.IsNRICandidate == true && (rm.DocProofNRICandidates != null || !string.IsNullOrEmpty(rm.ProofNRICandidates)))
                    {
                        rm.IsNRICandidate = true;
                    }
                    else
                    {
                        rm.IsNRICandidate = false;
                        rm.ProofNRICandidates = "";
                        rm.DocProofNRICandidates = null;
                    }

                    //NsqfPattern
                    //if (string.IsNullOrEmpty(NSQFsubS6))
                    //{
                    //    if (!string.IsNullOrEmpty(subS6))
                    //    {
                    //        NSQFsubS6 = subS6;
                    //    }
                    //}
                    //if (string.IsNullOrEmpty(NSQFsubS6))
                    //{
                    //    rm.NSQFPattern = "";
                    //}
                    //else if (NSQFsubS6 == "NO")
                    //{
                    //    rm.NSQFPattern = "";
                    //}
                    //else
                    //{
                    //    if (string.IsNullOrEmpty(NsqfPattern))
                    //    {
                    //        ViewData["result"] = "PATTERN";
                    //        return View(rm);
                    //    }
                    //    rm.NSQFPattern = NsqfPattern;
                    //}
                    //NsqfPattern
                    // Check NSQF Subject exists in Subject List after NSQF Current Class Selection 
                    if (!string.IsNullOrEmpty(NSQFsubS6))
                    {
                        if (NSQFsubS6.ToUpper() != "NO".ToUpper())
                        {
                            rm.NsqfsubS6 = NSQFsubS6;
                            var NSQFSubExists = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") == NSQFsubS6).Count() > 0;
                            if (!NSQFSubExists)
                            {
                                ViewData["resultUpdate"] = "NSQFSUBWANT";
                                return View(rm);
                            }

                        }
                    }


                    string result = objDB.Ins_T_Form_Data(rm, frm, formName, session, idno, schl, dtMatricSubject);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not saved
                        ViewData["result"] = 0;
                    }
                    else if (result == "-1")
                    {
                        //-----alredy exist
                        ViewData["result"] = -1;
                    }
                    else if (result == "-3")
                    {
                        //-----alredy exist
                        ViewData["result"] = -3;
                    }
                    else
                    {
                        //----Data Inserted Successfully
                        ViewData["result"] = 1;

                        if (rm.file != null)
                        {
                            //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.file.SaveAs(path);
                            //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                            //ViewBag.ImageURL = filepathtosave;

                            string Orgfile = result + "P" + ".jpg";
                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.file.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                            string type = "P";
                            string IsNew = "YES";
                            string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                        }
                        if (rm.std_Sign != null)
                        {
                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.std_Sign.SaveAs(path);
                            //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                            //ViewBag.ImageURL = filepathtosave;

                            string Orgfile = result + "S" + ".jpg";
                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.std_Sign.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }


                            string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                            string type = "S";
                            string IsNew = "YES";
                            string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                        }

                        // Documents

                        if (rm.DocProofCertificate != null)
                        {
                            string fileExt = Path.GetExtension(rm.DocProofCertificate.FileName);

                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"), result + "C" + fileExt);
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.DocProofCertificate.SaveAs(path);
                            string Orgfile = result + "C" + fileExt;

                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {

                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.DocProofCertificate.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            rm.ProofCertificate = "allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate" + "/" + result + "C" + fileExt;
                            string type = "C";
                            string UpdatePicC = objDB.Updated_Pic_Data(result, rm.ProofCertificate, type);
                        }

                        if (rm.DocProofNRICandidates != null)
                        {
                            string fileExt = Path.GetExtension(rm.DocProofNRICandidates.FileName);
                            string pathName = formName + "/" + schlDist + "/ProofNRICandidates";

                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + pathName), result + "NRI" + fileExt);
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + pathName));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.DocProofNRICandidates.SaveAs(path);
                            string Orgfile = result + "NRI" + fileExt;

                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    ///file.CopyTo(newMemoryStream);

                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.DocProofCertificate.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidates/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            rm.ProofNRICandidates = "allfiles/Upload2024/" + pathName + "/" + result + "NRI" + fileExt;
                            string type = "NRI";
                            string UpdatePicN = objDB.Updated_Pic_Data(result, rm.ProofNRICandidates, type);
                        }


                        //ViewBag.Message = "File has been uploaded successfully";
                        ModelState.Clear();
                        //--For Showing Message---------//
                        ViewData["result"] = 1;
                    }
                }
            }
            catch (Exception ex1)
            {


            }
            return T2Form();
        }


        [SessionCheckFilter]
        public ActionResult T2Formgrid(RegistrationSearchModelList registrationSearchModel)
        {
            string schl = Session["SCHL"].ToString();
            int status = new AbstractLayer.RegistrationDB().CheckSchoolAssignForm(2, schl);
            if (status <= 0)
            {
                return RedirectToAction("Index", "Home");
            }
            DataSet dsOut = new DataSet();
            registrationSearchModel.RegistrationSearchModel = AbstractLayer.RegistrationDB.GetStudentRecordsSearchPM("T2", schl, out dsOut);
            registrationSearchModel.StoreAllData = dsOut;
            return View(registrationSearchModel);
        }

        [SessionCheckFilter]
        public ActionResult T2FormModify(string id)
        {
            ViewBag.YesNoListText = new AbstractLayer.DBClass().GetYesNoText().ToList();
            ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
            List<SelectListItem> SubWEL = new List<SelectListItem>();
            SubWEL.Add(new SelectListItem { Text = "WELCOME LIFE", Value = "210" });
            ViewBag.SubWEL = new SelectList(SubWEL, "Value", "Text");


            ViewBag.vm5 = objCommon.GetGroupMedium();
            ViewBag.vm6 = objCommon.GetGroupMedium();
            ViewBag.vm7 = objCommon.GetGroupMedium();
            ViewBag.sm2 = objCommon.GetGroupMedium();
            ViewBag.sm3 = ViewBag.Commonmedium = objCommon.GetGroupMedium();
            ViewBag.sm4 = objCommon.GetGroupMedium();
            ViewBag.ccom2 = objCommon.GetGroupMedium();

            ViewBag.hm2 = objCommon.GetMediumAll();
            ViewBag.hm5 = objCommon.GetMediumAll();
            ViewBag.hm6 = objCommon.GetMediumAll();
            ViewBag.hm7 = objCommon.GetMediumAll();
            ViewBag.hm8 = objCommon.GetMediumAll();

            ViewBag.tm2 = objCommon.GetMediumAll();
            ViewBag.tm5 = objCommon.GetMediumAll();
            ViewBag.tm6 = objCommon.GetMediumAll();
            ViewBag.tm7 = objCommon.GetMediumAll();
            ViewBag.tm8 = objCommon.GetMediumAll();

            ViewBag.vm10 = objCommon.GetMediumAll();
            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();

            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
            List<SelectListItem> reslist = objCommon.GetMatricResult().Where(s => s.Value.ToUpper() == "PASS").ToList();
            ViewBag.MyMatricResult = reslist;

            ViewBag.MyWritter = objCommon.GetWritter();
            ViewBag.Mon = objCommon.GetMonth();
            List<SelectListItem> yearlist = objCommon.GetSessionYear(); // passing Value to DBClass from model   
            yearlist.RemoveRange(3, 45);
            ViewBag.TSYearList = yearlist;
            ViewBag.SessionYearList = objCommon.GetSessionYear();


            RegistrationModels rm = new RegistrationModels();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());

                //int res = 0;
                //objDB.CheckDateE1E2T1T2(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.
                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }

            }

            //-----------------------------------------------------Nsqf -------------------------
            string ses = Session["Session"].ToString();
            string schlcode = Session["SCHL"].ToString();
            DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
            rm.NSQF = dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString();
            if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
            {
                ViewData["NSQFSCHOOL"] = "1";
            }
            else
            {
                ViewData["NSQFSCHOOL"] = "0";
            }
            string nsqfsub = null;
            DataSet nsresult = objDB.SelectS12(nsqfsub); // passing Value to DBClass from model
            ViewBag.nsfq = nsresult.Tables[0];
            List<SelectListItem> nsfqList = new List<SelectListItem>();
            //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
            {
                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
            }
            ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
            ViewBag.nsqfcatg = new SelectList(nsfqList, "Value", "Text");

            //-----------------------------------------------------End Nsqf -------------------------
            DataSet dsCOMM = objDB.SubjectsTweleve_Commerce();
            if (dsCOMM == null || dsCOMM.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.ssub = dsCOMM.Tables[0];
                List<SelectListItem> COMMSub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in dsCOMM.Tables[0].Rows)
                {
                    COMMSub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                ViewBag.coms9List = new SelectList(COMMSub, "Value", "Text");


            }

            DataSet scis = objDB.SubjectsTweleve_SCI();
            if (scis == null || scis.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.ssub = scis.Tables[0];
                List<SelectListItem> scisub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.ssub.Rows)
                {
                    scisub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }

                ViewBag.sss8 = new SelectList(scisub, "Value", "Text");


            }
            DataSet hds = objDB.SubjectsTweleve_hum();
            if (hds == null || hds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.hsub = hds.Tables[0];
                List<SelectListItem> humsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.hsub.Rows)
                {
                    humsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.hs5 = new SelectList(humsub, "Value", "Text");
                ViewBag.hs6 = new SelectList(humsub, "Value", "Text");
                ViewBag.hs7 = new SelectList(humsub, "Value", "Text");
                ViewBag.hs8 = new SelectList(humsub, "Value", "Text");
                ViewBag.vs10 = new SelectList(humsub, "Value", "Text"); //--------humanity Subjects Equals To Vocational Aditional Subjects
            }
            DataSet tecds = objDB.SubjectsTweleve_tech();
            if (tecds == null || tecds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.tsub = tecds.Tables[0];
                List<SelectListItem> tecsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.tsub.Rows)
                {
                    tecsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.ts5 = new SelectList(tecsub, "Value", "Text");
                ViewBag.ts6 = new SelectList(tecsub, "Value", "Text");
                ViewBag.ts7 = new SelectList(tecsub, "Value", "Text");
                ViewBag.ts8 = new SelectList(tecsub, "Value", "Text");

            }



            DataSet agrds = objDB.SubjectsTweleve_agr();
            if (agrds == null || agrds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.agrsub = agrds.Tables[0];
                List<SelectListItem> agrsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.agrsub.Rows)
                {
                    agrsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                List<SelectListItem> agrAdditionAlsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in agrds.Tables[1].Rows)
                {
                    agrAdditionAlsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.as5 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value == "065").ToList();
                ViewBag.as6 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value != "065").ToList();
                ViewBag.as7 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value != "065").ToList();
                ViewBag.as8 = new SelectList(agrAdditionAlsub, "Value", "Text");

            }
            DataSet vocds = objDB.Voc_agr();
            if (vocds == null || vocds.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.vocsub = vocds.Tables[0];
                List<SelectListItem> vsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.vocsub.Rows)
                {
                    vsub.Add(new SelectListItem { Text = @dr["group"].ToString(), Value = @dr["group"].ToString() });
                }

                ViewBag.selgroup = new SelectList(vsub, "Value", "Text");

            }
            DataSet vocsubjects = objDB.SubjectsTweleve_Voc();
            if (vocsubjects == null || vocsubjects.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.vsub = vocsubjects.Tables[0];
                List<SelectListItem> vocsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.vsub.Rows)
                {
                    vocsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.vs5 = ViewBag.vos5 = vocsub;
                ViewBag.vs6 = ViewBag.vos6 = vocsub;
                ViewBag.vs7 = ViewBag.vos7 = vocsub;
                //ViewBag.hs8 = new SelectList(vocsub, "Value", "Text");
                List<SelectListItem> vocAdditionAlsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in vocsubjects.Tables[1].Rows)
                {
                    vocAdditionAlsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                }
                ViewBag.vocAddSubList = new SelectList(vocAdditionAlsub, "Value", "Text");

            }

            DataSet vocTrade = objDB.SubjectsTweleve_Voc_All_Trade();
            if (vocTrade == null || vocTrade.Tables[0].Rows.Count == 0)
            { ViewBag.sub = ""; }
            else
            {
                ViewBag.Tsub = vocTrade.Tables[0];
                List<SelectListItem> vocTsub = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.Tsub.Rows)
                {
                    vocTsub.Add(new SelectListItem { Text = @dr["tname"].ToString(), Value = @dr["tcode"].ToString() });
                }
                ViewBag.trgroup = new SelectList(vocTsub, "Value", "Text");

            }

            ViewBag.MyBoard = objCommon.GetN2Board();
            ViewBag.Mon = objCommon.GetMonth();
            ViewBag.SessionYearList = objCommon.GetSessionYear();
            //@ViewBag.DA = objCommon.GetDA();
            // @ViewBag.groupT = objCommon.getGroupT();

            List<SelectListItem> MyGroupList = objCommon.GroupName();
            DataTable dtAssignSubject = objCommon.GetAssignSubjectBySchool(Session["SCHL"].ToString());
            if (dtAssignSubject != null && dtAssignSubject.Rows.Count > 0)
            {
                ViewBag.MyGroup = objCommon.GetSubjectsBySchool(dtAssignSubject, MyGroupList);
            }
            ViewBag.MyGroup = MyGroupList;


            ViewBag.MyDist = objCommon.GetDistE();
            ViewBag.SectionList = objCommon.GetSection();
            ViewBag.Section = "0";
            string formname = "T2";
            if (id != null)
            {
                id = encrypt.QueryStringModule.Decrypt(id);

                DataSet ds = objDB.SearchStudentGetByData_Subject(id, formname);
                if (ds == null || ds.Tables[0].Rows.Count == 0)
                {
                    return RedirectToAction("T2Formgrid", "RegistrationPortal");
                }
                if (ds.Tables[0].Rows.Count > 0)
                {
                    rm.old_std_Photo = ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                    rm.old_std_sign = ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                    rm.IsSmartPhone = ds.Tables[0].Rows[0]["IsSmartPhone"].ToString();
                    rm.NSQFPattern = ds.Tables[0].Rows[0]["NSQFPattern"].ToString();
                    rm.IsUnlockForm = ds.Tables[0].Rows[0]["IsUnlockForm"].ToString();
                    rm.IsNRICandidate = ds.Tables[0].Rows[0]["IsNRICandidate"] == null ? false : ds.Tables[0].Rows[0]["IsNRICandidate"].ToString() == "0" ? false : ds.Tables[0].Rows[0]["IsNRICandidate"].ToString().ToLower() == "false" ? false : true;
                    // DataSet ds = objDB.SearchStudentGetByData(id);
                    rm.Std_id = Convert.ToInt32(ds.Tables[0].Rows[0]["Std_id"].ToString());
                    rm.SCHL = ds.Tables[0].Rows[0]["SCHL"].ToString();
                    //rm.IDNO = ds.Tables[0].Rows[0]["IDNO"].ToString();
                    rm.Category = ds.Tables[0].Rows[0]["Category"].ToString();
                    ViewBag.catg = objCommon.GetE2Category();

                    rm.Board = ds.Tables[0].Rows[0]["Board"].ToString();
                    ViewBag.MyBoard = objCommon.GetN2Board();

                    rm.Other_Board = ds.Tables[0].Rows[0]["Other_Board"].ToString();

                    rm.Board_Roll_Num = ds.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                    rm.Prev_School_Name = ds.Tables[0].Rows[0]["Prev_School_Name"].ToString();

                    rm.Month = ds.Tables[0].Rows[0]["Month"].ToString();
                    ViewBag.Mon = objCommon.GetMonth();

                    rm.Year = ds.Tables[0].Rows[0]["Year"].ToString();
                    // AbstractLayer.DBClass objDBC = new AbstractLayer.DBClass();
                    ViewBag.SessionYearList = objCommon.GetSessionYear();

                    //rm.MyGroup = ds.Tables[0].Rows[0]["Group_name"].ToString().Trim();
                    //ViewBag.MyGroup1 = objCommon.GroupName();

                    rm.Tgroup = ds.Tables[0].Rows[0]["Group_Name"].ToString().Trim();
                    //ViewBag.MyGroup = objCommon.GroupName();
                    //----------------Subject voc Group-----------
                    if (rm.Tgroup == "VOCATIONAL")
                    {
                        DataSet gp = objDB.selectGP(rm.Std_id);
                        rm.groupsel = gp.Tables[0].Rows[0]["Group"].ToString().Trim();
                        string gsel = gp.Tables[0].Rows[0]["Group"].ToString().Trim();
                        rm.grouptr = gp.Tables[0].Rows[0]["TCODE"].ToString().Trim();
                        DataSet vocTRgroup = objDB.Voc_Trgroup(gsel);
                        if (vocds == null || vocds.Tables[0].Rows.Count == 0)
                        { ViewBag.sub = ""; }
                        else
                        {
                            ViewBag.vocTR = vocTRgroup.Tables[0];
                            List<SelectListItem> vtrsub = new List<SelectListItem>();
                            foreach (System.Data.DataRow dr in ViewBag.vocTR.Rows)
                            {
                                vtrsub.Add(new SelectListItem { Text = @dr["TNAME"].ToString(), Value = @dr["TCODE"].ToString() });
                            }

                            ViewBag.trgroup = new SelectList(vtrsub, "Value", "Text");

                        }
                    }
                    //-----------------End---------------

                    rm.AWRegisterNo = ds.Tables[0].Rows[0]["AWRegisterNo"].ToString();
                    rm.Admission_Num = ds.Tables[0].Rows[0]["Admission_Num"].ToString();
                    rm.Admission_Date = ds.Tables[0].Rows[0]["Admission_Date"].ToString();
                    rm.Class_Roll_Num_Section = ds.Tables[0].Rows[0]["Class_Roll_Num_Section"].ToString();
                    rm.Candi_Name = ds.Tables[0].Rows[0]["Candi_Name"].ToString();
                    rm.Candi_Name_P = ds.Tables[0].Rows[0]["Candi_Name_P"].ToString();
                    rm.Father_Name = ds.Tables[0].Rows[0]["Father_Name"].ToString();
                    rm.Father_Name_P = ds.Tables[0].Rows[0]["Father_Name_P"].ToString();
                    rm.Mother_Name = ds.Tables[0].Rows[0]["Mother_Name"].ToString();
                    rm.Mother_Name_P = ds.Tables[0].Rows[0]["Mother_Name_P"].ToString();

                    rm.Caste = ds.Tables[0].Rows[0]["Caste"].ToString();
                    //ViewBag.Caste = objCommon.GetCaste();
                    @ViewBag.MyCastList = objCommon.GetCaste();

                    rm.Gender = ds.Tables[0].Rows[0]["Gender"].ToString();


                    //rm.Differently_Abled = ds.Tables[0].Rows[0]["Differently_Abled"].ToString();
                    rm.DA = rm.Differently_Abled = ds.Tables[0].Rows[0]["Differently_Abled"].ToString();
                    ViewBag.DAb = objCommon.GetDA();

                    rm.scribeWriter = ds.Tables[0].Rows[0]["wantwriter"].ToString();

                    rm.Religion = ds.Tables[0].Rows[0]["Religion"].ToString();
                    ViewBag.RE = objCommon.GetReligion();

                    rm.DOB = ds.Tables[0].Rows[0]["DOB"].ToString();
                    rm.Mobile = ds.Tables[0].Rows[0]["Mobile"].ToString();
                    rm.Father_MobNo = ds.Tables[0].Rows[0]["F_MobNo"].ToString();
                    rm.Father_Occup = ds.Tables[0].Rows[0]["F_Occup"].ToString();
                    rm.Mother_MobNo = ds.Tables[0].Rows[0]["M_MobNo"].ToString();
                    rm.Mother_Occup = ds.Tables[0].Rows[0]["M_Occup"].ToString();
                    rm.Belongs_BPL = ds.Tables[0].Rows[0]["Belongs_BPL"].ToString();
                    rm.E_punjab_Std_id = ds.Tables[0].Rows[0]["E_punjab_Std_id"].ToString();
                    if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 28)
                    {
                        rm.AadharEnroll = "Enrollmemt";
                    }
                    else if (ds.Tables[0].Rows[0]["Aadhar_num"].ToString().Length == 12)
                    {
                        rm.AadharEnroll = "Aadhar";
                    }
                    else
                    {
                        rm.AadharEnroll = "N.A.";
                    }
                    rm.Aadhar_num = ds.Tables[0].Rows[0]["Aadhar_num"].ToString();
                    rm.Address = ds.Tables[0].Rows[0]["Address"].ToString();
                    rm.LandMark = ds.Tables[0].Rows[0]["LandMark"].ToString();
                    rm.Block = ds.Tables[0].Rows[0]["Block"].ToString();
                    string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();


                    rm.MyDistrict = ds.Tables[0].Rows[0]["District"].ToString();
                    //rm.District = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString());
                    ViewBag.MyDist = objCommon.GetDistE();

                    rm.Tehsil = Convert.ToInt32(ds.Tables[0].Rows[0]["Tehsil"].ToString());

                    int dist = Convert.ToInt32(ds.Tables[0].Rows[0]["District"].ToString());
                    DataSet result1 = objDB.SelectAllTehsil(dist);
                    ViewBag.MyTeh = result1.Tables[0];
                    List<SelectListItem> TehList = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.MyTeh.Rows)
                    {

                        TehList.Add(new SelectListItem { Text = @dr["TEHSIL"].ToString(), Value = @dr["TCODE"].ToString() });

                    }
                    ViewBag.MyTeh = TehList;

                    rm.PinCode = ds.Tables[0].Rows[0]["PinCode"].ToString();
                    int IsPrevSchoolSelf = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPrevSchoolSelf"].ToString());
                    if (IsPrevSchoolSelf == 1)
                    {
                        rm.IsPrevSchoolSelf = true;
                    }
                    else
                    {
                        rm.IsPrevSchoolSelf = false;
                    }
                    int IsPSEBRegNum = Convert.ToInt32(ds.Tables[0].Rows[0]["IsPSEBRegNum"].ToString() == "" ? "0" : ds.Tables[0].Rows[0]["IsPSEBRegNum"].ToString());

                    if (IsPSEBRegNum == 1)
                    {
                        rm.IsPSEBRegNum = true;
                        rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                    }
                    else
                    {
                        rm.IsPSEBRegNum = false;
                        rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                    }
                    rm.CandiMedium = ds.Tables[0].Rows[0]["CandStudyMedium"].ToString();
                    rm.MetricBoard = ds.Tables[0].Rows[0]["MatricBoard"].ToString();
                    rm.MatricResult = ds.Tables[0].Rows[0]["MatricResult"].ToString();
                    rm.DP = ds.Tables[0].Rows[0]["DisabilityPercent"].ToString();
                    rm.PreNSQF = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();

                    ViewBag.PreNSQF = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();
                    ViewBag.NsqfsubS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();

                    rm.PreNSQFsci = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();
                    rm.NsqfsubS6sci = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                    rm.PreNSQFcomm = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();
                    rm.NsqfsubS6comm = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                    rm.PreNSQFvoc = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();
                    rm.NsqfsubS6voc = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                    //-----------------------------For NSQF SUBJECTS----------------
                    string sid = id;
                    DataSet isCHkNSQF = objDB.CHkNSQFStudents(sid);
                    rm.NSQF = isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString();
                    if (isCHkNSQF.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True")
                    {
                        ViewData["NSQFSTUDENT"] = "1";
                        if (rm.NsqfsubS6 == null)
                        {
                            rm.NsqfsubS6 = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                        }
                        DataSet nsTextresult = objDB.GetNSQFVIEWSUBJECT11TH(rm.NsqfsubS6, rm.PreNSQF);
                        List<SelectListItem> nssub6 = new List<SelectListItem>();
                        if (nsTextresult.Tables[0].Rows.Count > 0)
                        {
                            nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            nssub6.Add(new SelectListItem { Text = nsTextresult.Tables[0].Rows[0]["Name_ENG"].ToString(), Value = rm.NsqfsubS6 });
                            ViewBag.nsqfcatg = nssub6;
                        }
                        else
                        {

                            nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            ViewBag.nsqfcatg = nssub6;
                        }

                    }
                    else
                    {
                        List<SelectListItem> nssub6 = new List<SelectListItem>();
                        nssub6.Add(new SelectListItem { Text = "NO", Value = "NO" });
                        ViewBag.nsqfcatg = nssub6;
                    }


                    //--------------------------------End NSQF SUBJECTS-------------


                    if (ds.Tables[1].Rows.Count > 0)
                    {
                        for (int i = 0; i < ds.Tables[1].Rows.Count; i++)
                        {
                            if (ds.Tables[0].Rows[0]["Group_Name"].ToString() == "SCIENCE")
                            {
                                if (i == 0)
                                {
                                    rm.coms1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                    rm.comm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.coms2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                    //rm.comm2 = ds.Tables[1].Rows[1]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.coms2);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.comm2 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[1]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 2)
                                {
                                    rm.coms3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                    //rm.comm3 = ds.Tables[1].Rows[2]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.coms3);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.comm3 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[2]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;

                                }
                                else if (i == 3)
                                {

                                    rm.coms4sci = ds.Tables[1].Rows[3]["SUB"].ToString();
                                    ViewBag.comm4NM = ds.Tables[1].Rows[3]["SUBNM"].ToString();

                                    //rm.comm4 = ds.Tables[1].Rows[3]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.coms4sci);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.comm4 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[3]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                //else if (i == 4)
                                //{
                                //    rm.ssWEL = ds.Tables[1].Rows[i]["SUB"].ToString();
                                //    rm.smWEL = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                //}

                                else if (i == 4)
                                {
                                    rm.ss5 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.sm5 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 5)
                                {
                                    rm.ss6 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.sm6 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 6)
                                {
                                    rm.ss7 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.sm7 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 7)
                                {
                                    rm.ss8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.sm8 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }

                                //else if (i == 8)
                                //{
                                //    rm.s9 = ds.Tables[1].Rows[8]["SUB"].ToString();
                                //    DataSet SelectedMediumList = objDB.SelectS1(rm.s9);
                                //    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                //    rm.m9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[8]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                //    ViewBag.SubS9m = iMEdiumList;
                                //}

                            }
                            if (ds.Tables[0].Rows[0]["Group_Name"].ToString() == "COMMERCE")
                            {
                                if (i == 0)
                                {
                                    rm.coms1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                    rm.comcm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.comcs2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                    //rm.comcm2 = ds.Tables[1].Rows[1]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.comcs2);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.comcm2 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[1]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 2)
                                {
                                    rm.coms3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                    rm.comcm3 = ds.Tables[1].Rows[2]["MEDIUM"].ToString();
                                }
                                else if (i == 3)
                                {
                                    rm.coms4comm = ds.Tables[1].Rows[3]["SUB"].ToString();
                                    ViewBag.comm4NM = ds.Tables[1].Rows[3]["SUBNM"].ToString();
                                    rm.comcm4 = ds.Tables[1].Rows[3]["MEDIUM"].ToString();
                                }
                                else if (i == 4)
                                {
                                    rm.coms5 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.comm5 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                    //rm.ssWEL = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.smWEL = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 5)
                                {
                                    rm.coms6 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.comm6 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                //else if (i == 6)
                                //{
                                //    //rm.coms8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                //    //rm.comm8= ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                //}
                                else if (i == 6)
                                {
                                    rm.coms8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.comm8 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                //else if (i == 7)
                                //{
                                //    //rm.s9 = ds.Tables[1].Rows[8]["SUB"].ToString();
                                //    //DataSet SelectedMediumList = objDB.SelectS1(rm.s9);
                                //    //List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                //    //rm.m9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[8]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                //    //ViewBag.SubS9m = iMEdiumList;
                                //}
                                else if (i == 7)
                                {
                                    rm.coms9 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.comm9 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                //else if (i == 8)
                                //{
                                //    //rm.s9 = ds.Tables[1].Rows[8]["SUB"].ToString();
                                //    //DataSet SelectedMediumList = objDB.SelectS1(rm.s9);
                                //    //List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                //    //rm.m9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[8]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                //    //ViewBag.SubS9m = iMEdiumList;
                                //}

                            }
                            if (ds.Tables[0].Rows[0]["Group_Name"].ToString() == "HUMANITIES")
                            {
                                if (i == 0)
                                {
                                    rm.hums1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                    rm.humm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.hums2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                    //rm.humm2 = ds.Tables[1].Rows[1]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.hums2);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.humm2 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[1]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 2)
                                {
                                    rm.hums3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                    rm.humm3 = ds.Tables[1].Rows[2]["MEDIUM"].ToString();
                                }
                                else if (i == 3)
                                {
                                    rm.hums4 = ds.Tables[1].Rows[3]["SUB"].ToString();
                                    rm.humm4 = ds.Tables[1].Rows[3]["MEDIUM"].ToString();
                                }
                                //else if (i == 4)
                                //{
                                //    //rm.ssWEL = ds.Tables[1].Rows[i]["SUB"].ToString();
                                //    //rm.smWEL = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                //}
                                else if (i == 4)
                                {
                                    rm.hums5 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.hums5);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.humm5 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 5)
                                {
                                    rm.hums6 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    // rm.humm6 = ds.Tables[1].Rows[5]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.hums6);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.humm6 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;

                                }
                                else if (i == 6)
                                {
                                    rm.hums7 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.humm7 = ds.Tables[1].Rows[6]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.hums7);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.humm7 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 7)
                                {
                                    rm.hums8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.humm8 = ds.Tables[1].Rows[7]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.hums8);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.humm8 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }


                            }
                            if (ds.Tables[0].Rows[0]["Group_Name"].ToString() == "TECHNICAL")
                            {
                                if (i == 0)
                                {
                                    rm.tecs1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                    rm.tecm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.tecs2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                    //rm.tecm2 = ds.Tables[1].Rows[1]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.tecs2);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.tecm2 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[1]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 2)
                                {
                                    rm.tecs3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                    rm.tecm3 = ds.Tables[1].Rows[2]["MEDIUM"].ToString();
                                }
                                else if (i == 3)
                                {
                                    rm.tecs4 = ds.Tables[1].Rows[3]["SUB"].ToString();
                                    rm.tecm4 = ds.Tables[1].Rows[3]["MEDIUM"].ToString();
                                }
                                //else if (i == 4)
                                //{
                                //    //rm.ssWEL = ds.Tables[1].Rows[i]["SUB"].ToString();
                                //    //rm.smWEL = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                //}
                                else if (i == 4)
                                {
                                    rm.tecs5 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.tecm5 = ds.Tables[1].Rows[4]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.tecs5);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.tecm5 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 5)
                                {
                                    rm.tecs6 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.tecm6 = ds.Tables[1].Rows[5]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.tecs6);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.tecm6 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 6)
                                {
                                    rm.tecs7 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.tecm7 = ds.Tables[1].Rows[6]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.tecs7);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.tecm7 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 7)
                                {
                                    rm.tecs8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.tecm8 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.tecs8);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.tecm8 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }


                            }
                            if (ds.Tables[0].Rows[0]["Group_Name"].ToString() == "AGRICULTURE")
                            {
                                if (i == 0)
                                {
                                    rm.agrs1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                    rm.agrm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.agrs2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                    //rm.agrm2 = ds.Tables[1].Rows[1]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.agrs2);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.agrm2 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[1]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 2)
                                {
                                    rm.agrs3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                    rm.agrm3 = ds.Tables[1].Rows[2]["MEDIUM"].ToString();
                                }
                                else if (i == 3)
                                {
                                    rm.agrs4 = ds.Tables[1].Rows[3]["SUB"].ToString();
                                    rm.agrm4 = ds.Tables[1].Rows[3]["MEDIUM"].ToString();
                                }
                                //else if (i == 4)
                                //{
                                //    //rm.ssWEL = ds.Tables[1].Rows[i]["SUB"].ToString();
                                //    //rm.smWEL = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                //}
                                else if (i == 4)
                                {
                                    rm.agrs5 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.agrm5 = ds.Tables[1].Rows[4]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.agrs5);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.agrm5 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 5)
                                {
                                    rm.agrs6 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.agrm6 = ds.Tables[1].Rows[5]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.agrs6);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.agrm6 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 6)
                                {
                                    rm.agrs7 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.agrm7 = ds.Tables[1].Rows[6]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.agrs7);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.agrm7 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }
                                else if (i == 7)
                                {
                                    rm.agrs8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    //rm.agrm8 = ds.Tables[1].Rows[7]["MEDIUM"].ToString();
                                    DataSet SelectedMediumList = objDB.SelectTwelveMedium(rm.agrs8);
                                    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                    rm.agrm8 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[i]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                    ViewBag.Commonmedium = iMEdiumList;
                                }

                                //else if (i == 8)
                                //{
                                //    rm.s9 = ds.Tables[1].Rows[8]["SUB"].ToString();
                                //    DataSet SelectedMediumList = objDB.SelectS1(rm.s9);
                                //    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                //    rm.m9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[8]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                //    ViewBag.SubS9m = iMEdiumList;
                                //}

                            }
                            if (ds.Tables[0].Rows[0]["Group_Name"].ToString() == "VOCATIONAL")
                            {
                                if (i == 0)
                                {
                                    rm.vocs1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                    rm.vocm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.vocs2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                    rm.vocm2 = ds.Tables[1].Rows[1]["MEDIUM"].ToString();
                                }
                                else if (i == 2)
                                {
                                    rm.vocs3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                    rm.vocm3 = ds.Tables[1].Rows[2]["MEDIUM"].ToString();
                                }
                                else if (i == 3)
                                {
                                    rm.vocs4 = ds.Tables[1].Rows[3]["SUB"].ToString();
                                    ViewBag.vocs4 = ds.Tables[1].Rows[3]["SUBNM"].ToString();
                                    rm.vocm4 = ds.Tables[1].Rows[3]["MEDIUM"].ToString();
                                }
                                //else if (i == 4)
                                //{
                                //    //rm.ssWEL = ds.Tables[1].Rows[i]["SUB"].ToString();
                                //    //rm.smWEL = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                //}
                                else if (i == 4)
                                {
                                    rm.vocs5 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.vocm5 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                    List<SelectListItem> vos5 = (List<SelectListItem>)ViewBag.vos5;
                                    var VS1 = vos5.ToList().Where(s => s.Value == rm.vocs5).Select(s => s);
                                    ViewBag.vos5 = VS1.ToList();
                                }
                                else if (i == 5)
                                {
                                    rm.vocs6 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.vocm6 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();

                                    List<SelectListItem> vos6 = (List<SelectListItem>)ViewBag.vos6;
                                    var VS2 = vos6.ToList().Where(s => s.Value == rm.vocs6).Select(s => s);
                                    ViewBag.vos6 = VS2.ToList();
                                }
                                else if (i == 6)
                                {
                                    rm.vocs7 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.vocm7 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();

                                    //List<SelectListItem> vos7 = (List<SelectListItem>)ViewBag.vos7;
                                    //var VS3 = vos7.ToList().Where(s => s.Value == rm.vocs7).Select(s => s);
                                    //ViewBag.vos7 = VS3.ToList();
                                }
                                else if (i == 7)
                                {
                                    rm.vocs8 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.vocm8 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 8)
                                {
                                    rm.vocs9 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.vocm9 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }
                                else if (i == 9)
                                {
                                    rm.vocs10 = ds.Tables[1].Rows[i]["SUB"].ToString();
                                    rm.vocm10 = ds.Tables[1].Rows[i]["MEDIUM"].ToString();
                                }

                                //else if (i == 8)
                                //{
                                //    rm.s9 = ds.Tables[1].Rows[8]["SUB"].ToString();
                                //    DataSet SelectedMediumList = objDB.SelectS1(rm.s9);
                                //    List<SelectListItem> iMEdiumList = objDB.GetMatricMediumList(SelectedMediumList);
                                //    rm.m9 = iMEdiumList.Where(s => s.Text == ds.Tables[1].Rows[8]["MEDIUM"].ToString()).Select(s => s.Value).FirstOrDefault();
                                //    ViewBag.SubS9m = iMEdiumList;
                                //}

                            }
                        }
                    }

                    int IsPro = Convert.ToInt32(ds.Tables[0].Rows[0]["Provisional"].ToString());
                    if (IsPro == 1)
                    {
                        rm.Provisional = true;
                    }
                    else
                    {
                        rm.Provisional = false;
                    }
                    rm.MetricYear = ds.Tables[0].Rows[0]["MetricYear"].ToString();
                    rm.MetricMonth = ds.Tables[0].Rows[0]["MetricMonth"].ToString();
                    rm.Metric_Roll_Num = ds.Tables[0].Rows[0]["MetricRollNum"].ToString();
                    rm.MetricBoard = ds.Tables[0].Rows[0]["MatricBoard"].ToString();
                    //--------------------------End Subject Details--------------
                    // rm.fname= ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    // @ViewBag.ImageURL = "../../StdImages/Upload/" + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    @ViewBag.Photo = ds.Tables[0].Rows[0]["std_Photo"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    @ViewBag.sign = ds.Tables[0].Rows[0]["std_Sign"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();

                    rm.ProofCertificate = ds.Tables[0].Rows[0]["ProofCertificate"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["ProofCertificate"].ToString();
                    rm.ProofNRICandidates = ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString();

                    //  rm.std_Sign = "";
                    ViewBag.section = rm.Section = Convert.ToChar(ds.Tables[0].Rows[0]["Section"].ToString() == "" ? "0" : ds.Tables[0].Rows[0]["Section"].ToString());
                    ViewBag.SectionList = objCommon.GetSection();

                    if (!string.IsNullOrEmpty(rm.Year))
                    {
                        if (rm.Board.Contains("P.S.E.B"))
                        {
                            List<SelectListItem> yearlist1 = objCommon.GetSessionYear();
                            yearlist1.RemoveAll(c => Convert.ToInt32(c.Value) > Convert.ToInt32(2019));
                            ViewBag.TSYearList = yearlist1;
                        }
                    }
                }
                else
                {
                    return RedirectToAction("T2Formgrid", "RegistrationPortal");
                }

            }


            return View(rm);
        }
        //--------------------------Modify------------------

        [SessionCheckFilter]
        [HttpPost]
        public ActionResult T2FormModify(RegistrationModels rm, FormCollection frm, string PreNSQF, string NSQFsubS6, string NsqfPattern, string subS6)
        {
            try
            {


                ViewBag.YesNoListText = new AbstractLayer.DBClass().GetYesNoText().ToList();
                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                List<SelectListItem> SubWEL = new List<SelectListItem>();
                SubWEL.Add(new SelectListItem { Text = "WELCOME LIFE", Value = "210" });
                ViewBag.SubWEL = new SelectList(SubWEL, "Value", "Text");

                string schlDist = null;
                ViewBag.SessionYearList = objCommon.GetSessionYear();

                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                DataSet result1 = objDB.SelectDist(); // passing Value to DBClass from model
                ViewBag.MyDist = result1.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
                List<SelectListItem> items = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in ViewBag.MyDist.Rows)
                {
                    items.Add(new SelectListItem { Text = @dr["DISTNM"].ToString(), Value = @dr["DIST"].ToString() });
                }
                ViewBag.MyDist = items;
                ViewBag.MyTeh = objCommon.GetAllTehsil();
                ViewBag.MyBoard = objCommon.GetN2Board();
                ViewBag.SectionList = objCommon.GetSection();
                ViewBag.MyGroup = objCommon.GroupName();
                ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
                List<SelectListItem> reslist = objCommon.GetMatricResult().Where(s => s.Value.ToUpper() == "PASS").ToList();
                ////reslist.RemoveRange(2, 12);
                ViewBag.MyMatricResult = reslist;

                ViewBag.MyWritter = objCommon.GetWritter();
                //int res = 0;
                //objDB.CheckDateE1E2T1T2(Session["SCHL"].ToString(), out res);
                //ViewBag.dsts = res;.


                //-----------------------------------------------------Nsqf -------------------------
                string ses = Session["Session"].ToString();
                string schlcode = Session["SCHL"].ToString();
                DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                {
                    ViewData["NSQFSCHOOL"] = "1";
                }
                else
                {
                    ViewData["NSQFSCHOOL"] = "0";
                }
                string nsqfsub = null;
                DataSet nsresult = objDB.SelectS12(nsqfsub); // passing Value to DBClass from model
                ViewBag.nsfq = nsresult.Tables[0];
                List<SelectListItem> nsfqList = new List<SelectListItem>();
                //nsfqList.Add(new SelectListItem { Text = "NSFQ Subjects", Value = "0" });
                nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                {
                    nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["SUB"].ToString() });
                }
                ViewBag.nsfqList = new SelectList(nsfqList, "Value", "Text");
                ViewBag.nsqfcatg = new SelectList(nsfqList, "Value", "Text");

                //-----------------------------------------------------End Nsqf -------------------------
                DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
                if (schlDistds.Tables[0].Rows.Count > 0)
                {
                    schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
                }

                string admdate = "", LateAdmDate = "", StartAdmDate = "";
                objDB.CheckReg_AdmDate_and_LateAdmDate(Session["SCHL"].ToString(), "", out admdate, out LateAdmDate, out StartAdmDate);
                ViewBag.admdate = admdate; ViewBag.LateAdmDate = LateAdmDate; ViewBag.StartAdmDate = StartAdmDate;
                @ViewBag.MyCastList = objCommon.GetCaste();
                @ViewBag.DAb = objCommon.GetDA();
                List<SelectListItem> yearlist = objCommon.GetSessionYear(); // passing Value to DBClass from model   
                yearlist.RemoveRange(3, 45);
                ViewBag.TSYearList = yearlist;
                ViewBag.SessionYearList = objCommon.GetSessionYear();

                string session = null;
                string idno = null;
                string schl = null;
                if (Session["Session"] != null)
                {
                    session = Session["Session"].ToString();
                    idno = Session["IDNO"].ToString();
                    schl = Session["SCHL"].ToString();
                }
                else
                {
                    return RedirectToAction("Index", "Login");
                }
                //--------------------Start
                ViewBag.vm5 = objCommon.GetGroupMedium();
                ViewBag.vm6 = objCommon.GetGroupMedium();
                ViewBag.vm7 = objCommon.GetGroupMedium();
                ViewBag.sm2 = objCommon.GetGroupMedium();
                ViewBag.sm3 = objCommon.GetGroupMedium();
                ViewBag.sm4 = objCommon.GetGroupMedium();
                ViewBag.Commonmedium = objCommon.GetGroupMedium();
                ViewBag.ccom2 = objCommon.GetGroupMedium();

                ViewBag.hm2 = objCommon.GetMediumAll();
                ViewBag.hm5 = objCommon.GetMediumAll();
                ViewBag.hm6 = objCommon.GetMediumAll();
                ViewBag.hm7 = objCommon.GetMediumAll();
                ViewBag.hm8 = objCommon.GetMediumAll();

                ViewBag.tm2 = objCommon.GetMediumAll();
                ViewBag.tm5 = objCommon.GetMediumAll();
                ViewBag.tm6 = objCommon.GetMediumAll();
                ViewBag.tm7 = objCommon.GetMediumAll();
                ViewBag.tm8 = objCommon.GetMediumAll();

                ViewBag.vm10 = objCommon.GetMediumAll();

                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());
                    if (status > 0)
                    {
                        if (status == 0)
                        { return RedirectToAction("Index", "Home"); }
                    }
                    else
                    {
                        return RedirectToAction("Index", "Home");
                    }

                }

                DataSet dsCOMM = objDB.SubjectsTweleve_Commerce();
                if (dsCOMM == null || dsCOMM.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.ssub = dsCOMM.Tables[0];
                    List<SelectListItem> COMMSub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in dsCOMM.Tables[0].Rows)
                    {
                        COMMSub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }

                    ViewBag.coms9List = new SelectList(COMMSub, "Value", "Text");


                }

                DataSet scis = objDB.SubjectsTweleve_SCI();
                if (scis == null || scis.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.ssub = scis.Tables[0];
                    List<SelectListItem> scisub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.ssub.Rows)
                    {
                        scisub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }

                    ViewBag.sss8 = new SelectList(scisub, "Value", "Text");


                }
                DataSet hds = objDB.SubjectsTweleve_hum();
                if (hds == null || hds.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.hsub = hds.Tables[0];
                    List<SelectListItem> humsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.hsub.Rows)
                    {
                        humsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    ViewBag.hs5 = new SelectList(humsub, "Value", "Text");
                    ViewBag.hs6 = new SelectList(humsub, "Value", "Text");
                    ViewBag.hs7 = new SelectList(humsub, "Value", "Text");
                    ViewBag.hs8 = new SelectList(humsub, "Value", "Text");
                    ViewBag.vs10 = new SelectList(humsub, "Value", "Text"); //--------humanity Subjects Equals To Vocational Aditional Subjects
                }
                DataSet tecds = objDB.SubjectsTweleve_tech();
                if (tecds == null || tecds.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.tsub = tecds.Tables[0];
                    List<SelectListItem> tecsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.tsub.Rows)
                    {
                        tecsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    ViewBag.ts5 = new SelectList(tecsub, "Value", "Text");
                    ViewBag.ts6 = new SelectList(tecsub, "Value", "Text");
                    ViewBag.ts7 = new SelectList(tecsub, "Value", "Text");
                    ViewBag.ts8 = new SelectList(tecsub, "Value", "Text");

                }
                DataSet agrds = objDB.SubjectsTweleve_agr();
                if (agrds == null || agrds.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.agrsub = agrds.Tables[0];
                    List<SelectListItem> agrsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.agrsub.Rows)
                    {
                        agrsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    List<SelectListItem> agrAdditionAlsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in agrds.Tables[1].Rows)
                    {
                        agrAdditionAlsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    ViewBag.as5 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value == "065").ToList();
                    ViewBag.as6 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value != "065").ToList();
                    ViewBag.as7 = new SelectList(agrsub, "Value", "Text").Where(s => s.Value != "065").ToList();
                    ViewBag.as8 = new SelectList(agrAdditionAlsub, "Value", "Text");

                }
                DataSet vocds = objDB.Voc_agr();
                if (vocds == null || vocds.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.vocsub = vocds.Tables[0];
                    List<SelectListItem> vsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.vocsub.Rows)
                    {
                        vsub.Add(new SelectListItem { Text = @dr["group"].ToString(), Value = @dr["group"].ToString() });
                    }

                    ViewBag.selgroup = new SelectList(vsub, "Value", "Text");

                }
                DataSet vocTrade = objDB.SubjectsTweleve_Voc_All_Trade();
                if (vocTrade == null || vocTrade.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.Tsub = vocTrade.Tables[0];
                    List<SelectListItem> vocTsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.Tsub.Rows)
                    {
                        vocTsub.Add(new SelectListItem { Text = @dr["tname"].ToString(), Value = @dr["tcode"].ToString() });
                    }
                    ViewBag.trgroup = new SelectList(vocTsub, "Value", "Text");

                }
                DataSet vocsubjects = objDB.SubjectsTweleve_Voc();
                if (vocsubjects == null || vocsubjects.Tables[0].Rows.Count == 0)
                { ViewBag.sub = ""; }
                else
                {
                    ViewBag.vsub = vocsubjects.Tables[0];
                    List<SelectListItem> vocsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in ViewBag.vsub.Rows)
                    {
                        vocsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    ViewBag.vs5 = ViewBag.vos5 = vocsub;
                    ViewBag.vs6 = ViewBag.vos6 = vocsub;
                    ViewBag.vs7 = ViewBag.vos7 = vocsub;

                    List<SelectListItem> vocAdditionAlsub = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in vocsubjects.Tables[1].Rows)
                    {
                        vocAdditionAlsub.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                    }
                    ViewBag.vocAddSubList = new SelectList(vocAdditionAlsub, "Value", "Text");

                }


                ViewBag.MyBoard = objCommon.GetN2Board();
                ViewBag.Mon = objCommon.GetMonth();
                ViewBag.SessionYearList = objCommon.GetSessionYear();

                List<SelectListItem> MyGroupList = objCommon.GroupName();
                DataTable dtAssignSubject = objCommon.GetAssignSubjectBySchool(Session["SCHL"].ToString());
                if (dtAssignSubject != null && dtAssignSubject.Rows.Count > 0)
                {
                    ViewBag.MyGroup = objCommon.GetSubjectsBySchool(dtAssignSubject, MyGroupList);
                }
                ViewBag.MyGroup = MyGroupList;

                ViewBag.MyDist = objCommon.GetDistE();
                ViewBag.SectionList = objCommon.GetSection();
                ViewBag.Section = "0";

                //-------------------End----
                //Check server side validation using data annotation
                if (ModelState.IsValid)
                {
                    // AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                    string id = frm["Std_id"].ToString();
                    string formname = "T2";
                    DataSet ds = objDB.SearchStudentGetByData_Subject(id, formname);
                    string distOld = "";
                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        //DataSet ds = objDB.SearchStudentGetByData(id);
                        distOld = ds.Tables[0].Rows[0]["District"].ToString();
                        rm.MyDistrict = distOld;
                    }
                    else
                    {
                        distOld = rm.MyDistrict;
                    }
                    //string stdPic = null;
                    string formName = "T2";
                    //if (frm["file"].ToString() != "")
                    if (rm.file != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdPic = Path.GetFileName(rm.file.FileName);

                    }
                    else
                    {

                        stdPic = ds.Tables[0].Rows[0]["std_Photo"].ToString();
                    }
                    if (rm.std_Sign != null)
                    {
                        //stdPic = Path.GetFileName(frm["file"]);
                        stdSign = Path.GetFileName(rm.std_Sign.FileName);

                    }
                    else
                    {

                        stdSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
                    }



                    if (rm.DocProofCertificate != null)
                    {
                        rm.ProofCertificate = Path.GetFileName(rm.DocProofCertificate.FileName);
                    }
                    else
                    {

                        rm.ProofCertificate = ds.Tables[0].Rows[0]["ProofCertificate"].ToString();
                    }


                    if (rm.DocProofNRICandidates != null)
                    {
                        rm.ProofNRICandidates = Path.GetFileName(rm.DocProofNRICandidates.FileName);
                    }
                    else
                    {

                        rm.ProofNRICandidates = ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString();
                    }

                    //var stdPic = Path.GetFileName(rm.file.FileName);
                    //var stdSign = Path.GetFileName(rm.std_Sign.FileName);
                    // Start Subject Master
                    DataTable dtMatricSubject = new DataTable();
                    dtMatricSubject.Columns.Add(new DataColumn("CLASS", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUB", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBNM", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBABBR", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("MEDIUM", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUBCAT", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("SUB_SEQ", typeof(int)));

                    dtMatricSubject.Columns.Add(new DataColumn("GROUP", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("TCODE", typeof(string)));
                    dtMatricSubject.Columns.Add(new DataColumn("TNAME", typeof(string)));

                    DataRow dr = null;
                    for (int i = 1; i <= 11; i++)
                    {
                        dr = dtMatricSubject.NewRow();
                        dr["CLASS"] = 4;
                        DataSet dsSub = new DataSet();
                        dr["SUBNM"] = "";
                        dr["SUBABBR"] = "";
                        //---------------------------------Science----------------------//
                        if (rm.Tgroup == "SCIENCE")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.coms1; dr["MEDIUM"] = rm.comm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.comm2 != null)
                                {
                                    dr["MEDIUM"] = rm.comm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.coms2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.coms3; dr["MEDIUM"] = rm.comm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.coms3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.coms4sci; dr["MEDIUM"] = rm.comm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.coms4sci != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms4sci.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                            else if (i == 5)
                            {
                                dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ssWEL != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }



                            else if (i == 6)
                            {
                                dr["SUB"] = rm.ss5; dr["MEDIUM"] = rm.sm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ss5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.ss6; dr["MEDIUM"] = rm.sm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ss6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.ss7; dr["MEDIUM"] = rm.sm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ss7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 9)
                            {
                                dr["SUB"] = rm.ss8; dr["MEDIUM"] = rm.sm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.ss8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ss8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }


                        }
                        //---------------------------------End Science----------------------//
                        //-----------------------------------Commerce------------
                        if (rm.Tgroup == "COMMERCE")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.coms1; dr["MEDIUM"] = rm.comcm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.comcm2 != null)
                                {
                                    dr["MEDIUM"] = rm.comcm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.comcs2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.comcs2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.comcs2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.coms3; dr["MEDIUM"] = rm.comcm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.coms3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.coms4comm; dr["MEDIUM"] = rm.comcm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.coms4comm != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms4comm.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                            else if (i == 5)
                            {
                                dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ssWEL != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }


                            else if (i == 6)
                            {
                                dr["SUB"] = rm.coms5; dr["MEDIUM"] = rm.comm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.coms6; dr["MEDIUM"] = rm.comm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.coms7; dr["MEDIUM"] = rm.comm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 9)
                            {
                                dr["SUB"] = rm.coms8; dr["MEDIUM"] = rm.comm8; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.coms8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 10)
                            {
                                dr["SUB"] = rm.coms9; dr["MEDIUM"] = rm.comm9; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.coms9 != null)
                                {
                                    if (rm.coms9 == "0")
                                    {

                                    }
                                    else
                                    {
                                        dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.coms9.ToString());
                                        dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                        dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    }
                                }
                            }

                        }
                        //-----------------------------------End Commerce------------
                        //-----------------------------------Humanity------------
                        if (rm.Tgroup == "HUMANITIES")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.hums1; dr["MEDIUM"] = rm.humm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.humm2 != null)
                                {
                                    dr["MEDIUM"] = rm.humm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.hums2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.hums3; dr["MEDIUM"] = rm.humm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.hums3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.hums4; dr["MEDIUM"] = rm.humm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.hums4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                            else if (i == 5)
                            {
                                dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ssWEL != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }



                            else if (i == 6)
                            {
                                dr["SUB"] = rm.hums5; dr["MEDIUM"] = rm.humm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.hums6; dr["MEDIUM"] = rm.humm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.hums7; dr["MEDIUM"] = rm.humm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.hums7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 9)
                            {
                                dr["SUB"] = rm.hums8; dr["MEDIUM"] = rm.humm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.hums8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.hums8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }


                        }
                        //-----------------------------------End Humanity------------
                        //-----------------------------------vocational------------
                        if (rm.Tgroup == "VOCATIONAL")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.vocs1; dr["MEDIUM"] = rm.vocm1; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();

                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.vocm2 != null)
                                {
                                    dr["MEDIUM"] = rm.vocm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.vocs2; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();

                                    //dr["GROUP"] = dsSub.Tables[0].Rows[0]["GROUP"].ToString();
                                    //dr["TCODE"] = dsSub.Tables[0].Rows[0]["TCODE"].ToString();
                                    //dr["TNAME"] = dsSub.Tables[0].Rows[0]["TNAME"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.vocs3; dr["MEDIUM"] = rm.vocm3; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                                if (rm.vocs3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                    //dr["GROUP"] = dsSub.Tables[0].Rows[0]["GROUP"].ToString();
                                    //dr["TCODE"] = dsSub.Tables[0].Rows[0]["TCODE"].ToString();
                                    //dr["TNAME"] = dsSub.Tables[0].Rows[0]["TNAME"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.vocs4; dr["MEDIUM"] = rm.vocm4; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                                if (rm.vocs4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 5)
                            {
                                dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ssWEL != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }


                            else if (i == 6)
                            {
                                dr["SUB"] = rm.vocs5; dr["MEDIUM"] = rm.vocm5; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.vocs6; dr["MEDIUM"] = rm.vocm6; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.vocs7; dr["MEDIUM"] = rm.vocm7; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "R";
                                if (rm.vocs7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 9)
                            {
                                dr["SUB"] = rm.vocs8; dr["MEDIUM"] = rm.vocm8; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "A";
                                if (rm.vocs8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 10)
                            {
                                dr["SUB"] = rm.vocs9; dr["MEDIUM"] = rm.vocm9; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                                if (rm.vocs9 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs9.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 11)
                            {
                                dr["MEDIUM"] = "Medium";
                                dr["SUB"] = rm.vocs10; dr["SUB_SEQ"] = i; dr["GROUP"] = rm.groupsel; dr["TCODE"] = rm.TCODE; dr["TNAME"] = rm.grouptr; dr["SUBCAT"] = "G";
                                if (rm.vocs10 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.vocs10.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                        }
                        //-----------------------------------End Vocational------------

                        //-----------------------------------technical------------
                        if (rm.Tgroup == "TECHNICAL")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.tecs1; dr["MEDIUM"] = rm.tecm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.tecm2 != null)
                                {
                                    dr["MEDIUM"] = rm.tecm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.tecs2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.tecs3; dr["MEDIUM"] = rm.tecm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.tecs3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.tecs4; dr["MEDIUM"] = rm.tecm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.tecs4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 5)
                            {
                                dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ssWEL != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                            else if (i == 6)
                            {
                                dr["SUB"] = rm.tecs5; dr["MEDIUM"] = rm.tecm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.tecs6; dr["MEDIUM"] = rm.tecm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.tecs7; dr["MEDIUM"] = rm.tecm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.tecs7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 9)
                            {
                                dr["SUB"] = rm.tecs8; dr["MEDIUM"] = rm.tecm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.tecs8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.tecs8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                        }
                        //-----------------------------------End technical------------

                        //-----------------------------------Agriculture------------
                        if (rm.Tgroup == "AGRICULTURE")
                        {
                            if (i == 1)
                            {
                                dr["SUB"] = rm.agrs1; dr["MEDIUM"] = rm.agrm1; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs1 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs1.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 2)
                            {
                                if (rm.agrm2 != null)
                                {
                                    dr["MEDIUM"] = rm.agrm2;
                                }
                                else
                                {
                                    dr["MEDIUM"] = "Medium";
                                }
                                dr["SUB"] = rm.agrs2; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs2 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs2.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 3)
                            {
                                dr["SUB"] = rm.agrs3; dr["MEDIUM"] = rm.agrm3; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.agrs3 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs3.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 4)
                            {
                                dr["SUB"] = rm.agrs4; dr["MEDIUM"] = rm.agrm4; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "G";
                                if (rm.agrs4 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs4.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 5)
                            {
                                dr["SUB"] = rm.ssWEL; dr["MEDIUM"] = rm.smWEL; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.ssWEL != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.ssWEL.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                            else if (i == 6)
                            {
                                dr["SUB"] = rm.agrs5; dr["MEDIUM"] = rm.agrm5; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs5 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs5.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 7)
                            {
                                dr["SUB"] = rm.agrs6; dr["MEDIUM"] = rm.agrm6; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs6 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs6.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 8)
                            {
                                dr["SUB"] = rm.agrs7; dr["MEDIUM"] = rm.agrm7; dr["SUB_SEQ"] = i; dr["SUBCAT"] = "R";
                                if (rm.agrs7 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs7.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }
                            else if (i == 9)
                            {
                                dr["SUB"] = rm.agrs8; dr["MEDIUM"] = rm.agrm8; dr["SUB_SEQ"] = 10; dr["SUBCAT"] = "A";
                                if (rm.agrs8 != null)
                                {
                                    dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(rm.agrs8.ToString());
                                    dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                                }
                            }

                        }
                        //-----------------------------------End Agriculture------------

                        dtMatricSubject.Rows.Add(dr);

                        //if (rm.Tgroup == "HUMANITIES")
                        //{
                        //    if (i == 6)
                        //    {
                        //        dr = dtMatricSubject.NewRow();
                        //        dr["CLASS"] = 4;
                        //        //DataSet dsSub = new DataSet();
                        //        dr["SUBNM"] = "";
                        //        dr["SUBABBR"] = "";
                        //        dr["MEDIUM"] = "MEDIUM";
                        //        if (rm.NsqfsubS6 != "NO" && rm.NsqfsubS6 != null && rm.NsqfsubS6 != "")
                        //        {
                        //            dr["SUB"] = "205"; dr["SUB_SEQ"] = 12; dr["SUBCAT"] = "R";
                        //            if (dr["SUB"] != null)
                        //            {
                        //                dsSub = objDB.GetNAmeAndAbbrbySubFromSSE(dr["SUB"].ToString());
                        //                dr["SUBNM"] = dsSub.Tables[0].Rows[0]["NAME_ENG"].ToString();
                        //                dr["SUBABBR"] = dsSub.Tables[0].Rows[0]["ABBR_ENG"].ToString();
                        //            }
                        //        }
                        //        //// dtMatricSubject.Rows.Add(dr); HOT (85,205) subject droped by PSEB , So don't insert HOT (85,205) if NSQF Selected (M1,M2,T1,T2)
                        //    }
                        //}

                    }

                    dtMatricSubject.AcceptChanges();
                    dtMatricSubject = dtMatricSubject.AsEnumerable().Where(r => r.ItemArray[1].ToString() != "" && r.ItemArray[1].ToString() != "0").CopyToDataTable();


                    var duplicates = dtMatricSubject.AsEnumerable().GroupBy(r => r[2]).Where(gr => gr.Count() > 1).ToList();
                    if (duplicates.Any())
                    {
                        ViewBag.Duplicate = "Duplicate Subjects: " + String.Join(", ", duplicates.Select(dupl => dupl.Key));
                        ViewData["resultUpdate"] = 10;
                        return View(rm);

                    }

                    var DTNoOfSub = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") != "72" && r.Field<string>("SUB") != "73" && r.Field<string>("SUB") != "205").ToList();

                    int NoOfSub = DTNoOfSub.Count();

                    if (rm.DA == "N.A.")
                    {
                        //if (NoOfSub < 8)
                        if (NoOfSub < 7)
                        {
                            ViewData["resultUpdate"] = 15;
                            return View(rm);
                        }
                    }
                    else
                    {
                        if (NoOfSub < 7)
                        {
                            ViewData["resultUpdate"] = 15;
                            return View(rm);
                        }
                    }



                    //RM.Tgroup == "HUMANITIES"
                    string msg = "";
                    bool status = objDB.SubjectNotAllowed(rm.Tgroup, dtMatricSubject, out msg);
                    if (status == false)
                    {
                        ViewData["resultUpdate"] = 20;
                        ViewData["errorMsg"] = msg;
                        return View(rm);
                    }

                    //IsNRICandidate  rm.IsNRICandidate == true && (rm.DocProofNRICandidates != null || !string.IsNullOrEmpty(rm.ProofNRICandidates))
                    if (rm.IsNRICandidate == true && (rm.DocProofNRICandidates != null || !string.IsNullOrEmpty(rm.ProofNRICandidates)))
                    {
                        rm.IsNRICandidate = true;
                    }
                    else
                    {
                        rm.IsNRICandidate = false;
                        rm.ProofNRICandidates = "";
                        rm.DocProofNRICandidates = null;
                    }

                    if (!string.IsNullOrEmpty(rm.DOB))
                    {
                        rm.DOB = AbstractLayer.StaticDB.DateInFormat(rm.DOB) == true ? rm.DOB : "";
                    }
                    else { rm.DOB = ""; }

                    // Check NSQF Subject exists in Subject List after NSQF Current Class Selection 
                    if (!string.IsNullOrEmpty(NSQFsubS6))
                    {
                        if (NSQFsubS6.ToUpper() != "NO".ToUpper())
                        {
                            rm.NsqfsubS6 = NSQFsubS6;
                            var NSQFSubExists = dtMatricSubject.AsEnumerable().Where(r => r.Field<string>("SUB") == NSQFsubS6).Count() > 0;
                            if (!NSQFSubExists)
                            {
                                ViewData["resultUpdate"] = "NSQFSUBWANT";
                                return View(rm);
                            }

                        }
                    }


                    string result = objDB.Update_T_Data(rm, frm, formName, id, stdPic, stdSign, dtMatricSubject);
                    string filepathtosave = "";
                    if (result == "0" || result == null)
                    {
                        //--------------Not updated
                        ViewData["resultUpdate"] = 0;
                    }
                    else if (result == "-1")
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = -1;
                    }
                    else if (result == "-3")
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = -3;
                    }
                    else if (result.Length > 5)
                    {
                        ViewData["resultUpdate"] = 1;
                        if (rm.file != null)
                        {
                            //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), result + "P" + ".jpg");
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.file.SaveAs(path);
                            //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo/" + result + "P" + ".jpg";
                            //ViewBag.ImageURL = filepathtosave;

                            string Orgfile = result + "P" + ".jpg";
                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.file.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Photo" + "/" + result + "P" + ".jpg";
                            string type = "P";
                            string IsNew = "YES";
                            string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                        }
                        if (rm.std_Sign != null)
                        {
                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), result + "S" + ".jpg");
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.std_Sign.SaveAs(path);
                            //filepathtosave = "../Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign/" + result + "S" + ".jpg";
                            //ViewBag.ImageURL = filepathtosave;

                            string Orgfile = result + "S" + ".jpg";
                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.std_Sign.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }


                            string PhotoName = "allfiles/Upload2024/" + formName + "/" + schlDist + "/Sign" + "/" + result + "S" + ".jpg";
                            string type = "S";
                            string IsNew = "YES";
                            string UpdatePic = objDB.Updated_Pic_Data(result, PhotoName, type, IsNew);
                        }

                        // Documents

                        if (rm.DocProofCertificate != null)
                        {
                            string fileExt = Path.GetExtension(rm.DocProofCertificate.FileName);

                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"), result + "C" + fileExt);
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.DocProofCertificate.SaveAs(path);
                            string Orgfile = result + "C" + fileExt;

                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {

                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.DocProofCertificate.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }

                            rm.ProofCertificate = "allfiles/Upload2024/" + formName + "/" + schlDist + "/ProofCertificate" + "/" + result + "C" + fileExt;
                            string type = "C";
                            string UpdatePicC = objDB.Updated_Pic_Data(result, rm.ProofCertificate, type);
                        }

                        if (rm.DocProofNRICandidates != null)
                        {
                            string fileExt = Path.GetExtension(rm.DocProofNRICandidates.FileName);
                            string pathName = formName + "/" + schlDist + "/ProofNRICandidates";

                            //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + pathName), result + "NRI" + fileExt);
                            //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + pathName));
                            //if (!Directory.Exists(FilepathExist))
                            //{
                            //    Directory.CreateDirectory(FilepathExist);
                            //}
                            //rm.DocProofNRICandidates.SaveAs(path);
                            string Orgfile = result + "NRI" + fileExt;

                            using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                            {
                                using (var newMemoryStream = new MemoryStream())
                                {
                                    ///file.CopyTo(newMemoryStream);

                                    var uploadRequest = new TransferUtilityUploadRequest
                                    {
                                        InputStream = rm.DocProofCertificate.InputStream,
                                        Key = string.Format("allfiles/Upload2024/" + pathName + "/" + schlDist + "/ProofNRICandidates/{0}", Orgfile),
                                        BucketName = BUCKET_NAME,
                                        CannedACL = S3CannedACL.PublicRead
                                    };

                                    var fileTransferUtility = new TransferUtility(client);
                                    fileTransferUtility.Upload(uploadRequest);
                                }
                            }


                            rm.ProofNRICandidates = "allfiles/Upload2024/" + pathName + "/" + result + "NRI" + fileExt;
                            string type = "NRI";
                            string UpdatePicN = objDB.Updated_Pic_Data(result, rm.ProofNRICandidates, type);
                        }


                        ModelState.Clear();
                        //--For Showing Message---------//
                        ViewData["resultUpdate"] = 1;
                        //return RedirectToAction("M2Formgrid", "RegistrationPortal");

                    }
                    else
                    {
                        //-----alredy exist
                        ViewData["resultUpdate"] = result;
                    }
                }

            }
            catch (Exception ex1)
            {
                ViewData["ErrorMessage"] = ex1.Message;
                oErrorLog.WriteErrorLog(ex1.ToString(), Path.GetFileName(Request.Path));
            }
            return View(rm);
        }





        public JsonResult BindMatricYearByCategory(string SelCat, string SelYear) // Calling on previous Year change 
        {

            List<SelectListItem> yearlist = new List<SelectListItem>();


            if (SelCat.ToUpper().Contains("PASSED"))
            {
                yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) < Convert.ToInt32(SelYear)).ToList();
            }
            else
            {
                yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) < (Convert.ToInt32(SelYear) - 1)).ToList();
            }
            ViewBag.SessionYearList = yearlist;

            return Json(yearlist);
        }



        [SessionCheckFilter]
        public ActionResult T2FormDelete(string id)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB(); //calling class DBClass

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            else
            {
                int status = objDB.CheckSchoolAssignForm(2, Session["SCHL"].ToString());
                if (status > 0)
                {
                    if (status == 0)
                    { return RedirectToAction("Index", "Home"); }
                }
                else
                {
                    return RedirectToAction("Index", "Home");
                }

            }
            if (id == null)
            {
                return RedirectToAction("T2Formgrid", "RegistrationPortal");
            }
            string formname = "T2";
            id = encrypt.QueryStringModule.Decrypt(id);

            string schlDist = null;
            DataSet schlDistds = objCommon.SchoolDist(Session["SCHL"].ToString());
            if (schlDistds.Tables[0].Rows.Count > 0)
            {
                schlDist = schlDistds.Tables[0].Rows[0]["DIST"].ToString();
            }
            DataSet ds = objDB.SearchStudentGetByData_Subject(id, formname);
            //DataSet ds = objDB.SearchStudentGetByData(id);
            string result = "";
            if (ds == null || ds.Tables[0].Rows.Count == 0)
            {
                result = objDB.Delete_T_FromData(id);
                return RedirectToAction("T2Formgrid", "RegistrationPortal");
            }
            else
            {
                string dist = ds.Tables[0].Rows[0]["District"].ToString();
                string imgPhoto = ds.Tables[0].Rows[0]["std_Photo"].ToString();
                string imgSign = ds.Tables[0].Rows[0]["std_Sign"].ToString();
                string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();


                string ProofCertificate = ds.Tables[0].Rows[0]["ProofCertificate"].ToString();
                string ProofNRICandidates = ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString();
                result = objDB.Delete_T_FromData(id); // passing Value to DBClass from model

                //--------Photo Delete------
                RegistrationModels RM = new RegistrationModels();
                var fileDesti = ""; var fileDestiPic = ""; var fileDestiProof = ""; var fileDestiNRI = "";

                if (Session["Session"] != null)
                {
                    if (Session["Session"].ToString() == "2023-2024")
                    {
                        // var pathPhoto = "D:\\LatestPSEBONLINE - 2018 - 12042017\\PSEBONLINE\\PSEBONLINE\\Upload\\upload2018\\N1\\165\\Photo\\N1165100003P.jpg";
                        var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Photo"), imgPhoto);
                        //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

                        if (System.IO.File.Exists(pathPhoto))
                        {
                            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"));
                            if (!Directory.Exists(FilepathExist))
                            {
                                Directory.CreateDirectory(FilepathExist);
                            }

                            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                            fileDestiPic = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/PhotoD"), imgPhoto);
                            System.IO.File.Move(pathPhoto, fileDestiPic);
                            System.IO.File.Delete(pathPhoto);

                        }
                        var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/Sign"), imgSign);
                        //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
                        if (System.IO.File.Exists(pathSIGN))
                        {
                            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"));
                            if (!Directory.Exists(FilepathExist))
                            {
                                Directory.CreateDirectory(FilepathExist);
                            }
                            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                            fileDesti = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/SignD"), imgSign);
                            System.IO.File.Move(pathSIGN, fileDesti);
                            System.IO.File.Delete(pathSIGN);

                        }
                        //------------End photo Delete------



                        // var pathPhoto = "D:\\LatestPSEBONLINE - 2018 - 12042017\\PSEBONLINE\\PSEBONLINE\\Upload\\upload2018\\N1\\165\\Photo\\N1165100003P.jpg";
                        var pathProofCertificate = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificate"), ProofCertificate);
                        //var pathPhoto = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Photo"), imgPhoto);

                        if (System.IO.File.Exists(pathProofCertificate))
                        {
                            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificateD"));
                            if (!Directory.Exists(FilepathExist))
                            {
                                Directory.CreateDirectory(FilepathExist);
                            }

                            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                            fileDestiProof = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofCertificateD"), ProofCertificate);
                            System.IO.File.Move(pathProofCertificate, fileDestiProof);
                            System.IO.File.Delete(pathProofCertificate);

                        }
                        var pathProofNRICandidates = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidates"), ProofNRICandidates);
                        //var pathSIGN = Path.Combine(Server.MapPath("~/Upload/" + formName + "/" + dist + "/Sign"), imgSign);
                        if (System.IO.File.Exists(pathProofNRICandidates))
                        {
                            string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidatesD"));
                            if (!Directory.Exists(FilepathExist))
                            {
                                Directory.CreateDirectory(FilepathExist);
                            }
                            //fileDesti = "../StdImages/DeletedPic/" + imgName;
                            fileDestiNRI = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + formName + "/" + schlDist + "/ProofNRICandidatesD"), ProofNRICandidates);
                            System.IO.File.Move(pathProofNRICandidates, fileDestiNRI);
                            System.IO.File.Delete(pathProofNRICandidates);

                        }
                    }
                }


                //------------End photo Delete------
                TempData["resultDelete"] = result;
                // for dislaying message after saving storing output.
                return RedirectToAction("T2Formgrid", "RegistrationPortal");

            }
        }
        public JsonResult GetT(string t) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            DataSet result = objDB.SelectT1(t); // passing Value to DBClass from model

            ViewBag.S = result.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> SList = new List<SelectListItem>();
            //List<string> items = new List<string>();
            //SList.Add(new SelectListItem { Text = "--Select Subject--", Value = "0" });
            foreach (System.Data.DataRow dr in ViewBag.S.Rows)
            {
                SList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });

                //if(@dr["medium2"].ToString()==null && @dr["medium3"].ToString() == null)
                //{
                //    SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });

                //}
                //if(@dr["medium3"].ToString() == null)
                //{
                //    SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });
                //    SList.Add(new SelectListItem { Text = @dr["medium2"].ToString(), Value = @dr["medium2"].ToString() });
                //}

                //SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });
                //SList.Add(new SelectListItem { Text = @dr["medium2"].ToString(), Value = @dr["medium2"].ToString() });
                //SList.Add(new SelectListItem { Text = @dr["medium3"].ToString(), Value = @dr["medium3"].ToString() });

            }
            ViewBag.s5 = SList;
            ViewBag.s6 = SList;
            ViewBag.s7 = SList;
            ViewBag.s8 = SList;
            ViewBag.s9 = SList;
            ViewBag.s7 = SList;
            ViewBag.s8 = SList;
            ViewBag.SubS9 = SList;

            return Json(SList);

        }

        public JsonResult GetT2Medium(string s) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            DataSet result = objDB.SelectT2mediums(s); // passing Value to DBClass from model

            ViewBag.S = result.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> SList = new List<SelectListItem>();
            //List<string> items = new List<string>();
            SList.Add(new SelectListItem { Text = "medium", Value = "0" });
            foreach (System.Data.DataRow dr in ViewBag.S.Rows)
            {

                if (@dr["medium2"].ToString() == "" || @dr["medium2"].ToString() == null)
                {
                    SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });

                }
                else if (@dr["medium3"].ToString() == "" || @dr["medium3"].ToString() == null)
                {
                    SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });
                    SList.Add(new SelectListItem { Text = @dr["medium2"].ToString(), Value = @dr["medium2"].ToString() });

                }
                else
                {
                    SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });
                    SList.Add(new SelectListItem { Text = @dr["medium2"].ToString(), Value = @dr["medium2"].ToString() });
                    SList.Add(new SelectListItem { Text = @dr["medium3"].ToString(), Value = @dr["medium3"].ToString() });
                }

                //SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });
                //SList.Add(new SelectListItem { Text = @dr["medium2"].ToString(), Value = @dr["medium2"].ToString() });
                //SList.Add(new SelectListItem { Text = @dr["medium3"].ToString(), Value = @dr["medium3"].ToString() });

            }

            return Json(SList);

        }
        public JsonResult GetTrade(string s) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            DataSet result = objDB.gettrade(s); // passing Value to DBClass from model

            ViewBag.S = result.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> SList = new List<SelectListItem>();
            SList.Add(new SelectListItem { Text = "--Select Trade--", Value = "0" });
            foreach (System.Data.DataRow dr in ViewBag.S.Rows)
            {

                SList.Add(new SelectListItem { Text = @dr["tname"].ToString(), Value = @dr["tcode"].ToString() });
            }

            return Json(SList);

        }
        public JsonResult gettradeSubjects(string s) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            DataSet result = objDB.gettradeSubjects(s); // passing Value to DBClass from model

            ViewBag.tS = result.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> SList = new List<SelectListItem>();

            foreach (System.Data.DataRow dr in ViewBag.tS.Rows)
            {
                SList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });
                // SList.Add(new SelectListItem { Text = @dr["sub"].ToString(), Value = @dr["name_eng"].ToString() });
            }

            return Json(SList);

        }
        public JsonResult GetSubjectTwelve(string s)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            DataSet result = objDB.SubjectsTweleve_hum(); // passing Value to DBClass from model

            ViewBag.S = result.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> SList = new List<SelectListItem>();
            SList.Add(new SelectListItem { Text = "--Select Subject 5--", Value = "0" });
            foreach (System.Data.DataRow dr in ViewBag.S.Rows)
            {

                SList.Add(new SelectListItem { Text = @dr["NAME_ENG"].ToString(), Value = @dr["SUB"].ToString() });
            }

            return Json(SList);

        }

        #endregion T2 End

        //-------T2End---------------------------


        #region showresult
        public ActionResult ShowResult(int? page, string SelList, string SearchString)
        {
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            string SelList1 = "";
            string SearchString1 = "";

            if (Request.QueryString["Form"] != null)
            {
                Session["FormNameShowResult"] = Request.QueryString["Form"];
            }
            ViewBag.SchoolEnglish = "test";
            ViewBag.SchoolPunjabi = "test";
            int pageSize = 50;
            int pageIndex = 1;
            pageIndex = page.HasValue ? Convert.ToInt32(page) : 1;
            ViewBag.pagesize = pageIndex;
            var itemsch = new SelectList(new[]{new {ID="1",Name="By UniqueID"},new{ID="2",Name="Candidate Name"},
            new{ID="3",Name="Father's Name"},new{ID="4",Name="Mother's Name"},new{ID="5",Name="DOB"},}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();
            string session = null;
            string form = null;
            string schl = null;

            if (Session["Session"] != null)
            {
                session = Session["Session"].ToString();
                form = Session["FormNameShowResult"].ToString();
                schl = Session["SCHL"].ToString();
                if (Convert.ToInt32(session.Substring(0, 4)) > 2016)
                {
                    return RedirectToAction("Index", "Login");
                }
                string id = "";
                if (page != null && Convert.ToString(Session["SelList"]) != "" && Convert.ToString(Session["SearchString"]) != "")
                {
                    SelList1 = Convert.ToString(Session["SelList"]);
                    SearchString1 = Convert.ToString(Session["SearchString"]);
                    ViewBag.searchstring = SearchString1;
                    ViewBag.SelectedItem = SelList1;

                    AbstractLayer.RegistrationDB objDB1 = new AbstractLayer.RegistrationDB();
                    RegistrationModels rm1 = new RegistrationModels();
                    rm1.StoreAllData = objDB1.SearchStudentGetByData2(schl, session, form, SearchString1, pageIndex);
                    if (rm1.StoreAllData != null)
                    {
                        ShowModel s1m = new ShowModel();
                        List<ShowModel> empList1 = new List<ShowModel>();
                        int table1 = Convert.ToInt32(rm1.StoreAllData.Tables.Count);// count the number of table in dataset
                        if (table1 > 0)
                        {
                            foreach (DataRow dr in rm1.StoreAllData.Tables[0].Rows)
                            {
                                empList1.Add(new ShowModel { Id = Convert.ToInt32(dr["Id"]), Year = Convert.ToString(dr["Year"]), Lot = Convert.ToString(dr["Lot"]), form = Convert.ToString(dr["form"]), RegDate = Convert.ToString(dr["RegDate"]), Exam = Convert.ToString(dr["Exam"]), SCHL = Convert.ToString(dr["SCHL"]), regno = Convert.ToString(dr["regno"]), Name = Convert.ToString(dr["Name"]), FNAME = Convert.ToString(dr["FNAME"]), MNAME = Convert.ToString(dr["MNAME"]), DOB = Convert.ToString(dr["DOB"]), sex = Convert.ToString(dr["sex"]), caste = Convert.ToString(dr["caste"]), pagec = 1 });
                            }
                        }
                        var list1 = empList1.ToList();
                        //var list1 = empList1.ToPagedList(pageIndex, pageSize);

                        if (list1.Count == 0)
                        {
                            ViewBag.message = "Record Not Found";
                        }
                        else
                        {
                            ViewBag.TotalCount = rm1.StoreAllData.Tables[0].Rows.Count;
                            int count = Convert.ToInt32(rm1.StoreAllData.Tables[1].Rows[0]["decount"]);
                            ViewBag.TotalCount1 = count;
                            int tp = Convert.ToInt32(count);
                            int pn = tp / 50;
                            int cal = 50 * pn;
                            int res = Convert.ToInt32(ViewBag.TotalCount1) - cal;
                            if (res >= 1)
                                ViewBag.pn = pn + 1;
                            else
                                ViewBag.pn = pn;
                        }
                        return View(list1);
                    }
                    else
                    {
                        ViewBag.TotalCount = 0;
                        return View();
                    }


                }
                else
                {
                    Session["SelList"] = null;
                    Session["SearchString"] = null;
                    AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                    RegistrationModels rm = new RegistrationModels();
                    rm.StoreAllData = objDB.SearchStudentGetByData1(schl, session, form, pageIndex);
                    if (rm.StoreAllData != null)
                    {
                        //Employee objEmp = new Employee();// create the object of class Employee   My Start
                        ShowModel sm = new ShowModel();
                        List<ShowModel> empList = new List<ShowModel>();
                        int table = Convert.ToInt32(rm.StoreAllData.Tables.Count);// count the number of table in dataset
                        if (table > 0)
                        {
                            foreach (DataRow dr in rm.StoreAllData.Tables[0].Rows)
                            {
                                empList.Add(new ShowModel { Id = Convert.ToInt32(dr["Id"]), Year = Convert.ToString(dr["Year"]), Lot = Convert.ToString(dr["Lot"]), form = Convert.ToString(dr["form"]), RegDate = Convert.ToString(dr["RegDate"]), Exam = Convert.ToString(dr["Exam"]), SCHL = Convert.ToString(dr["SCHL"]), regno = Convert.ToString(dr["regno"]), Name = Convert.ToString(dr["Name"]), FNAME = Convert.ToString(dr["FNAME"]), MNAME = Convert.ToString(dr["MNAME"]), DOB = Convert.ToString(dr["DOB"]), sex = Convert.ToString(dr["sex"]), caste = Convert.ToString(dr["caste"]), pagec = 1 });
                            }
                        }
                        var list = empList.ToList();

                        //My End

                        if (list.Count == 0)
                        {
                            ViewBag.message = "Record Not Found";
                        }
                        else
                        {
                            ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                            int count = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                            ViewBag.TotalCount1 = count;
                            int tp = Convert.ToInt32(count);
                            int pn = tp / 50;
                            int cal = 50 * pn;
                            int res = Convert.ToInt32(ViewBag.TotalCount1) - cal;
                            if (res >= 1)
                                ViewBag.pn = pn + 1;
                            else
                                ViewBag.pn = pn;
                        }
                        return View(list);
                    }
                    else
                    {
                        ViewBag.TotalCount = 0;
                        @ViewBag.message = "Record Not Found";
                        return View();
                    }


                }
            }
            else
            {
                return RedirectToAction("Index", "Login");
            }

        }

        [HttpPost]
        public ActionResult ShowResult(int? page, string SelList, string SearchString, string f)
        {
            Session["SelList"] = SelList;
            Session["SearchString"] = SearchString;
            int pageSize = 50;
            int pageIndex = 1;

            pageIndex = page.HasValue ? Convert.ToInt32(page) : 1;
            ViewBag.pagesize = pageIndex;
            ViewBag.SchoolEnglish = "test";
            ViewBag.SchoolPunjabi = "test";
            var itemsch = new SelectList(new[]{new {ID="1",Name="By UniqueID"},new{ID="2",Name="Candidate Name"},
            new{ID="3",Name="Father's Name"},new{ID="4",Name="Mother's Name"},new{ID="5",Name="DOB"},}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();

            string session = null;
            string form = null;
            string schl = null;
            int flag = 0;
            if (Session["Session"] != null)
            {
                session = Session["Session"].ToString();
                form = Session["FormNameShowResult"].ToString();
                schl = Session["SCHL"].ToString();
                string id = "";

                ViewBag.searchstring = SearchString;
                ViewBag.SelectedItem = SelList;
                string search1 = "";
                if (SelList != "")
                {
                    flag = 0;
                    int SelValueSch = Convert.ToInt32(SelList.ToString());
                    if (SearchString != "")
                    {
                        if (SelValueSch == 1)
                        {
                            search1 += " ID=" + SearchString.ToString();
                        }
                        else if (SelValueSch == 2)
                        { search1 += "  Name  like '%" + SearchString.ToString() + "%'"; }
                        else if (SelValueSch == 3)
                        { search1 += " FNAME like '%" + SearchString.ToString() + "%'"; }
                        else if (SelValueSch == 4)
                        { search1 += " MNAME like '%" + SearchString.ToString() + "%'"; }
                        else if (SelValueSch == 5)
                        { search1 += " DOB='" + SearchString.ToString() + "'"; }
                    }

                }



                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (flag == 1)
                { rm.StoreAllData = objDB.SearchStudentGetByData1(schl, session, form, pageIndex); }//pro_GetStudentBySessionAndFormNameSeparate
                else
                { rm.StoreAllData = objDB.SearchStudentGetByData2(schl, session, form, search1, pageIndex); }//pro_GetStudentBySessionAndFormNameSearchSeparate


                if (rm.StoreAllData != null)
                {
                    ShowModel sm = new ShowModel();
                    List<ShowModel> empList = new List<ShowModel>();
                    int table = Convert.ToInt32(rm.StoreAllData.Tables.Count);// count the number of table in dataset
                    if (table > 0)
                    {
                        foreach (DataRow dr in rm.StoreAllData.Tables[0].Rows)
                        {
                            empList.Add(new ShowModel { Id = Convert.ToInt32(dr["Id"]), Year = Convert.ToString(dr["Year"]), Lot = Convert.ToString(dr["Lot"]), form = Convert.ToString(dr["form"]), RegDate = Convert.ToString(dr["RegDate"]), Exam = Convert.ToString(dr["Exam"]), SCHL = Convert.ToString(dr["SCHL"]), regno = Convert.ToString(dr["regno"]), Name = Convert.ToString(dr["Name"]), FNAME = Convert.ToString(dr["FNAME"]), MNAME = Convert.ToString(dr["MNAME"]), DOB = Convert.ToString(dr["DOB"]), sex = Convert.ToString(dr["sex"]), caste = Convert.ToString(dr["caste"]), pagec = 1 });
                        }
                    }
                    var list = empList.ToList();
                    if (rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.TotalCount = 0;
                        ViewBag.message = "Record Not Found";
                    }
                    else
                    {
                        ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                        int count = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                        ViewBag.TotalCount1 = count;
                        int tp = Convert.ToInt32(count);
                        int pn = tp / 50;
                        int cal = 50 * pn;
                        int res = Convert.ToInt32(ViewBag.TotalCount1) - cal;
                        if (res >= 1)
                            ViewBag.pn = pn + 1;
                        else
                            ViewBag.pn = pn;
                    }
                    return View(list);
                }
                else
                {
                    ViewBag.TotalCount = 0;
                    ViewBag.message = "Record Not Found";
                    return View();
                }
            }
            else
            {
                return RedirectToAction("Index", "Login");
            }

        }
        #endregion showresult

        #region SCHOOL CORRECTION PERFORMA BEGIN 
        public ActionResult SchoolCorrectionAllRecord()
        {
            try
            {
                string Search = "schl like '%%' ";
                var itemsch1 = new SelectList(new[]{new {ID="2",Name="Correction Lot"},new{ID="3",Name="Correction Id"},
                new{ID="4",Name="Student Id"},}, "ID", "Name", 1);
                ViewBag.MySch = itemsch1.ToList();
                //ViewBag.SelectedItem
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    string schlid = Session["SCHL"].ToString();
                    rm.Correctiondata = null;
                    ViewBag.TotalCountadded = "";

                    Search += "and schl ='" + schlid + "' ";

                    rm.Correctiondata = new AbstractLayer.AdminDB().SchoolCorrectionStatus(schlid, Search);
                    // rm.Correctiondata = objDB.GetSchoolCorrectionAllRecord(schlid);
                    ViewBag.TotalCountadded = rm.Correctiondata.Tables[0].Rows.Count;
                    if (rm.Correctiondata == null || rm.Correctiondata.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message2 = "Record Not Found";
                        ViewBag.TotalCount2 = 0;
                    }
                }
                string schid = Session["SCHL"].ToString();
                DataSet result = objDB.schooltypes(schid); // passing Value to DBClass from model
                if (result == null)
                {
                    return RedirectToAction("Index", "Home");
                }
                if (result.Tables[1].Rows.Count > 0)
                {

                    ViewBag.Matric = result.Tables[1].Rows[0]["Matric"].ToString();
                    ViewBag.OMatric = result.Tables[1].Rows[0]["OMatric"].ToString();
                    ViewBag.Senior = result.Tables[1].Rows[0]["Senior"].ToString();
                    ViewBag.OSenior = result.Tables[1].Rows[0]["OSenior"].ToString();

                    List<SelectListItem> itemsch = new List<SelectListItem>();
                    if (ViewBag.Matric == "1")
                    {
                        itemsch.Add(new SelectListItem { Text = "Matriculation Regular", Value = "1" });
                    }
                    if (ViewBag.OMatric == "1")
                    {
                        itemsch.Add(new SelectListItem { Text = "Matriculation Open", Value = "2" });
                    }
                    if (ViewBag.Senior == "1")
                    {
                        itemsch.Add(new SelectListItem { Text = "Sr.Secondary Regular", Value = "3" });
                    }
                    if (ViewBag.OSenior == "1")
                    {
                        itemsch.Add(new SelectListItem { Text = "Sr.Secondary Open", Value = "4" });
                    }
                    if (ViewBag.Matric != "1" && ViewBag.OMatric != "1" && ViewBag.Senior != "1" && ViewBag.OSenior != "1")
                    {
                        itemsch.Add(new SelectListItem { Text = "", Value = "" });
                    }
                    ViewBag.MySch1 = itemsch.ToList();

                }

                return View(rm);
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }

        [HttpPost]
        public ActionResult SchoolCorrectionAllRecord(FormCollection frm)
        {
            try
            {
                string Search = "schl like '%%' ";
                var itemsch1 = new SelectList(new[]{new {ID="2",Name="Correction Lot"},new{ID="3",Name="Correction Id"},
                new{ID="4",Name="Student Id"},}, "ID", "Name", 1);
                ViewBag.MySch = itemsch1.ToList();
                //ViewBag.SelectedItem
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    string schlid = Session["SCHL"].ToString();

                    schlid = Session["SCHL"].ToString();

                    Search += "and schl ='" + schlid + "' ";

                    rm.Correctiondata = null;
                    ViewBag.TotalCountadded = "";
                    // rm.Correctiondata = objDB.GetSchoolCorrectionAllRecord(schlid);
                    if (frm["Sch1"] != "")
                    {
                        ViewBag.SelectedItem = frm["Sch1"];
                        TempData["SelectedItem"] = frm["Sch1"];
                        int SelValueSch = Convert.ToInt32(frm["Sch1"].ToString());

                        if (frm["SearchString"] != "")
                        {
                            if (SelValueSch == 1)
                            { Search += " and SCHL='" + frm["SearchString"].ToString() + "'"; }
                            else if (SelValueSch == 2)
                            { Search += " and   CorrectionLot='" + frm["SearchString"].ToString() + "'"; }
                            else if (SelValueSch == 3)
                            { Search += " and CorrectionId='" + frm["SearchString"].ToString() + "'"; }
                            else if (SelValueSch == 4)
                            { Search += " and std_id='" + frm["SearchString"].ToString() + "'"; }
                        }
                    }
                    rm.Correctiondata = new AbstractLayer.AdminDB().SchoolCorrectionStatus(schlid, Search);
                    ViewBag.TotalCountadded = rm.Correctiondata.Tables[0].Rows.Count;
                    if (rm.Correctiondata == null || rm.Correctiondata.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message2 = "Record Not Found";
                        ViewBag.TotalCount2 = 0;
                    }
                }
                string schid = Session["SCHL"].ToString();
                DataSet result = objDB.schooltypes(schid); // passing Value to DBClass from model
                if (result == null)
                {
                    return RedirectToAction("Index", "Home");
                }
                if (result.Tables[1].Rows.Count > 0)
                {

                    ViewBag.Matric = result.Tables[1].Rows[0]["Matric"].ToString();
                    ViewBag.OMatric = result.Tables[1].Rows[0]["OMatric"].ToString();
                    ViewBag.Senior = result.Tables[1].Rows[0]["Senior"].ToString();
                    ViewBag.OSenior = result.Tables[1].Rows[0]["OSenior"].ToString();

                    List<SelectListItem> itemsch = new List<SelectListItem>();
                    if (ViewBag.Matric == "1")
                    {
                        itemsch.Add(new SelectListItem { Text = "Matriculation Regular", Value = "1" });
                    }
                    if (ViewBag.OMatric == "1")
                    {
                        itemsch.Add(new SelectListItem { Text = "Matriculation Open", Value = "2" });
                    }
                    if (ViewBag.Senior == "1")
                    {
                        itemsch.Add(new SelectListItem { Text = "Sr.Secondary Regular", Value = "3" });
                    }
                    if (ViewBag.OSenior == "1")
                    {
                        itemsch.Add(new SelectListItem { Text = "Sr.Secondary Open", Value = "4" });
                    }
                    if (ViewBag.Matric != "1" && ViewBag.OMatric != "1" && ViewBag.Senior != "1" && ViewBag.OSenior != "1")
                    {
                        itemsch.Add(new SelectListItem { Text = "", Value = "" });
                    }
                    ViewBag.MySch1 = itemsch.ToList();

                }

                if (ModelState.IsValid)
                { return View(rm); }
                else
                { return View(); }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }


        //public ActionResult SchoolCorrectionAllRecord()
        //{
        //    try
        //    {
        //        //ViewBag.SelectedItem
        //        AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
        //        RegistrationModels rm = new RegistrationModels();
        //        if (Session["SCHL"] == null)
        //        {
        //            return RedirectToAction("Logout", "Login");
        //        }
        //        else
        //        {
        //            string schlid = Session["SCHL"].ToString();
        //            rm.Correctiondata = null;
        //            ViewBag.TotalCountadded = "";
        //            rm.Correctiondata = objDB.GetSchoolCorrectionAllRecord(schlid);
        //            ViewBag.TotalCountadded = rm.Correctiondata.Tables[0].Rows.Count;
        //            if (rm.Correctiondata == null || rm.Correctiondata.Tables[0].Rows.Count == 0)
        //            {
        //                ViewBag.Message2 = "Record Not Found";
        //                ViewBag.TotalCount2 = 0;
        //            }
        //        }
        //        string schid = Session["SCHL"].ToString();
        //        DataSet result = objDB.schooltypes(schid); // passing Value to DBClass from model
        //        if (result == null)
        //        {
        //            return RedirectToAction("Index", "Home");
        //        }
        //        if (result.Tables[1].Rows.Count > 0)
        //        {

        //            ViewBag.Matric = result.Tables[1].Rows[0]["Matric"].ToString();
        //            ViewBag.OMatric = result.Tables[1].Rows[0]["OMatric"].ToString();
        //            ViewBag.Senior = result.Tables[1].Rows[0]["Senior"].ToString();
        //            ViewBag.OSenior = result.Tables[1].Rows[0]["OSenior"].ToString();

        //            List<SelectListItem> itemsch = new List<SelectListItem>();
        //            if (ViewBag.Matric == "1")
        //            {
        //                itemsch.Add(new SelectListItem { Text = "Matriculation Regular", Value = "1" });
        //            }
        //            if (ViewBag.OMatric == "1")
        //            {
        //                itemsch.Add(new SelectListItem { Text = "Matriculation Open", Value = "2" });
        //            }
        //            if (ViewBag.Senior == "1")
        //            {
        //                itemsch.Add(new SelectListItem { Text = "Sr.Secondary Regular", Value = "3" });
        //            }
        //            if (ViewBag.OSenior == "1")
        //            {
        //                itemsch.Add(new SelectListItem { Text = "Sr.Secondary Open", Value = "4" });
        //            }
        //            if (ViewBag.Matric != "1" && ViewBag.OMatric != "1" && ViewBag.Senior != "1" && ViewBag.OSenior != "1")
        //            {
        //                itemsch.Add(new SelectListItem { Text = "", Value = "" });
        //            }
        //            ViewBag.MySch = itemsch.ToList();

        //        }
        //        if (ModelState.IsValid)
        //        { return View(rm); }
        //        else
        //        { return View(); }
        //    }
        //    catch (Exception ex)
        //    {
        //        return RedirectToAction("Logout", "Login");
        //    }
        //}

        public ActionResult SchoolCorrection()
        {
            try
            {
                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();

                //ViewBag.SelectedItem
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                //

                string schl = Session["SCHL"].ToString();
                rm.Correctiondata = null;
                ViewBag.TotalCountadded = "";
                rm.Correctiondata = objDB.GetStudentRecordsCorrectiondataPending(schl);
                ViewBag.TotalCountadded = rm.Correctiondata.Tables[0].Rows.Count;
                if (rm.Correctiondata == null || rm.Correctiondata.Tables[0].Rows.Count == 0)
                {
                    ViewBag.Message2 = "Record Not Found";
                    ViewBag.TotalCount2 = 0;
                }



                DataSet result = objDB.schooltypesCorrection(schl, "P"); // passing Value to DBClass from model
                if (result == null)
                {
                    return RedirectToAction("Index", "Home");
                }
                if (result.Tables[1].Rows.Count > 0)
                {

                    ViewBag.Matric = result.Tables[1].Rows[0]["Matric"].ToString();
                    ViewBag.OMatric = result.Tables[1].Rows[0]["OMatric"].ToString();
                    ViewBag.Senior = result.Tables[1].Rows[0]["Senior"].ToString();
                    ViewBag.OSenior = result.Tables[1].Rows[0]["OSenior"].ToString();
                    ViewBag.N3M1threclock = result.Tables[1].Rows[0]["Nth"].ToString();
                    ViewBag.E1T1threclock = result.Tables[1].Rows[0]["Eth"].ToString();

                    DateTime sDateN = Convert.ToDateTime(result.Tables[6].Rows[0]["sDate"]);
                    DateTime eDateN = Convert.ToDateTime(result.Tables[6].Rows[0]["eDate"]);

                    DateTime sDateM = Convert.ToDateTime(result.Tables[6].Rows[1]["sDate"]);
                    DateTime eDateM = Convert.ToDateTime(result.Tables[6].Rows[1]["eDate"]);

                    DateTime sDateE = Convert.ToDateTime(result.Tables[6].Rows[2]["sDate"]);
                    DateTime eDateE = Convert.ToDateTime(result.Tables[6].Rows[2]["eDate"]);

                    DateTime sDateT = Convert.ToDateTime(result.Tables[6].Rows[3]["sDate"]);
                    DateTime eDateT = Convert.ToDateTime(result.Tables[6].Rows[3]["eDate"]);

                    DateTime sDateMO = Convert.ToDateTime(result.Tables[6].Rows[4]["sDate"]);
                    DateTime eDateMO = Convert.ToDateTime(result.Tables[6].Rows[4]["eDate"]);

                    DateTime sDateTO = Convert.ToDateTime(result.Tables[6].Rows[5]["sDate"]);
                    DateTime eDateTO = Convert.ToDateTime(result.Tables[6].Rows[5]["eDate"]);

                    DateTime dtTodate = Convert.ToDateTime(DateTime.Today);

                    List<SelectListItem> itemsch = new List<SelectListItem>();
                    if (ViewBag.N3M1threclock == "1" && dtTodate <= eDateN)
                    {
                        itemsch.Add(new SelectListItem { Text = "9th Class", Value = "5" });
                    }
                    if (ViewBag.Matric == "1" && dtTodate <= eDateM)
                    {
                        itemsch.Add(new SelectListItem { Text = "Matriculation Regular", Value = "1" });
                    }
                    if (ViewBag.OMatric == "1" && dtTodate <= eDateMO)
                    {
                        itemsch.Add(new SelectListItem { Text = "Matriculation Open", Value = "2" });
                    }
                    if (ViewBag.E1T1threclock == "1" && dtTodate <= eDateE)
                    {
                        itemsch.Add(new SelectListItem { Text = "11th Class", Value = "6" });
                    }
                    if (ViewBag.Senior == "1" && dtTodate <= eDateT)
                    {
                        itemsch.Add(new SelectListItem { Text = "Sr.Secondary Regular", Value = "3" });
                    }
                    if (ViewBag.OSenior == "1" && dtTodate <= eDateTO)
                    {
                        itemsch.Add(new SelectListItem { Text = "Sr.Secondary Open", Value = "4" });
                    }


                    if (ViewBag.Matric != "1" && ViewBag.OMatric != "1" && ViewBag.Senior != "1" && ViewBag.OSenior != "1" && ViewBag.N3M1threclock != "1" && ViewBag.E1T1threclock != "1")
                    {
                        itemsch.Add(new SelectListItem { Text = "", Value = "" });
                    }
                    ViewBag.MySch = itemsch.ToList();

                }
                if (ModelState.IsValid)
                { return View(rm); }
                else
                { return View(); }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }

        [HttpPost]
        public ActionResult SchoolCorrection(FormCollection frm, RegistrationModels rm, int? page, string cmd)
        {
            try
            {
                ViewBag.nsfqPatternList = objCommon.GetNsqfPatternList();
                int pageIndex = 1;
                pageIndex = page.HasValue ? Convert.ToInt32(page) : 1;
                ViewBag.pagesize = pageIndex;
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                //RegistrationModels rm = new RegistrationModels();
                rm = new RegistrationModels();
                string schid = Session["SCHL"].ToString();
                DataSet result = objDB.schooltypesCorrection(schid, "P"); // passing Value to DBClass from model
                if (result.Tables[1].Rows.Count > 0)
                {

                    ViewBag.Matric = result.Tables[1].Rows[0]["Matric"].ToString();
                    ViewBag.OMatric = result.Tables[1].Rows[0]["OMatric"].ToString();
                    ViewBag.Senior = result.Tables[1].Rows[0]["Senior"].ToString();
                    ViewBag.OSenior = result.Tables[1].Rows[0]["OSenior"].ToString();
                    ViewBag.N3M1threclock = result.Tables[1].Rows[0]["Nth"].ToString();
                    ViewBag.E1T1threclock = result.Tables[1].Rows[0]["Eth"].ToString();

                    DateTime sDateN = Convert.ToDateTime(result.Tables[6].Rows[0]["sDate"]);
                    DateTime eDateN = Convert.ToDateTime(result.Tables[6].Rows[0]["eDate"]);

                    DateTime sDateM = Convert.ToDateTime(result.Tables[6].Rows[1]["sDate"]);
                    DateTime eDateM = Convert.ToDateTime(result.Tables[6].Rows[1]["eDate"]);

                    DateTime sDateE = Convert.ToDateTime(result.Tables[6].Rows[2]["sDate"]);
                    DateTime eDateE = Convert.ToDateTime(result.Tables[6].Rows[2]["eDate"]);

                    DateTime sDateT = Convert.ToDateTime(result.Tables[6].Rows[3]["sDate"]);
                    DateTime eDateT = Convert.ToDateTime(result.Tables[6].Rows[3]["eDate"]);

                    DateTime sDateMO = Convert.ToDateTime(result.Tables[6].Rows[4]["sDate"]);
                    DateTime eDateMO = Convert.ToDateTime(result.Tables[6].Rows[4]["eDate"]);

                    DateTime sDateTO = Convert.ToDateTime(result.Tables[6].Rows[5]["sDate"]);
                    DateTime eDateTO = Convert.ToDateTime(result.Tables[6].Rows[5]["eDate"]);

                    DateTime dtTodate = Convert.ToDateTime(DateTime.Today);

                    List<SelectListItem> itemsch = new List<SelectListItem>();
                    if (ViewBag.N3M1threclock == "1" && eDateN >= dtTodate)
                    {
                        itemsch.Add(new SelectListItem { Text = "9th Class", Value = "5" });
                    }
                    if (ViewBag.Matric == "1" && dtTodate <= eDateM)
                    {
                        itemsch.Add(new SelectListItem { Text = "Matriculation Regular", Value = "1" });
                    }
                    if (ViewBag.OMatric == "1" && dtTodate <= eDateMO)
                    {
                        itemsch.Add(new SelectListItem { Text = "Matriculation Open", Value = "2" });
                    }
                    if (ViewBag.E1T1threclock == "1" && dtTodate <= eDateE)
                    {
                        itemsch.Add(new SelectListItem { Text = "11th Class", Value = "6" });
                    }
                    if (ViewBag.Senior == "1" && dtTodate <= eDateT)
                    {
                        itemsch.Add(new SelectListItem { Text = "Sr.Secondary Regular", Value = "3" });
                    }
                    if (ViewBag.OSenior == "1" && dtTodate <= eDateTO)
                    {
                        itemsch.Add(new SelectListItem { Text = "Sr.Secondary Open", Value = "4" });
                    }


                    if (ViewBag.Matric != "1" && ViewBag.OMatric != "1" && ViewBag.Senior != "1" && ViewBag.OSenior != "1" && ViewBag.N3M1threclock != "1" && ViewBag.E1T1threclock != "1")
                    {
                        itemsch.Add(new SelectListItem { Text = "", Value = "" });
                    }
                    ViewBag.MySch = itemsch.ToList();

                }

                if (ModelState.IsValid)
                {
                    string Search = string.Empty;
                    string Std_id = frm["SearchString"];
                    string schlid = "";
                    if (Session["SCHL"] != null)
                    {
                        schlid = Session["SCHL"].ToString();
                    }

                    else
                    {
                        return View(rm);
                    }
                    switch (frm["SelList"].ToString())
                    {
                        case "1":
                            Search = "a.form_Name in ('M1','M2') and a.schl='" + schlid + "' and a.std_id='" + Std_id + "'";
                            break;
                        case "2":
                            Search = "a.form in ('M3') and a.schl='" + schlid + "' and a.APPNO='" + Std_id + "'";
                            break;
                        case "3":
                            Search = "a.form_Name in ('T1','T2') and a.schl='" + schlid + "' and a.std_id='" + Std_id + "'";
                            break;
                        case "4":
                            Search = "a.form in ('T3') and a.schl='" + schlid + "' and a.APPNO='" + Std_id + "'";
                            break;
                        case "5":
                            Search = "a.form_Name in ('N1','N2','N3') and a.schl='" + schlid + "' and a.std_id='" + Std_id + "'";
                            break;
                        case "6":
                            Search = "a.form_Name in ('E1','E2') and a.schl='" + schlid + "' and a.std_id='" + Std_id + "'";
                            break;
                    }
                    ViewBag.SelectedItem = frm["SelList"];
                    ViewBag.Searchstring = frm["SearchString"];
                    int SelValueSch = 0;
                    if (frm["SelList"].ToString() == "")
                    {
                        SelValueSch = 1;
                        Search = "form_Name in ('')";
                    }
                    else
                    {
                        SelValueSch = Convert.ToInt32(frm["SelList"].ToString());
                    }
                    #region Add Record Region Begin
                    if (cmd == "Add Record")
                    {
                        rm.Std_id = Convert.ToInt32(frm["SearchString"]);
                        rm.Class = frm["SelList"];
                        rm.Correctiontype = frm["SelListField"];
                        rm.oldVal = frm["oldVal"];
                        if (rm.Correctiontype == "Candi_Name_P" || rm.Correctiontype == "Father_Name_P" || rm.Correctiontype == "Mother_Name_P")
                        {
                            rm.newVal = frm["newValP"];
                        }
                        else if (rm.Correctiontype == "Caste")
                        {
                            rm.newVal = frm["newValCaste"];
                        }
                        else if (rm.Correctiontype == "DOB")
                        {
                            rm.newVal = frm["newValDOB"];
                        }
                        else if (rm.Correctiontype == "Gender")
                        {
                            rm.newVal = frm["newValGender"];
                        }
                        else if (rm.Correctiontype == "category")
                        {
                            rm.newVal = frm["newValcorCategory"];
                        }
                        else if (rm.Correctiontype == "CandStudyMedium")
                        {
                            rm.newVal = frm["newValcorCSM"];
                        }
                        else if (rm.Correctiontype == "Differently_Abled")
                        {
                            rm.newVal = frm["Differently_Abled"];
                        }
                        else if (rm.Correctiontype == "wantwriter")
                        {
                            rm.newVal = frm["wantwriter"];
                        }
                        else if (rm.Correctiontype == "Religion")
                        {
                            rm.newVal = frm["Relist"];
                        }
                        else if (rm.Correctiontype == "EXAM")
                        {
                            rm.newVal = frm["Grouplist"];
                        }
                        else if (rm.Correctiontype == "Month" || rm.Correctiontype == "MetricMonth")
                        {
                            rm.newVal = frm["Monthlist"].ToUpper();
                        }

                        else if (rm.Correctiontype == "Year")
                        {
                            rm.newVal = frm["Yearlist"].ToUpper();
                        }
                        else if (rm.Correctiontype == "MetricYear")
                        {
                            rm.newVal = frm["MatYearlist"].ToUpper();
                        }

                        else if (rm.Correctiontype == "Admission_Date")
                        {
                            rm.newVal = frm["Admission_Date"];
                        }
                        else if (rm.Correctiontype == "Belongs_BPL")
                        {
                            rm.newVal = frm["Belongs_BPL"].ToUpper();
                        }
                        else if (rm.Correctiontype == "Board")
                        {
                            rm.newVal = frm["Board"].ToUpper();
                        }
                        else if (rm.Correctiontype == "MatricBoard")
                        {
                            rm.newVal = frm["MatricBoard"].ToUpper();
                        }
                        else if (rm.Correctiontype == "MatricResult")
                        {
                            rm.newVal = frm["MatricResult"].ToUpper();
                        }
                        else if (rm.Correctiontype == "Tehsil")
                        {
                            rm.newVal = frm["SelAllTehsil"].ToUpper();
                        }
                        else if (rm.Correctiontype == "District")
                        {
                            rm.newVal = frm["SelAllDistrict"].ToUpper();
                        }
                        else if (rm.Correctiontype == "Section")
                        {
                            rm.newVal = frm["Section"].ToUpper();
                        }
                        else if (rm.Correctiontype == "NSQF_SUB" || rm.Correctiontype == "PRE_NSQF_SUB")
                        {
                            rm.newVal = frm["SelNSQF"].ToUpper();
                        }
                        else if (rm.Correctiontype == "NSQFPattern")
                        {
                            rm.newVal = frm["NSQFPattern"].ToUpper();
                        }

                        else
                        {
                            rm.newVal = frm["newVal"];
                        }

                        rm.Remark = frm["Remark"];
                        ViewBag.SelectedItem = frm["SelList"];
                        ViewBag.Searchstring = frm["SearchString"];
                        rm.SCHL = Session["SCHL"].ToString();

                        DataSet result1 = objDB.InsertSchoolCorrectionAdd(rm, frm);
                        if (result1 != null)
                        {
                            ViewData["Status"] = result1.Tables[0].Rows[0]["res"].ToString();
                            TempData["msg"] = result1.Tables[0].Rows[0]["msg"].ToString();
                        }
                        else
                        {
                            ViewData["Status"] = "-1";
                        }

                    }
                    #endregion Add Record

                    rm.StoreAllData = objDB.GetCorrectionStudentRecordsSearch_ED(Search, SelValueSch, pageIndex);
                    rm.Correctiondata = null;
                    ViewBag.TotalCountadded = "";
                    rm.Correctiondata = objDB.GetStudentRecordsCorrectiondataPending(schlid);
                    ViewBag.TotalCountadded = rm.Correctiondata.Tables[0].Rows.Count;

                    #region Pending Record Region Begin
                    if (cmd == "View All Correction Pending Record")
                    {
                        rm.Correctiondata = null;
                        ViewBag.TotalCountadded = "";
                        rm.Correctiondata = objDB.GetStudentRecordsCorrectiondataPending(schlid);
                        ViewBag.TotalCountadded = rm.Correctiondata.Tables[0].Rows.Count;

                        ViewBag.TotalViewAllCount = rm.Correctiondata.Tables[0].Rows.Count;
                    }
                    #endregion Pending Record Region Begin
                    #region View All Correction Record
                    if (cmd == "View All Correction Record")
                    {
                        //ViewBag.TotalViewAllCount = rm.Correctiondata.Tables[0].Rows.Count;
                        rm.Correctiondata = objDB.GetStudentRecordsCorrectiondata(schlid);
                        ViewBag.TotalCountadded = rm.Correctiondata.Tables[0].Rows.Count;
                    }
                    if (rm.Correctiondata == null || rm.Correctiondata.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message2 = "Record Not Found";
                        ViewBag.TotalCount2 = 0;
                    }
                    #endregion View All Correction Record

                    if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message = "Record Not Found";
                        ViewBag.TotalCount = 0;

                        return View(rm);
                    }
                    else
                    {

                        ViewBag.TotalCountSearch = rm.StoreAllData.Tables[0].Rows.Count;
                        string std_Class = rm.StoreAllData.Tables[0].Rows[0]["form_Name"].ToString();

                        ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
                        ViewBag.MyMatricResult = objCommon.GetMatricResult();

                        DataSet AllTehsil = objDB.getAllTehsil();
                        ViewBag.MyAllTehsil = AllTehsil.Tables[0];
                        List<SelectListItem> itemsTeh = new List<SelectListItem>();
                        foreach (System.Data.DataRow dr in ViewBag.MyAllTehsil.Rows)
                        {
                            itemsTeh.Add(new SelectListItem { Text = @dr["TehsilName"].ToString(), Value = @dr["TehsilCode"].ToString() });
                        }
                        ViewBag.MyAllTehsil = new SelectList(itemsTeh, "Value", "Text");

                        DataSet AllDistrict = objDB.getAllDistrict();
                        ViewBag.MyAllDistrict = AllDistrict.Tables[0];
                        List<SelectListItem> itemsDis = new List<SelectListItem>();
                        foreach (System.Data.DataRow dr in ViewBag.MyAllDistrict.Rows)
                        {
                            itemsDis.Add(new SelectListItem { Text = @dr["DistName"].ToString(), Value = @dr["DistCode"].ToString() });
                        }
                        ViewBag.MyAllDistrict = new SelectList(itemsDis, "Value", "Text");

                        //---------BEGIN NSQF SUBJECT FOR 9TH AND 11TH ---------
                        string nsqfsub = null;
                        List<SelectListItem> nsfqList = new List<SelectListItem>();
                        if (frm["SelList"].ToString() == "5") // 9th class nsqf subject
                        {
                            DataSet nsresult = objDB.SelectS9(nsqfsub); // passing Value to DBClass from model
                            ViewBag.nsfq = nsresult.Tables[0];

                            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                            {
                                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
                            }
                        }
                        else if (frm["SelList"].ToString() == "6") // 11th class nsqf subject
                        {
                            DataSet nsresult = objDB.SelectS11(nsqfsub); // passing Value to DBClass from model
                            ViewBag.nsfq = nsresult.Tables[0];

                            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                            {
                                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
                            }
                            nsfqList.Add(new SelectListItem { Text = "SECURITY", Value = "N05" });
                        }
                        else if (frm["SelList"].ToString() == "3") // 11th class nsqf subject
                        {
                            DataSet nsresult = objDB.SelectS12(nsqfsub); // passing Value to DBClass from model
                            ViewBag.nsfq = nsresult.Tables[0];

                            nsfqList.Add(new SelectListItem { Text = "NO", Value = "NO" });
                            foreach (System.Data.DataRow dr in ViewBag.nsfq.Rows)
                            {
                                nsfqList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["NSQF"].ToString() });
                            }

                        }

                        ViewBag.MySelNSQF = new SelectList(nsfqList, "Value", "Text");

                        //---------END NSQF SUBJECT FOR 9TH AND 11TH ---------


                        DataSet CorrectionField = objDB.getCorrrectionField(std_Class);
                        ViewBag.MySchField = CorrectionField.Tables[0];
                        List<SelectListItem> items = new List<SelectListItem>();
                        foreach (System.Data.DataRow dr in ViewBag.MySchField.Rows)
                        {
                            items.Add(new SelectListItem { Text = @dr["CorrectionFieldDisplayName"].ToString(), Value = @dr["CorrectionFieldName"].ToString() });
                        }

                        if (rm.StoreAllData.Tables[0].Rows[0]["aashirwardnumber"].ToString() == "")
                        {
                            for (int i = 1; i < CorrectionField.Tables[0].Rows.Count; i++)
                            {
                                if ((items[i]).Value == "aashirwardnumber")
                                {
                                    items.Remove(items[i]);
                                    CorrectionField.Tables[0].Rows.RemoveAt(i);
                                }

                            }
                        }

                        //-----------------------------------------------------Nsqf -------------------------
                        string ses = Session["Session"].ToString();
                        string schlcode = Session["SCHL"].ToString();
                        DataSet dsnsqf = objDB.CHkNSQF(schlcode, ses);
                        if (dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "True" || dsnsqf.Tables[0].Rows[0]["NSQF_flag"].ToString() == "1")
                        {
                            ViewData["NSQFSCHOOL"] = "1";
                        }
                        else
                        {
                            ViewData["NSQFSCHOOL"] = "0";
                        }

                        if (ViewData["NSQFSCHOOL"].ToString() == "0")
                        {
                            for (int i = 1; i < CorrectionField.Tables[0].Rows.Count; i++)
                            {
                                if ((items[i]).Value == "NSQF_SUB")
                                {
                                    items.Remove(items[i]);
                                    CorrectionField.Tables[0].Rows.RemoveAt(i);
                                }
                            }
                        }
                        if (ViewData["NSQFSCHOOL"].ToString() == "0")
                        {
                            for (int i = 1; i < CorrectionField.Tables[0].Rows.Count; i++)
                            {
                                if ((items[i]).Value == "PRE_NSQF_SUB")
                                {
                                    items.Remove(items[i]);
                                    CorrectionField.Tables[0].Rows.RemoveAt(i);
                                }
                            }
                        }
                        ViewBag.MySchField = new SelectList(items, "Value", "Text");

                        List<SelectListItem> MyGroupList = objCommon.GroupName();
                        DataTable dtAssignSubject = objCommon.GetAssignSubjectBySchool(Session["SCHL"].ToString());
                        if (dtAssignSubject != null && dtAssignSubject.Rows.Count > 0)
                        {
                            ViewBag.MyGrouplist = objCommon.GetSubjectsBySchool(dtAssignSubject, MyGroupList);
                        }
                        ViewBag.MyGrouplist = MyGroupList;

                        List<SelectListItem> yearlist = objCommon.GetSessionYear();
                        List<SelectListItem> yearlist1 = objCommon.GetSessionYear();
                        ViewBag.SessionMatYearListPrev = yearlist1;
                        if (rm.StoreAllData.Tables[0].Rows[0]["category"].ToString().ToUpper().Contains("FAILED"))
                        {
                            //yearlist.RemoveRange(3, 45);
                            yearlist.RemoveRange(3, (yearlist.Count - 3));
                            //yearlist.Remove(yearlist[0]);
                            //yearlist.Remove(yearlist[0]);
                            // yearlist.ToList().Where(s => Convert.ToInt32(s.Value) >= 2013);
                            ViewBag.SessionYearListPrev = yearlist;
                        }
                        else
                        {
                            ViewBag.SessionYearListPrev = yearlist;
                        }


                        ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                        ViewBag.TotalCount1 = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                        int tp = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                        int pn = tp / 30;
                        int cal = 30 * pn;
                        int res = Convert.ToInt32(ViewBag.TotalCount1) - cal;
                        if (res >= 1)
                            ViewBag.pn = pn + 1;
                        else
                            ViewBag.pn = pn;
                        return View(rm);
                    }
                }
                else
                {
                    return View();
                }
            }
            catch (Exception ex)
            {
                return View();
            }
        }


        //[HttpPost]
        //public ActionResult SchoolCorrectionAdd(FormCollection frm)
        //{
        //    //FormCollection frm = new FormCollection();
        //    AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
        //    RegistrationModels rm = new RegistrationModels();

        //    if (ModelState.IsValid)
        //    {

        //        if (Session["SCHL"] != null)
        //        {
        //            rm.SCHL = Session["SCHL"].ToString();
        //        }
        //        else
        //        {
        //            return RedirectToAction("Logout", "Login");
        //        }
        //        rm.Std_id = Convert.ToInt32(frm["SearchString"]);
        //        rm.Class = frm["SelList"];
        //        rm.Correctiontype = frm["SelListField"];
        //        rm.oldVal = frm["oldVal"];
        //        //if (rm.Correctiontype == "Candi_Name" || rm.Correctiontype == "Father_Name" || rm.Correctiontype == "Mother_Name")
        //        //{
        //        //    rm.newVal = frm["newVal"];
        //        //}
        //        //else 
        //        if (rm.Correctiontype == "Candi_Name_P" || rm.Correctiontype == "Father_Name_P" || rm.Correctiontype == "Mother_Name_P")
        //        {
        //            rm.newVal = frm["newValP"];
        //        }
        //        else if (rm.Correctiontype == "Caste")
        //        {
        //            rm.newVal = frm["newValCaste"];
        //        }
        //        else if (rm.Correctiontype == "DOB")
        //        {
        //            rm.newVal = frm["newValDOB"];
        //        }
        //        else if (rm.Correctiontype == "Gender")
        //        {
        //            rm.newVal = frm["newValGender"];
        //        }
        //        else
        //        {
        //            rm.newVal = frm["newVal"];
        //        }

        //        rm.Remark = frm["Remark"];
        //        ViewBag.SelectedItem = frm["SelList"];
        //        ViewBag.Searchstring = frm["SearchString"];

        //        string result = objDB.InsertSchoolCorrectionAdd(rm, frm);
        //        if (result == "0" || result == null)
        //        {
        //            //--------------Not updated
        //            ViewData["resultUpdate"] = 0;
        //        }
        //        if (result == "-1")
        //        {
        //            //-----alredy exist
        //            ViewData["resultUpdate"] = -1;
        //        }
        //        else
        //        {
        //            ModelState.Clear();
        //            //--For Showing Message---------//
        //            ViewData["resultUpdate"] = result;
        //            return RedirectToAction("SchoolCorrection", "RegistrationPortal");

        //        }
        //    }
        //    return RedirectToAction("SchoolCorrection", "RegistrationPortal");
        //}

        public ActionResult AiddedCorrectionRecordDelete(string id)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            try
            {
                if (id == null)
                {
                    return RedirectToAction("SchoolCorrection", "RegistrationPortal");
                }
                else
                {
                    string result = objDB.AiddedCorrectionRecordDelete(id); // passing Value to DBClass from model
                    if (result == "1")
                    {
                        ViewData["DeleteStatus"] = result;
                        return RedirectToAction("SchoolCorrection", "RegistrationPortal");
                    }
                    else
                    {
                        ViewData["DeleteStatus"] = "";
                        return RedirectToAction("SchoolCorrection", "RegistrationPortal");
                    }


                }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Index", "Login");
            }
        }

        public ActionResult FinalSubmitCorrection(FormCollection frm)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            try
            {
                if (ModelState.IsValid)
                {

                    if (Session["SCHL"] != null)
                    {

                        rm.SCHL = Session["SCHL"].ToString();
                        //rm.Class = frm["SelList"];
                        rm.Correctiontype = "02";
                        string resultFS = objDB.FinalSubmitCorrection(rm); // passing Value to DBClass from model
                        if (Convert.ToInt16(resultFS) > 0)
                        {
                            ViewData["resultFS"] = resultFS;
                            return RedirectToAction("SchoolCorrectionFinalPrintLst", "RegistrationPortal");
                        }
                        else
                        {
                            ViewData["resultFS"] = "";
                            return RedirectToAction("SchoolCorrection", "RegistrationPortal");
                        }
                    }
                    else
                    {
                        return RedirectToAction("Logout", "Login");
                    }
                }
                else
                {
                    return RedirectToAction("Logout", "Login");
                }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Index", "Login");
            }
        }

        public ActionResult ExitCorrection()
        {
            try
            {

                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                return RedirectToAction("Index", "Home");
                //return RedirectToAction("SchoolCorrection", "RegistrationPortal");
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }

        }

        public ActionResult SchoolCorrectionPerformaFinalPrintSession(string id)
        {

            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            try
            {
                if (ModelState.IsValid)
                {

                    if (Session["SCHL"] != null)
                    {
                        rm.CorrectionLot = id;
                        rm.SCHL = Session["SCHL"].ToString();
                        rm.Correctiondatafinal = objDB.SchoolCorrectionPerformaFinalPrintSession(rm); // passing Value to DBClass from model
                        if (rm.Correctiondatafinal.Tables[0].Rows.Count > 0)
                        {
                            ViewData["resultFS"] = rm.Correctiondatafinal.Tables[0].Rows.Count;
                            ViewBag.TotalCountaddedRecord = rm.Correctiondatafinal.Tables[0].Rows.Count;
                            rm.SCHL = rm.Correctiondatafinal.Tables[0].Rows[0]["SCHL"].ToString();
                            rm.DIST = Convert.ToInt32(rm.Correctiondatafinal.Tables[0].Rows[0]["DIST"]);
                            rm.schlCorNameE = rm.Correctiondatafinal.Tables[0].Rows[0]["SchlFullNME"].ToString();
                            rm.schlCorConDetails = rm.Correctiondatafinal.Tables[0].Rows[0]["schlCorConDetails"].ToString();
                            //rm.CorrectionId = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionId"].ToString();
                            //rm.SCHL = rm.Correctiondatafinal.Tables[0].Rows[0]["Schl"].ToString();
                            rm.Class = rm.Correctiondatafinal.Tables[0].Rows[0]["Class"].ToString();
                            //rm.Std_id = Convert.ToInt32(rm.Correctiondatafinal.Tables[0].Rows[0]["Std_id"]);
                            rm.CorrectionLot = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionLot"].ToString();
                            //rm.oldVal = rm.Correctiondatafinal.Tables[0].Rows[0]["OldValue"].ToString();
                            //rm.newVal = rm.Correctiondatafinal.Tables[0].Rows[0]["NewValue"].ToString();
                            rm.Correctiontype = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionFieldDisplayName"].ToString();
                            rm.Remark = rm.Correctiondatafinal.Tables[0].Rows[0]["Remark"].ToString();
                            rm.CorrectionInsertDt = rm.Correctiondatafinal.Tables[0].Rows[0]["InsertDt"].ToString();
                            rm.CorrectionFinalSubmitDt = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionFinalSubmitDt1"].ToString();
                            rm.CorrectionVerifyDt = rm.Correctiondatafinal.Tables[0].Rows[0]["VerifyDt"].ToString();
                            ViewBag.OldSubjlist = rm.Correctiondatafinal.Tables[0].Rows[0]["OlDsubjectList"].ToString();
                            ViewBag.NewSubjlist = rm.Correctiondatafinal.Tables[0].Rows[0]["NewSubjectList"].ToString();
                            return View(rm);
                        }
                        else
                        {
                            ViewData["resultFS"] = "";
                            return RedirectToAction("SchoolCorrection", "RegistrationPortal");
                        }
                    }
                    else
                    {
                        return RedirectToAction("Logout", "Login");
                    }
                }
                else
                {
                    return RedirectToAction("Logout", "Login");
                }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Index", "Login");
            }
        }

        public ActionResult SchoolCorrectionPerformaFinalPrintSessionPS(string id)
        {

            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            try
            {
                if (ModelState.IsValid)
                {

                    if (Session["SCHL"] != null)
                    {
                        rm.CorrectionLot = id;
                        rm.SCHL = Session["SCHL"].ToString();
                        rm.Correctiondatafinal = objDB.SchoolCorrectionPerformaFinalPrintSession(rm); // passing Value to DBClass from model
                        if (rm.Correctiondatafinal.Tables[0].Rows.Count > 0)
                        {
                            ViewData["resultFS"] = rm.Correctiondatafinal.Tables[0].Rows.Count;
                            ViewBag.TotalCountaddedRecord = rm.Correctiondatafinal.Tables[0].Rows.Count;
                            rm.SCHL = rm.Correctiondatafinal.Tables[0].Rows[0]["SCHL"].ToString();
                            rm.DIST = Convert.ToInt32(rm.Correctiondatafinal.Tables[0].Rows[0]["DIST"]);
                            rm.schlCorNameE = rm.Correctiondatafinal.Tables[0].Rows[0]["SchlFullNME"].ToString();
                            rm.schlCorConDetails = rm.Correctiondatafinal.Tables[0].Rows[0]["schlCorConDetails"].ToString();
                            //rm.CorrectionId = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionId"].ToString();
                            //rm.SCHL = rm.Correctiondatafinal.Tables[0].Rows[0]["Schl"].ToString();
                            rm.Class = rm.Correctiondatafinal.Tables[0].Rows[0]["Class"].ToString();
                            //rm.Std_id = Convert.ToInt32(rm.Correctiondatafinal.Tables[0].Rows[0]["Std_id"]);
                            rm.CorrectionLot = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionLot"].ToString();
                            //rm.oldVal = rm.Correctiondatafinal.Tables[0].Rows[0]["OldValue"].ToString();
                            //rm.newVal = rm.Correctiondatafinal.Tables[0].Rows[0]["NewValue"].ToString();
                            rm.Correctiontype = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionFieldDisplayName"].ToString();
                            rm.Remark = rm.Correctiondatafinal.Tables[0].Rows[0]["Remark"].ToString();
                            rm.CorrectionInsertDt = rm.Correctiondatafinal.Tables[0].Rows[0]["InsertDt"].ToString();
                            rm.CorrectionFinalSubmitDt = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionFinalSubmitDt1"].ToString();
                            rm.CorrectionVerifyDt = rm.Correctiondatafinal.Tables[0].Rows[0]["VerifyDt"].ToString();
                            ViewBag.OldSubjlist = rm.Correctiondatafinal.Tables[0].Rows[0]["OlDsubjectList"].ToString();
                            ViewBag.NewSubjlist = rm.Correctiondatafinal.Tables[0].Rows[0]["NewSubjectList"].ToString();
                            return View(rm);
                        }
                        else
                        {
                            ViewData["resultFS"] = "";
                            return RedirectToAction("SchoolCorrection", "RegistrationPortal");
                        }
                    }
                    else
                    {
                        return RedirectToAction("Logout", "Login");
                    }
                }
                else
                {
                    return RedirectToAction("Logout", "Login");
                }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Index", "Login");
            }
        }

        public ActionResult SchoolCorrectionFinalPrintLst()
        {
            try
            {
                //ViewBag.SelectedItem
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    return RedirectToAction("SchoolCorrectionFinalPrintList", "RegistrationPortal");
                }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }

        public ActionResult SchoolCorrectionFinalPrintList()
        {
            try
            {
                //ViewBag.SelectedItem
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    rm.SCHL = Session["SCHL"].ToString();
                    rm.Correctiondata = objDB.GetCorrectiondataFinalPrintList(rm);
                    ViewBag.TotalCountadded = rm.Correctiondata.Tables[0].Rows.Count;
                    ViewBag.TotalCountaddedSub = rm.Correctiondata.Tables[1].Rows.Count;
                    ViewBag.TotalCountaddedStream = rm.Correctiondata.Tables[2].Rows.Count;
                    ViewBag.TotalCountaddedPhotoSign = rm.Correctiondata.Tables[3].Rows.Count;
                    if (rm.Correctiondata == null && rm.Correctiondata.Tables[0].Rows.Count == 0 && rm.Correctiondata.Tables[1].Rows.Count == 0 && rm.Correctiondata.Tables[2].Rows.Count == 0 && rm.Correctiondata.Tables[3].Rows.Count == 0)
                    {
                        ViewBag.Message = "Record Not Found";
                        ViewBag.TotalCount = 0;
                    }
                    return View(rm);
                }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }

        public JsonResult GetPunabiName(string s, string f) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            DataSet result = objDB.GetCorrPunjabiName(s); // passing Value to DBClass from model            
            List<SelectListItem> OList = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in result.Tables[0].Rows)
            {
                if (f == "Candi_Name_P")
                {
                    OList.Add(new SelectListItem { Text = @dr["Candi_Name_P"].ToString() });
                }
                if (f == "Father_Name_P")
                {
                    OList.Add(new SelectListItem { Text = @dr["Father_Name_P"].ToString() });
                }
                if (f == "Mother_Name_P")
                {
                    OList.Add(new SelectListItem { Text = @dr["Mother_Name_P"].ToString() });
                }


            }
            return Json(OList);
        }

        public ActionResult SchoolCorrectionPerformaRoughReport(string id)
        {

            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            try
            {
                if (ModelState.IsValid)
                {

                    if (Session["SCHL"] != null)
                    {
                        id = "02";
                        rm.CorrectionLot = id;
                        rm.SCHL = Session["SCHL"].ToString();
                        rm.Correctiondatafinal = objDB.SchoolCorrectionPerformaRoughReport(rm); // passing Value to DBClass from model
                        if (rm.Correctiondatafinal.Tables[0].Rows.Count > 0)
                        {
                            ViewData["resultFS"] = rm.Correctiondatafinal.Tables[0].Rows.Count;
                            ViewBag.TotalCountaddedRecord = rm.Correctiondatafinal.Tables[0].Rows.Count;
                            rm.SCHL = rm.Correctiondatafinal.Tables[0].Rows[0]["SCHL"].ToString();
                            rm.DIST = Convert.ToInt32(rm.Correctiondatafinal.Tables[0].Rows[0]["DIST"]);
                            rm.schlCorNameE = rm.Correctiondatafinal.Tables[0].Rows[0]["SchlFullNME"].ToString();
                            rm.schlCorConDetails = rm.Correctiondatafinal.Tables[0].Rows[0]["schlCorConDetails"].ToString();
                            //rm.CorrectionId = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionId"].ToString();
                            //rm.SCHL = rm.Correctiondatafinal.Tables[0].Rows[0]["Schl"].ToString();
                            rm.Class = rm.Correctiondatafinal.Tables[0].Rows[0]["Class"].ToString();
                            //rm.Std_id = Convert.ToInt32(rm.Correctiondatafinal.Tables[0].Rows[0]["Std_id"]);
                            rm.CorrectionLot = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionLot"].ToString();
                            //rm.oldVal = rm.Correctiondatafinal.Tables[0].Rows[0]["OldValue"].ToString();
                            //rm.newVal = rm.Correctiondatafinal.Tables[0].Rows[0]["NewValue"].ToString();
                            rm.Correctiontype = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionFieldDisplayName"].ToString();
                            rm.Remark = rm.Correctiondatafinal.Tables[0].Rows[0]["Remark"].ToString();
                            rm.CorrectionInsertDt = rm.Correctiondatafinal.Tables[0].Rows[0]["InsertDt"].ToString();
                            rm.CorrectionFinalSubmitDt = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionFinalSubmitDt1"].ToString();
                            rm.CorrectionVerifyDt = rm.Correctiondatafinal.Tables[0].Rows[0]["VerifyDt"].ToString();
                            ViewBag.OldSubjlist = rm.Correctiondatafinal.Tables[0].Rows[0]["OlDsubjectList"].ToString();
                            ViewBag.NewSubjlist = rm.Correctiondatafinal.Tables[0].Rows[0]["NewSubjectList"].ToString();
                            return View(rm);
                        }
                        else
                        {
                            ViewData["resultFS"] = "";
                            return RedirectToAction("SchoolCorrection", "RegistrationPortal");
                        }
                    }
                    else
                    {
                        return RedirectToAction("Logout", "Login");
                    }
                }
                else
                {
                    return RedirectToAction("Logout", "Login");
                }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Index", "Login");
            }
        }

        public ActionResult SchoolCorrectionPerformaRoughReportPS(string id)
        {

            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            try
            {
                if (ModelState.IsValid)
                {

                    if (Session["SCHL"] != null)
                    {
                        id = "04";
                        rm.CorrectionLot = id;
                        rm.SCHL = Session["SCHL"].ToString();
                        rm.Correctiondatafinal = objDB.SchoolCorrectionPerformaRoughReport(rm); // passing Value to DBClass from model
                        if (rm.Correctiondatafinal.Tables[0].Rows.Count > 0)
                        {
                            ViewData["resultFS"] = rm.Correctiondatafinal.Tables[0].Rows.Count;
                            ViewBag.TotalCountaddedRecord = rm.Correctiondatafinal.Tables[0].Rows.Count;
                            rm.SCHL = rm.Correctiondatafinal.Tables[0].Rows[0]["SCHL"].ToString();
                            rm.DIST = Convert.ToInt32(rm.Correctiondatafinal.Tables[0].Rows[0]["DIST"]);
                            rm.schlCorNameE = rm.Correctiondatafinal.Tables[0].Rows[0]["SchlFullNME"].ToString();
                            rm.schlCorConDetails = rm.Correctiondatafinal.Tables[0].Rows[0]["schlCorConDetails"].ToString();
                            //rm.CorrectionId = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionId"].ToString();
                            //rm.SCHL = rm.Correctiondatafinal.Tables[0].Rows[0]["Schl"].ToString();
                            rm.Class = rm.Correctiondatafinal.Tables[0].Rows[0]["Class"].ToString();
                            //rm.Std_id = Convert.ToInt32(rm.Correctiondatafinal.Tables[0].Rows[0]["Std_id"]);
                            rm.CorrectionLot = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionLot"].ToString();
                            //rm.oldVal = rm.Correctiondatafinal.Tables[0].Rows[0]["OldValue"].ToString();
                            //rm.newVal = rm.Correctiondatafinal.Tables[0].Rows[0]["NewValue"].ToString();
                            rm.Correctiontype = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionFieldDisplayName"].ToString();
                            rm.Remark = rm.Correctiondatafinal.Tables[0].Rows[0]["Remark"].ToString();
                            rm.CorrectionInsertDt = rm.Correctiondatafinal.Tables[0].Rows[0]["InsertDt"].ToString();
                            rm.CorrectionFinalSubmitDt = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionFinalSubmitDt1"].ToString();
                            rm.CorrectionVerifyDt = rm.Correctiondatafinal.Tables[0].Rows[0]["VerifyDt"].ToString();
                            ViewBag.OldSubjlist = rm.Correctiondatafinal.Tables[0].Rows[0]["OlDsubjectList"].ToString();
                            ViewBag.NewSubjlist = rm.Correctiondatafinal.Tables[0].Rows[0]["NewSubjectList"].ToString();
                            return View(rm);
                        }
                        else
                        {
                            ViewData["resultFS"] = "";
                            return RedirectToAction("SchoolCorrection", "RegistrationPortal");
                        }
                    }
                    else
                    {
                        return RedirectToAction("Logout", "Login");
                    }
                }
                else
                {
                    return RedirectToAction("Logout", "Login");
                }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Index", "Login");
            }
        }
        public ActionResult SchoolCorrectionPerformaRoughReportSJ(string id)
        {

            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            try
            {
                if (ModelState.IsValid)
                {

                    if (Session["SCHL"] != null)
                    {
                        id = "01";
                        rm.CorrectionLot = id;
                        rm.SCHL = Session["SCHL"].ToString();
                        rm.Correctiondatafinal = objDB.SchoolCorrectionPerformaRoughReport(rm); // passing Value to DBClass from model
                        if (rm.Correctiondatafinal.Tables[0].Rows.Count > 0)
                        {
                            ViewData["resultFS"] = rm.Correctiondatafinal.Tables[0].Rows.Count;
                            ViewBag.TotalCountaddedRecord = rm.Correctiondatafinal.Tables[0].Rows.Count;
                            rm.SCHL = rm.Correctiondatafinal.Tables[0].Rows[0]["SCHL"].ToString();
                            rm.DIST = Convert.ToInt32(rm.Correctiondatafinal.Tables[0].Rows[0]["DIST"]);
                            rm.schlCorNameE = rm.Correctiondatafinal.Tables[0].Rows[0]["SchlFullNME"].ToString();
                            rm.schlCorConDetails = rm.Correctiondatafinal.Tables[0].Rows[0]["schlCorConDetails"].ToString();
                            //rm.CorrectionId = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionId"].ToString();
                            //rm.SCHL = rm.Correctiondatafinal.Tables[0].Rows[0]["Schl"].ToString();
                            rm.Class = rm.Correctiondatafinal.Tables[0].Rows[0]["Class"].ToString();
                            //rm.Std_id = Convert.ToInt32(rm.Correctiondatafinal.Tables[0].Rows[0]["Std_id"]);
                            rm.CorrectionLot = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionLot"].ToString();
                            //rm.oldVal = rm.Correctiondatafinal.Tables[0].Rows[0]["OldValue"].ToString();
                            //rm.newVal = rm.Correctiondatafinal.Tables[0].Rows[0]["NewValue"].ToString();
                            rm.Correctiontype = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionFieldDisplayName"].ToString();
                            rm.Remark = rm.Correctiondatafinal.Tables[0].Rows[0]["Remark"].ToString();
                            rm.CorrectionInsertDt = rm.Correctiondatafinal.Tables[0].Rows[0]["InsertDt"].ToString();
                            rm.CorrectionFinalSubmitDt = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionFinalSubmitDt1"].ToString();
                            rm.CorrectionVerifyDt = rm.Correctiondatafinal.Tables[0].Rows[0]["VerifyDt"].ToString();
                            ViewBag.OldSubjlist = rm.Correctiondatafinal.Tables[0].Rows[0]["OlDsubjectList"].ToString();
                            ViewBag.NewSubjlist = rm.Correctiondatafinal.Tables[0].Rows[0]["NewSubjectList"].ToString();
                            return View(rm);
                        }
                        else
                        {
                            ViewData["resultFS"] = "";
                            return RedirectToAction("SchoolCorrection", "RegistrationPortal");
                        }
                    }
                    else
                    {
                        return RedirectToAction("Logout", "Login");
                    }
                }
                else
                {
                    return RedirectToAction("Logout", "Login");
                }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Index", "Login");
            }
        }

        public ActionResult SchoolCorrectionPerformaRoughReportSJO(string id)
        {

            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            try
            {
                if (ModelState.IsValid)
                {

                    if (Session["SCHL"] != null)
                    {
                        id = "22,44";
                        rm.CorrectionLot = id;
                        rm.SCHL = Session["SCHL"].ToString();
                        rm.Correctiondatafinal = objDB.SchoolCorrectionPerformaRoughReport(rm); // passing Value to DBClass from model
                        if (rm.Correctiondatafinal.Tables[0].Rows.Count > 0)
                        {
                            ViewData["resultFS"] = rm.Correctiondatafinal.Tables[0].Rows.Count;
                            ViewBag.TotalCountaddedRecord = rm.Correctiondatafinal.Tables[0].Rows.Count;
                            rm.SCHL = rm.Correctiondatafinal.Tables[0].Rows[0]["SCHL"].ToString();
                            rm.DIST = Convert.ToInt32(rm.Correctiondatafinal.Tables[0].Rows[0]["DIST"]);
                            rm.schlCorNameE = rm.Correctiondatafinal.Tables[0].Rows[0]["SchlFullNME"].ToString();
                            rm.schlCorConDetails = rm.Correctiondatafinal.Tables[0].Rows[0]["schlCorConDetails"].ToString();
                            //rm.CorrectionId = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionId"].ToString();
                            //rm.SCHL = rm.Correctiondatafinal.Tables[0].Rows[0]["Schl"].ToString();
                            rm.Class = rm.Correctiondatafinal.Tables[0].Rows[0]["Class"].ToString();
                            //rm.Std_id = Convert.ToInt32(rm.Correctiondatafinal.Tables[0].Rows[0]["Std_id"]);
                            rm.CorrectionLot = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionLot"].ToString();
                            //rm.oldVal = rm.Correctiondatafinal.Tables[0].Rows[0]["OldValue"].ToString();
                            //rm.newVal = rm.Correctiondatafinal.Tables[0].Rows[0]["NewValue"].ToString();
                            rm.Correctiontype = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionFieldDisplayName"].ToString();
                            rm.Remark = rm.Correctiondatafinal.Tables[0].Rows[0]["Remark"].ToString();
                            rm.CorrectionInsertDt = rm.Correctiondatafinal.Tables[0].Rows[0]["InsertDt"].ToString();
                            rm.CorrectionFinalSubmitDt = rm.Correctiondatafinal.Tables[0].Rows[0]["CorrectionFinalSubmitDt1"].ToString();
                            rm.CorrectionVerifyDt = rm.Correctiondatafinal.Tables[0].Rows[0]["VerifyDt"].ToString();
                            ViewBag.OldSubjlist = rm.Correctiondatafinal.Tables[0].Rows[0]["OlDsubjectList"].ToString();
                            ViewBag.NewSubjlist = rm.Correctiondatafinal.Tables[0].Rows[0]["NewSubjectList"].ToString();
                            return View(rm);
                        }
                        else
                        {
                            ViewData["resultFS"] = "";
                            return RedirectToAction("SchoolCorrection", "RegistrationPortal");
                        }
                    }
                    else
                    {
                        return RedirectToAction("Logout", "Login");
                    }
                }
                else
                {
                    return RedirectToAction("Logout", "Login");
                }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Index", "Login");
            }
        }

        #endregion SCHOOL CORRECTION PERFORMA END


        //-----------------------------
        //-----------------------------


        //-----------FinalPrintAdminCard
        #region Admit Card Controller Begin
        public ActionResult SchoolAdmitCardList()
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            string schid = Session["SCHL"].ToString();
            DataSet result = objDB.schooltypes(schid); // passing Value to DBClass from model
            if (result == null)
            {
                return RedirectToAction("Index", "Home");
            }
            if (result.Tables[1].Rows.Count > 0)
            {
                ViewBag.IsFinalSubmit = result.Tables[0].Rows[0]["IsFinalSubmit"].ToString();
                ViewBag.Matric = result.Tables[1].Rows[0]["Matric"].ToString();
                ViewBag.OMatric = result.Tables[1].Rows[0]["OMatric"].ToString();
                ViewBag.Senior = result.Tables[1].Rows[0]["Senior"].ToString();
                ViewBag.OSenior = result.Tables[1].Rows[0]["OSenior"].ToString();
            }
            return View();
        }
        public ActionResult FinalPrintSeniorAdmitCard()
        {
            try
            {
                //ViewBag.SelectedItem
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    string schlid = Session["SCHL"].ToString();
                    string ClsType = "4";
                    rm.Correctiondata = null;
                    ViewBag.TotalCountadded = "";
                    //rm.StoreAllData = objDB.GetFinalPrintSeniorAdmitCard(schlid, ClsType);
                    //ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    //if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    //{
                    //    ViewBag.Message2 = "Record Not Found";
                    //    ViewBag.TotalCount2 = 0;
                    //}
                }

                if (ModelState.IsValid)
                { return View(rm); }
                else
                { return View(); }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }

        [HttpPost]
        public ActionResult FinalPrintSeniorAdmitCard(FormCollection frc)
        {
            try
            {
                //ViewBag.SelectedItem
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    string schlid = Session["SCHL"].ToString();
                    string ClsType = "4";
                    rm.Correctiondata = null;
                    ViewBag.TotalCountadded = "";

                    rm.CandId = frc["CandId"].ToString();
                    rm.ExamRoll = frc["ExamRoll"].ToString();
                    rm.SelList = frc["SelList"].ToString();
                    //rm.QRCode = QRCoder(rm.ExamRoll.ToString());
                    string search = "";
                    if (rm.SelList.ToUpper() == "ALL")
                    {
                        search = " reg.schl='" + schlid + "'";
                    }
                    if (rm.CandId.Trim() != "" || rm.ExamRoll.Trim() != "")
                    {

                        search = " reg.schl='" + schlid + "'";
                        if (rm.CandId.Trim() != "")
                        {
                            search += " and reg.std_id='" + rm.CandId + "'";
                        }
                        if (rm.ExamRoll.Trim() != "")
                        {
                            search += " and exm.ROLL='" + rm.ExamRoll + "'";
                        }

                    }

                    rm.StoreAllData = objDB.GetFinalPrintSeniorAdmitCardSearch(search, schlid);
                    //rm.QRCode = QRCoder(objDB.GetFinalPrintSeniorAdmitCardSearch(search, schlid).ToString());
                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message2 = "Record Not Found";
                        ViewBag.TotalCount2 = 0;
                    }
                }

                if (ModelState.IsValid)
                { return View(rm); }
                else
                { return View(); }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }

        public ActionResult FinalPrintSeniorOpenAdmitCard()
        {
            try
            {
                //ViewBag.SelectedItem
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    string schlid = Session["SCHL"].ToString();
                    string ClsType = "12";
                    rm.Correctiondata = null;
                    ViewBag.TotalCountadded = "";
                    //rm.StoreAllData = objDB.GetFinalPrintSeniorOpenAdmitCard(schlid, ClsType);
                    //ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    //if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    //{
                    //    ViewBag.Message2 = "Record Not Found";
                    //    ViewBag.TotalCount2 = 0;
                    //}
                }

                if (ModelState.IsValid)
                { return View(rm); }
                else
                { return View(); }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }
        [HttpPost]
        public ActionResult FinalPrintSeniorOpenAdmitCard(FormCollection frc)
        {
            try
            {
                //ViewBag.SelectedItem
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    string schlid = Session["SCHL"].ToString();
                    string ClsType = "4";
                    rm.Correctiondata = null;
                    ViewBag.TotalCountadded = "";

                    rm.CandId = frc["CandId"].ToString();
                    rm.ExamRoll = frc["ExamRoll"].ToString();
                    rm.SelList = frc["SelList"].ToString();

                    string search = "";
                    if (rm.SelList.ToUpper() == "ALL")
                    {
                        search = " reg.schl='" + schlid + "'";
                    }
                    if (rm.CandId.Trim() != "" || rm.ExamRoll.Trim() != "")
                    {
                        search = " reg.schl='" + schlid + "'";
                        if (rm.CandId.Trim() != "")
                        {
                            search += " and reg.appno='" + rm.CandId + "'";
                        }
                        if (rm.ExamRoll.Trim() != "")
                        {
                            search += " and exm.ROLL='" + rm.ExamRoll + "'";
                        }
                    }
                    rm.StoreAllData = objDB.GetFinalPrintSeniorOpenAdmitCardSearch(search, schlid);
                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message2 = "Record Not Found";
                        ViewBag.TotalCount2 = 0;
                    }

                }

                if (ModelState.IsValid)
                { return View(rm); }
                else
                { return View(); }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }

        //----- Matric Admit Card Regular

        public ActionResult FinalPrintMatricAdmitCard()
        {
            try
            {
                //ViewBag.SelectedItem
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    string schlid = Session["SCHL"].ToString();
                    string ClsType = "2";
                    rm.Correctiondata = null;
                    ViewBag.TotalCountadded = "";
                    //rm.StoreAllData = objDB.GetFinalPrintSeniorAdmitCard(schlid, ClsType);
                    //ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    //if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    //{
                    //    ViewBag.Message2 = "Record Not Found";
                    //    ViewBag.TotalCount2 = 0;
                    //}
                }

                if (ModelState.IsValid)
                { return View(rm); }
                else
                { return View(); }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }

        [HttpPost]
        public ActionResult FinalPrintMatricAdmitCard(FormCollection frc)
        {
            try
            {
                //ViewBag.SelectedItem
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    string schlid = Session["SCHL"].ToString();
                    string ClsType = "2";
                    rm.Correctiondata = null;
                    ViewBag.TotalCountadded = "";

                    rm.CandId = frc["CandId"].ToString();
                    rm.ExamRoll = frc["ExamRoll"].ToString();
                    rm.SelList = frc["SelList"].ToString();

                    string search = "";
                    if (rm.SelList.ToUpper() == "ALL")
                    {
                        search = " reg.schl='" + schlid + "'";
                    }
                    if (rm.CandId.Trim() != "" || rm.ExamRoll.Trim() != "")
                    {

                        search = " reg.schl='" + schlid + "'";
                        if (rm.CandId.Trim() != "")
                        {
                            search += " and exm.reg16id='" + rm.CandId + "'";
                        }
                        if (rm.ExamRoll.Trim() != "")
                        {
                            search += " and exm.ROLL='" + rm.ExamRoll + "'";
                        }

                    }

                    rm.StoreAllData = objDB.GetFinalPrintMatricAdmitCardSearch(search, schlid);
                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message2 = "Record Not Found";
                        ViewBag.TotalCount2 = 0;
                    }
                }

                if (ModelState.IsValid)
                { return View(rm); }
                else
                { return View(); }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }


        //----- Matric Admit Card Open

        public ActionResult FinalPrintMatricOpenAdmitCard()
        {
            try
            {
                //ViewBag.SelectedItem
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    string schlid = Session["SCHL"].ToString();
                    string ClsType = "12";
                    rm.Correctiondata = null;
                    ViewBag.TotalCountadded = "";
                    //rm.StoreAllData = objDB.GetFinalPrintSeniorOpenAdmitCard(schlid, ClsType);
                    //ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    //if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    //{
                    //    ViewBag.Message2 = "Record Not Found";
                    //    ViewBag.TotalCount2 = 0;
                    //}
                }

                if (ModelState.IsValid)
                { return View(rm); }
                else
                { return View(); }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }
        [HttpPost]
        public ActionResult FinalPrintMatricOpenAdmitCard(FormCollection frc)
        {
            try
            {
                //ViewBag.SelectedItem
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                else
                {
                    string schlid = Session["SCHL"].ToString();
                    string ClsType = "4";
                    rm.Correctiondata = null;
                    ViewBag.TotalCountadded = "";

                    rm.CandId = frc["CandId"].ToString();
                    rm.ExamRoll = frc["ExamRoll"].ToString();
                    rm.SelList = frc["SelList"].ToString();

                    string search = "";
                    if (rm.SelList.ToUpper() == "ALL")
                    {
                        search = " reg.schl='" + schlid + "'";
                    }
                    if (rm.CandId.Trim() != "" || rm.ExamRoll.Trim() != "")
                    {
                        search = " reg.schl='" + schlid + "'";
                        if (rm.CandId.Trim() != "")
                        {
                            search += " and reg.appno='" + rm.CandId + "'";
                        }
                        if (rm.ExamRoll.Trim() != "")
                        {
                            search += " and exm.ROLL='" + rm.ExamRoll + "'";
                        }
                    }
                    rm.StoreAllData = objDB.GetFinalPrintMatricOpenAdmitCardSearch(search, schlid);
                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message2 = "Record Not Found";
                        ViewBag.TotalCount2 = 0;
                    }

                }

                if (ModelState.IsValid)
                { return View(rm); }
                else
                { return View(); }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }

        #endregion Admit Card Controller End
        //-----------FinalPrintAdminCard

        #region  Correction subject 
        //--------------------------------------------Correction Subject Start-------------
        public JsonResult GetSubDetailsByStd(string s, string f) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            DataSet result = objDB.SelectOLDSUB(s, f); // passing Value to DBClass from model            
            List<SelectListItem> OList = new List<SelectListItem>();
            OList.Add(new SelectListItem { Text = "Subject NAME/TYPE", Value = "0" });
            foreach (System.Data.DataRow dr in result.Tables[0].Rows)
            {
                OList.Add(new SelectListItem { Text = @dr["name_eng"].ToString(), Value = @dr["sub"].ToString() });

            }
            return Json(OList);
        }
        public JsonResult GetALLSUBJECTMEDIUM(string s, string f) // Calling on http post (on Submit)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            DataSet result = objDB.SelectResgularOpenMedium(s, f);
            ViewBag.S = result.Tables[0];// ViewData["result"] = result; // for dislaying message after saving storing output.
            List<SelectListItem> SList = new List<SelectListItem>();
            SList.Add(new SelectListItem { Text = "medium", Value = "0" });
            foreach (System.Data.DataRow dr in ViewBag.S.Rows)
            {
                if (@dr["medium2"].ToString() == "" || @dr["medium2"].ToString() == null)
                {
                    SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });

                }
                else if (@dr["medium3"].ToString() == "" || @dr["medium3"].ToString() == null)
                {
                    SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });
                    SList.Add(new SelectListItem { Text = @dr["medium2"].ToString(), Value = @dr["medium2"].ToString() });

                }
                else
                {
                    SList.Add(new SelectListItem { Text = @dr["medium1"].ToString(), Value = @dr["medium1"].ToString() });
                    SList.Add(new SelectListItem { Text = @dr["medium2"].ToString(), Value = @dr["medium2"].ToString() });
                    SList.Add(new SelectListItem { Text = @dr["medium3"].ToString(), Value = @dr["medium3"].ToString() });
                }


            }


            return Json(SList);

        }

        //-------------------------------------------------Correction Subject End---------------------------------

        //-----------------
        #endregion

        public ActionResult ExaminationPortal(int? page)
        {
            Printlist obj = new Printlist();
            try
            {

                if (Session["SCHL"] == null || Session["SCHL"].ToString() == "")
                {
                    return RedirectToAction("Logout", "Login");
                }
                string SCHL = Convert.ToString(Session["SCHL"]);

                #region Circular

                int pageIndex = 1;
                pageIndex = page.HasValue ? Convert.ToInt32(page) : 1;
                ViewBag.pagesize = pageIndex;

                string Search = string.Empty;
                Search = "Id like '%' and CircularTypes like '%3%' and Convert(Datetime,Convert(date,ExpiryDateDD))>=Convert(Datetime,Convert(date,getdate()))";
                DataSet dsCircular = new AbstractLayer.AdminDB().CircularMaster(Search, pageIndex);//GetAllFeeMaster2016SP
                if (dsCircular == null || dsCircular.Tables[0].Rows.Count == 0)
                {
                    ViewBag.TotalCircular = 0;
                }
                else
                {
                    //var type7 = dsCircular.Tables[0].Columns[7].DataType.Name.ToString();
                    var type8 = dsCircular.Tables[0].Columns[9].DataType.Name.ToString();
                    ViewBag.TotalCircular = dsCircular.Tables[0].Rows.Count;

                    //MarQue
                    IEnumerable<DataRow> query = from order in dsCircular.Tables[0].AsEnumerable()
                                                 where order.Field<byte>("IsMarque") == 1 && order.Field<Boolean>("IsActive") == true
                                                 select order;
                    // Create a table of Marque from the query.
                    if (query.Any())
                    {
                        obj.dsMarque = query.CopyToDataTable<DataRow>();
                        ViewBag.MarqueCount = obj.dsMarque.Rows.Count;
                    }
                    else { ViewBag.MarqueCount = 0; }

                    // circular
                    IEnumerable<DataRow> query1 = from order in dsCircular.Tables[0].AsEnumerable()
                                                  where order.Field<byte>("IsMarque") == 0 && order.Field<Boolean>("IsActive") == true
                                                  select order;
                    // Create a table of Marque from the query.
                    if (query1.Any())
                    {
                        obj.dsCircular = query1.CopyToDataTable<DataRow>();
                        ViewBag.CircularCount = obj.dsCircular.Rows.Count;

                        //
                        int count = Convert.ToInt32(dsCircular.Tables[2].Rows[0]["CircularCount"]);
                        ViewBag.TotalCircularCount = count;
                        int tp = Convert.ToInt32(count);
                        int pn = tp / 15;
                        int cal = 15 * pn;
                        int res = Convert.ToInt32(ViewBag.TotalCircularCount) - cal;
                        if (res >= 1)
                        { ViewBag.pn = pn + 1; }
                        else
                        { ViewBag.pn = pn; }


                    }
                    else
                    {
                        ViewBag.CircularCount = 0;
                        ViewBag.TotalCircularCount = 0;
                    }
                }
                #endregion

                //
                DataSet result = objCommon.schooltypes(SCHL); // passing Value to DBClass from model
                if (result == null)
                {
                    return RedirectToAction("Index", "Home");
                }
                if (result.Tables[1].Rows.Count > 0)
                {
                    ViewBag.Senior = result.Tables[1].Rows[0]["Senior"].ToString();
                    ViewBag.Matric = result.Tables[1].Rows[0]["Matric"].ToString();
                    ViewBag.OSenior = result.Tables[1].Rows[0]["OSenior"].ToString();
                    ViewBag.OMatric = result.Tables[1].Rows[0]["OMatric"].ToString();
                }
            }
            catch (Exception ex)
            {
                oErrorLog.WriteErrorLog(ex.ToString(), Path.GetFileName(Request.Path));
                //return RedirectToAction("Logout", "Login");
                //return View();
            }
            return View(obj);
        }



        public ActionResult ViewRegNo()
        {
            RegistrationModels rm = new RegistrationModels();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            try
            {

                if (Session["SCHL"] == null || Session["SCHL"].ToString() == "")
                {
                    return RedirectToAction("Logout", "Login");
                }
                string SCHL = Convert.ToString(Session["SCHL"]);
                var itemsch = new SelectList(new[]{new {ID="1",Name="By UniqueID"},new{ID="2",Name="Candidate Name"},
                new{ID="3",Name="Father's Name"},new{ID="4",Name="Mother's Name"},new{ID="5",Name="DOB"},new{ID="6",Name="Registration No"},}, "ID", "Name", 1);
                ViewBag.MySch = itemsch.ToList();

                if (ModelState.IsValid)
                {

                    AbstractLayer.MigrateSchoolDB migDB = new AbstractLayer.MigrateSchoolDB();
                    string Search = string.Empty;
                    string schlid = "";
                    if (Session["SCHL"] != null)
                    {
                        schlid = Session["SCHL"].ToString();
                    }
                    else
                    {
                        return View();
                    }
                    DataSet result1 = migDB.GetAllFormName(schlid);
                    List<SelectListItem> FormList = new List<SelectListItem>();
                    foreach (System.Data.DataRow dr in result1.Tables[4].Rows)
                    {
                        if (dr["form_name"].ToString().Contains('2'))
                        {
                            FormList.Add(new SelectListItem { Text = @dr["form_name"].ToString(), Value = @dr["form_name"].ToString() });
                        }
                    }
                    ViewBag.MyForm = FormList;

                    ViewBag.SelectedForm = 0;
                    Search = "schl='" + schlid + "' and a.std_id like '%' ";
                    rm.StoreAllData = objDB.ViewRegNoBySchool(Search);
                    if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message = "Record Not Found";
                        ViewBag.TotalCount = 0;
                        return View(rm);
                    }
                    else
                    {
                        ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                        return View(rm);
                    }
                }
            }
            catch (Exception)
            {

            }
            return View();
        }


        [HttpPost]
        public ActionResult ViewRegNo(FormCollection frm)
        {
            var itemsch = new SelectList(new[]{new {ID="1",Name="By UniqueID"},new{ID="2",Name="Candidate Name"},
            new{ID="3",Name="Father's Name"},new{ID="4",Name="Mother's Name"},new{ID="5",Name="DOB"},new{ID="6",Name="Registration No"},}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();



            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            if (ModelState.IsValid)
            {

                string Search = string.Empty;
                string schlid = "";
                if (Session["SCHL"] != null)
                {
                    schlid = Session["SCHL"].ToString();
                }
                else
                {
                    return View(rm);
                }
                AbstractLayer.MigrateSchoolDB migDB = new AbstractLayer.MigrateSchoolDB();
                DataSet result1 = migDB.GetAllFormName(schlid);
                List<SelectListItem> FormList = new List<SelectListItem>();
                foreach (System.Data.DataRow dr in result1.Tables[4].Rows)
                {
                    if (dr["form_name"].ToString().Contains('2'))
                    {
                        FormList.Add(new SelectListItem { Text = @dr["form_name"].ToString(), Value = @dr["form_name"].ToString() });
                    }
                }
                ViewBag.MyForm = FormList;
                // MS.SelForm = frm["SelForm"].ToString();

                Search = "schl='" + schlid + "' and a.std_id like '%' ";
                if (frm["SelForm"] != "")
                {
                    ViewBag.SelectedForm = frm["SelForm"];
                    Search += " and form_name='" + frm["SelForm"].ToString() + "' ";
                }
                if (frm["SelList"] != "")
                {
                    ViewBag.SelectedItem = frm["SelList"];
                    int SelValueSch = Convert.ToInt32(frm["SelList"].ToString());

                    if (frm["SearchString"] != "")
                    {
                        if (SelValueSch == 1)
                        { Search += " and a.std_id='" + frm["SearchString"].ToString() + "'"; }
                        else if (SelValueSch == 2)
                        { Search += " and  a.Candi_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                        else if (SelValueSch == 3)
                        { Search += " and a.Father_Name  like '%" + frm["SearchString"].ToString() + "%'"; }
                        else if (SelValueSch == 4)
                        { Search += " and a.Mother_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                        else if (SelValueSch == 5)
                        { Search += " and a.DOB='" + frm["SearchString"].ToString() + "'"; }
                        else if (SelValueSch == 6)
                        { Search += " and a.Registration_num='" + frm["SearchString"].ToString() + "'"; }
                    }


                }

                rm.StoreAllData = objDB.ViewRegNoBySchool(Search);
                if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                {
                    ViewBag.Message = "Record Not Found";
                    ViewBag.TotalCount = 0;
                    return View();
                }
                else
                {
                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    return View(rm);
                }
            }
            else
            {
                return View(rm);
                // return N1Formgrid();
            }
        }



        #region Final Submitted Records form All Forms 
        public ActionResult FinalSubmittedRecordsAll(int? page)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            //else
            //{
            //    int status = objDB.CheckSchoolAssignForm(1, Session["SCHL"].ToString());
            //    if (status > 0)
            //    {
            //        if (status == 0)
            //        { return RedirectToAction("Index", "Home"); }
            //    }
            //    else
            //    {
            //        return RedirectToAction("Index", "Home");
            //    }
            //}

            var itemsch = new SelectList(new[]{new {ID="1",Name="By UniqueID"},new{ID="2",Name="Candidate Name"},
            new{ID="3",Name="Father's Name"},new{ID="4",Name="Mother's Name"},new{ID="5",Name="DOB"},new{ID="6",Name="Class Rollnum"},new{ID="7",Name="REGNO"},new{ID="8",Name="Section"},}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();

            if (ModelState.IsValid)
            {

                string Search = string.Empty;
                string schlid = "";
                if (Session["SCHL"] != null)
                {
                    schlid = Session["SCHL"].ToString();
                }
                else
                {
                    return View(rm);
                }

                int pageIndex = 1;
                pageIndex = page.HasValue ? Convert.ToInt32(page) : 1;
                ViewBag.pagesize = pageIndex;

                Search = "form_Name like '%' and schl='" + schlid + "' and a.std_id like '%' ";
                rm.StoreAllData = objDB.FinalSubmittedRecordsAll(Search, pageIndex);
                // asm.StoreAllData = objDB.SearchSchoolDetails(Search);
                if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                {
                    ViewBag.Message = "Record Not Found";
                    ViewBag.TotalCount = 0;
                    return View();
                }
                else
                {
                    //ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    //return View(rm);
                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    ViewBag.TotalCount1 = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                    int tp = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                    int pn = tp / 30;
                    int cal = 30 * pn;
                    int res = Convert.ToInt32(ViewBag.TotalCount1) - cal;
                    if (res >= 1)
                        ViewBag.pn = pn + 1;
                    else
                        ViewBag.pn = pn;
                    //ViewBag.Importfalg = rm.StoreAllData.Tables[0].Rows[0]["importflag"].ToString();
                    //ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    return View(rm);
                }
            }
            else
            {
                return View(rm);
                // return N2Formgrid();
            }
        }

        [HttpPost]
        public ActionResult FinalSubmittedRecordsAll(int? page, FormCollection frm)
        {
            var itemsch = new SelectList(new[]{new {ID="1",Name="By UniqueID"},new{ID="2",Name="Candidate Name"},
            new{ID="3",Name="Father's Name"},new{ID="4",Name="Mother's Name"},new{ID="5",Name="DOB"},new{ID="6",Name="Class Rollnum"},new{ID="7",Name="REGNO"},new{ID="8",Name="Section"},}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();

            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            if (ModelState.IsValid)
            {

                string Search = string.Empty;
                //Search = "form_Name='N2' and a.std_id like '%' ";
                string schlid = "";
                if (Session["SCHL"] != null)
                {
                    schlid = Session["SCHL"].ToString();
                }
                else
                {
                    return View(rm);
                }
                Search = "form_Name like '%' and schl='" + schlid + "' and a.std_id like '%' ";
                if (frm["SelList"] != "")
                {
                    ViewBag.SelectedItem = frm["SelList"];
                    int SelValueSch = Convert.ToInt32(frm["SelList"].ToString());


                    if (frm["SearchString"] != "")
                    {
                        if (SelValueSch == 1)
                        { Search += " and a.std_id='" + frm["SearchString"].ToString() + "'"; }
                        else if (SelValueSch == 2)
                        { Search += " and  a.Candi_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                        else if (SelValueSch == 3)
                        { Search += " and a.Father_Name  like '%" + frm["SearchString"].ToString() + "%'"; }
                        else if (SelValueSch == 4)
                        { Search += " and a.Mother_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                        else if (SelValueSch == 5)
                        { Search += " and a.DOB='" + frm["SearchString"].ToString() + "'"; }
                        else if (SelValueSch == 6)
                        { Search += " and a.Class_Roll_Num_Section ='" + frm["SearchString"].ToString() + "'"; }
                        else if (SelValueSch == 7)
                        { Search += " and a.Registration_num ='" + frm["SearchString"].ToString() + "'"; }
                        else if (SelValueSch == 8)
                        { Search += " and a.section ='" + frm["SearchString"].ToString() + "'"; }
                    }


                }
                int pageIndex = 1;
                pageIndex = page.HasValue ? Convert.ToInt32(page) : 1;
                ViewBag.pagesize = pageIndex;

                rm.StoreAllData = objDB.FinalSubmittedRecordsAll(Search, pageIndex);
                TempData["Search"] = Search;
                // asm.StoreAllData = objDB.SearchSchoolDetails(Search);
                if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                {
                    ViewBag.Message = "Record Not Found";
                    ViewBag.TotalCount = 0;
                    return View();
                }
                else
                {

                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    ViewBag.TotalCount1 = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                    int tp = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                    int pn = tp / 30;
                    int cal = 30 * pn;
                    int res = Convert.ToInt32(ViewBag.TotalCount1) - cal;
                    if (res >= 1)
                        ViewBag.pn = pn + 1;
                    else
                        ViewBag.pn = pn;
                    //ViewBag.Importfalg = rm.StoreAllData.Tables[0].Rows[0]["importflag"].ToString();
                    //ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    return View(rm);
                }
            }
            else
            {
                return View(rm);
                //return N2Formgrid();
            }
        }
        public ActionResult CommanFormView(string id, string formNM)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();

            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }

            if (id == null)
            {
                return RedirectToAction("FinalSubmittedRecordsAll", "RegistrationPortal");
            }
            if (id != null)
            {
                try
                {
                    id = encrypt.QueryStringModule.Decrypt(id);
                    DataSet ds = objDB.CommanFormView(id, formNM);

                    if (ds == null || ds.Tables[0].Rows.Count == 0)
                    {
                        return RedirectToAction("FinalSubmittedRecordsAll", "RegistrationPortal");
                    }
                    if (ds.Tables[0].Rows.Count > 0)
                    {

                        rm.IsSmartPhone = ds.Tables[0].Rows[0]["IsSmartPhone"].ToString();

                        rm.Std_id = Convert.ToInt32(ds.Tables[0].Rows[0]["Std_id"].ToString());
                        rm.NSQFPattern = ds.Tables[0].Rows[0]["NSQFPattern"].ToString();
                        rm.Class = ds.Tables[0].Rows[0]["Class"].ToString();
                        rm.IsUnlockForm = ds.Tables[0].Rows[0]["IsUnlockForm"].ToString();
                        rm.IsNRICandidate = ds.Tables[0].Rows[0]["IsNRICandidate"] == null ? false : ds.Tables[0].Rows[0]["IsNRICandidate"].ToString() == "0" ? false : ds.Tables[0].Rows[0]["IsNRICandidate"].ToString().ToLower() == "false" ? false : true;
                        rm.ProofCertificate = ds.Tables[0].Rows[0]["ProofCertificate"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["ProofCertificate"].ToString();
                        rm.ProofNRICandidates = ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString() == "" ? "" : ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["ProofNRICandidates"].ToString();
                        //

                        rm.form_Name = ds.Tables[0].Rows[0]["form_name"].ToString();
                        // TempData["formName"] = ds.Tables[0].Rows[0]["form_name"].ToString();
                        rm.Category = ds.Tables[0].Rows[0]["Category"].ToString();
                        rm.Board = ds.Tables[0].Rows[0]["Board"].ToString();
                        rm.Other_Board = ds.Tables[0].Rows[0]["Other_Board"].ToString();
                        rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();
                        rm.Board_Roll_Num = ds.Tables[0].Rows[0]["Board_Roll_Num"].ToString();
                        rm.MetricBoard = ds.Tables[0].Rows[0]["MatricBoard"].ToString();
                        rm.MatricResult = ds.Tables[0].Rows[0]["MatricResult"].ToString();
                        rm.Prev_School_Name = ds.Tables[0].Rows[0]["Prev_School_Name"].ToString();
                        rm.Month = ds.Tables[0].Rows[0]["Month"].ToString();
                        rm.Year = ds.Tables[0].Rows[0]["Year"].ToString();
                        rm.AWRegisterNo = ds.Tables[0].Rows[0]["AWRegisterNo"].ToString();
                        rm.Admission_Num = ds.Tables[0].Rows[0]["Admission_Num"].ToString();
                        rm.Admission_Date = ds.Tables[0].Rows[0]["Admission_Date"].ToString();
                        rm.Class_Roll_Num_Section = ds.Tables[0].Rows[0]["Class_Roll_Num_Section"].ToString();
                        rm.Candi_Name = ds.Tables[0].Rows[0]["Candi_Name"].ToString();
                        rm.Candi_Name_P = ds.Tables[0].Rows[0]["Candi_Name_P"].ToString();
                        rm.Father_Name = ds.Tables[0].Rows[0]["Father_Name"].ToString();
                        rm.Father_Name_P = ds.Tables[0].Rows[0]["Father_Name_P"].ToString();
                        rm.Mother_Name = ds.Tables[0].Rows[0]["Mother_Name"].ToString();
                        rm.Mother_Name_P = ds.Tables[0].Rows[0]["Mother_Name_P"].ToString();
                        rm.Caste = ds.Tables[0].Rows[0]["Caste"].ToString();
                        rm.Gender = ds.Tables[0].Rows[0]["Gender"].ToString();
                        rm.Differently_Abled = ds.Tables[0].Rows[0]["Differently_Abled"].ToString();
                        rm.DP = ds.Tables[0].Rows[0]["DisabilityPercent"].ToString();
                        rm.Religion = ds.Tables[0].Rows[0]["Religion"].ToString();
                        rm.DOB = ds.Tables[0].Rows[0]["DOB"].ToString();
                        rm.Mobile = ds.Tables[0].Rows[0]["Mobile"].ToString();
                        rm.Belongs_BPL = ds.Tables[0].Rows[0]["Belongs_BPL"].ToString();
                        rm.E_punjab_Std_id = ds.Tables[0].Rows[0]["E_punjab_Std_id"].ToString();
                        rm.Aadhar_num = ds.Tables[0].Rows[0]["Aadhar_num"].ToString();
                        rm.MyGroup = ds.Tables[0].Rows[0]["Group_name"].ToString();
                        rm.Address = ds.Tables[0].Rows[0]["Address"].ToString();
                        rm.LandMark = ds.Tables[0].Rows[0]["LandMark"].ToString();
                        rm.Block = ds.Tables[0].Rows[0]["Block"].ToString();
                        rm.MyDistrict = ds.Tables[0].Rows[0]["distE"].ToString();
                        rm.MYTehsil = ds.Tables[0].Rows[0]["tehE"].ToString();
                        rm.PinCode = ds.Tables[0].Rows[0]["PinCode"].ToString();
                        if (ds.Tables[0].Rows[0]["Section"].ToString() != "")
                        {
                            rm.Section = Convert.ToChar(ds.Tables[0].Rows[0]["Section"].ToString());
                        }
                        string formName = ds.Tables[0].Rows[0]["form_Name"].ToString();
                        rm.MetricYear = ds.Tables[0].Rows[0]["MetricYear"].ToString();
                        rm.MetricMonth = ds.Tables[0].Rows[0]["MetricMonth"].ToString();
                        rm.Metric_Roll_Num = ds.Tables[0].Rows[0]["MetricRollNum"].ToString();
                        rm.CandiMedium = ds.Tables[0].Rows[0]["CandStudyMedium"].ToString();
                        // @ViewBag.ImageURL = "../../StdImages/Upload/" + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                        rm.PreNSQF = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();
                        rm.NSQF = ds.Tables[0].Rows[0]["nsqf_flag"].ToString();

                        if (rm.NSQF == "True")
                        {
                            @ViewBag.ns = "1";
                            ViewData["NSQFSCHOOL"] = "1";
                            rm.NSQF = "YES";
                            string subNSQF = ds.Tables[0].Rows[0]["NSQF_SUB"].ToString();
                            string PRENSQF = ds.Tables[0].Rows[0]["PRE_NSQF_SUB"].ToString();
                            if (PRENSQF == "NO" && (string.IsNullOrEmpty(subNSQF) || subNSQF == "NO"))
                            {
                                rm.NsqfsubS6 = "NO";
                                rm.PreNSQF = "NO";
                            }
                            else
                            {
                                if (rm.Class == "1" || rm.Class == "2")
                                {
                                    DataSet nsresult = objDB.GetNSQFVIEWSUBJECTMATRICSUBJECT(subNSQF, PRENSQF);
                                    if (nsresult.Tables[0].Rows.Count > 0)
                                    {
                                        rm.NsqfsubS6 = nsresult.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    }
                                    else
                                    {
                                        rm.NsqfsubS6 = "NO";
                                    }
                                    if (nsresult.Tables[1].Rows.Count > 0)
                                    {
                                        rm.PreNSQF = nsresult.Tables[1].Rows[0]["NAME_ENG"].ToString();
                                    }
                                    else
                                    {
                                        rm.PreNSQF = PRENSQF;
                                    }
                                }
                                else
                                {

                                    DataSet nsresult = objDB.GetNSQFVIEWSUBJECT11TH(subNSQF, PRENSQF);
                                    if (nsresult.Tables[0].Rows.Count > 0)
                                    {
                                        rm.NsqfsubS6 = nsresult.Tables[0].Rows[0]["NAME_ENG"].ToString();
                                    }
                                    else
                                    {
                                        rm.NsqfsubS6 = "NO";
                                    }

                                    if (nsresult.Tables[1].Rows.Count > 0)
                                    {
                                        rm.PreNSQF = nsresult.Tables[1].Rows[0]["NAME_ENG"].ToString();
                                    }
                                    else
                                    {
                                        rm.PreNSQF = PRENSQF;
                                    }
                                }
                            }
                        }
                        else
                        {
                            ViewData["NSQFSCHOOL"] = "0";
                            rm.NSQF = "NO";
                        }

                        if (Session["Session"].ToString() == "2023-2024")
                        {
                            //@ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"]  + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                            //@ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"]  + ds.Tables[0].Rows[0]["std_Sign"].ToString();

                            if (ds.Tables[0].Rows[0]["std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["std_Photo"].ToString() != "")
                            {
                                //  not imported
                                rm.checkCategory = "";
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString().Replace(" ", "");
                            }
                            else
                            {
                                int photocount = 0;
                                string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                                if (oldyear.ToString() == "2023")
                                {
                                    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                                    {
                                        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString().Replace(" ", "") != "")
                                        {
                                            photocount = 1;
                                            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                                        }
                                        else
                                        {
                                            //@ViewBag.Photo = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                        }
                                    }
                                    else
                                    {
                                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                                    }
                                }
                                if (oldyear.ToString() == "2022")
                                {
                                    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                                    {
                                        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                        {
                                            photocount = 1;
                                            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                                        }
                                        else
                                        {
                                            //@ViewBag.Photo = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                        }
                                    }
                                    else
                                    {
                                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString();
                                    }
                                }
                                else if (oldyear.ToString() == "2021")
                                {
                                    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                                    {
                                        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                        {
                                            photocount = 1;
                                            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                                        }
                                        else
                                        {
                                            //@ViewBag.Photo = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                        }
                                    }
                                    else
                                    {
                                        @ViewBag.Photo = ds.Tables[0].Rows[0]["std_Photo"].ToString();
                                    }
                                }

                                else
                                {
                                    if (ds.Tables[0].Rows[0]["std_Photo"].ToString() == null || ds.Tables[0].Rows[0]["std_Photo"].ToString() == "")
                                    {
                                        if (ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[0]["old_std_Photo"].ToString() != "")
                                        {
                                            photocount = 1;
                                            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();
                                        }
                                        else
                                        {
                                            //@ViewBag.Photo = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_Photo"].ToString();

                                        }
                                    }
                                    else
                                    {
                                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Photo"].ToString().Replace(" ", "");
                                    }
                                }
                            }
                            //-------------------------------------------For Sign---------------------------

                            if (ds.Tables[0].Rows[0]["std_Sign"].ToString() != null && ds.Tables[0].Rows[0]["std_Sign"].ToString() != "")
                            {
                                //  not imported

                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                            }
                            else
                            {
                                string oldyear = ds.Tables[0].Rows[0]["oldyear"].ToString();
                                if (oldyear.ToString() == "2023")
                                {
                                    if (ds.Tables[0].Rows[0]["std_Sign"].ToString() == null || ds.Tables[0].Rows[0]["std_Sign"].ToString() == "")
                                    {
                                        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                        {
                                            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                        }
                                        else
                                        {
                                            //@ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                                        }
                                    }
                                    else
                                    {
                                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                                    }
                                }
                                if (oldyear.ToString() == "2022")
                                {
                                    if (ds.Tables[0].Rows[0]["std_Sign"].ToString() == null || ds.Tables[0].Rows[0]["std_Sign"].ToString() == "")
                                    {
                                        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                        {
                                            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                        }
                                        else
                                        {
                                            //@ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                                        }
                                    }
                                    else
                                    {
                                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                                    }
                                }
                                else if (oldyear.ToString() == "2021")
                                {
                                    if (ds.Tables[0].Rows[0]["std_Sign"].ToString() == null || ds.Tables[0].Rows[0]["std_Sign"].ToString() == "")
                                    {
                                        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                        {
                                            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                        }
                                        else
                                        {
                                            //@ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                                        }
                                    }
                                    else
                                    {
                                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                                    }
                                }
                                else
                                {
                                    if (ds.Tables[0].Rows[0]["std_Sign"].ToString() == null || ds.Tables[0].Rows[0]["std_Sign"].ToString() == "")
                                    {
                                        if (ds.Tables[0].Rows[0]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[0]["old_std_sign"].ToString() != "")
                                        {
                                            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["old_std_sign"].ToString();
                                        }
                                        else
                                        {
                                            //@ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/" + ds.Tables[0].Rows[0]["old_std_sign"].ToString();

                                        }
                                    }
                                    else
                                    {
                                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[0]["std_sign"].ToString();
                                    }
                                }
                            }

                        }

                        // 
                        //@ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"]  + ds.Tables[0].Rows[0]["std_Sign"].ToString();
                        rm.MetricYear = ds.Tables[0].Rows[0]["MetricYear"].ToString();
                        rm.MetricMonth = ds.Tables[0].Rows[0]["MetricMonth"].ToString();
                        rm.Metric_Roll_Num = ds.Tables[0].Rows[0]["MetricRollNum"].ToString();
                        //rm.Registration_num = ds.Tables[0].Rows[0]["Registration_num"].ToString();


                        //------------------------------Fill Subjects----------------//

                        if (ds.Tables[1].Rows.Count > 0)
                        {
                            for (int i = 0; i < ds.Tables[1].Rows.Count; i++)
                            {
                                //if (rm.DA == "N.A.")
                                //{
                                if (i == 0)
                                {
                                    rm.subS1 = ds.Tables[1].Rows[0]["SUBNM"].ToString();
                                    rm.subm1 = ds.Tables[1].Rows[0]["MEDIUM"].ToString();
                                    rm.subbS1 = ds.Tables[1].Rows[0]["SUB"].ToString();
                                }
                                else if (i == 1)
                                {
                                    rm.subS2 = ds.Tables[1].Rows[1]["SUBNM"].ToString();
                                    rm.subM2 = ds.Tables[1].Rows[1]["MEDIUM"].ToString();
                                    rm.subbS2 = ds.Tables[1].Rows[1]["SUB"].ToString();
                                }
                                else if (i == 2)
                                {
                                    rm.subS3 = ds.Tables[1].Rows[2]["SUBNM"].ToString();
                                    rm.subm3 = ds.Tables[1].Rows[2]["MEDIUM"].ToString();
                                    rm.subbS3 = ds.Tables[1].Rows[2]["SUB"].ToString();
                                }
                                else if (i == 3)
                                {
                                    rm.subS4 = ds.Tables[1].Rows[3]["SUBNM"].ToString();
                                    rm.subM4 = ds.Tables[1].Rows[3]["MEDIUM"].ToString();
                                    rm.subbS4 = ds.Tables[1].Rows[3]["SUB"].ToString();
                                }
                                else if (i == 4)
                                {
                                    rm.subS5 = ds.Tables[1].Rows[4]["SUBNM"].ToString();
                                    rm.subM5 = ds.Tables[1].Rows[4]["MEDIUM"].ToString();
                                    rm.subbS5 = ds.Tables[1].Rows[4]["SUB"].ToString();
                                }
                                else if (i == 5)
                                {
                                    rm.subS6 = ds.Tables[1].Rows[5]["SUBNM"].ToString();
                                    rm.subM6 = ds.Tables[1].Rows[5]["MEDIUM"].ToString();
                                    rm.subbS6 = ds.Tables[1].Rows[5]["SUB"].ToString();
                                }
                                else if (i == 6)
                                {
                                    rm.subS7 = ds.Tables[1].Rows[6]["SUBNM"].ToString();
                                    rm.subM7 = ds.Tables[1].Rows[6]["MEDIUM"].ToString();
                                    rm.subbS7 = ds.Tables[1].Rows[6]["SUB"].ToString();
                                }
                                else if (i == 7)
                                {
                                    rm.subS8 = ds.Tables[1].Rows[7]["SUBNM"].ToString();
                                    rm.subM8 = ds.Tables[1].Rows[7]["MEDIUM"].ToString();
                                    rm.subbS8 = ds.Tables[1].Rows[7]["SUB"].ToString();
                                }
                                else if (i == 8)
                                {
                                    rm.s9 = ds.Tables[1].Rows[8]["SUBNM"].ToString();
                                    rm.m9 = ds.Tables[1].Rows[8]["MEDIUM"].ToString();
                                    rm.subbS9 = ds.Tables[1].Rows[8]["SUB"].ToString();
                                }
                                else if (i == 9)
                                {
                                    rm.s10 = ds.Tables[1].Rows[9]["SUBNM"].ToString();
                                    rm.m10 = ds.Tables[1].Rows[9]["MEDIUM"].ToString();
                                    rm.subbS10 = ds.Tables[1].Rows[9]["SUB"].ToString();
                                }
                                else if (i == 10)
                                {
                                    rm.s11 = ds.Tables[1].Rows[10]["SUBNM"].ToString();
                                    rm.subbS11 = ds.Tables[1].Rows[10]["SUB"].ToString();
                                }
                                else if (i == 11)
                                {
                                    rm.s12 = ds.Tables[1].Rows[11]["SUBNM"].ToString();
                                }

                            }
                        }
                    }
                    else
                    {
                        return RedirectToAction("FinalSubmittedRecordsAll", "RegistrationPortal");
                    }
                }
                catch (Exception ex)
                {
                    return RedirectToAction("FinalSubmittedRecordsAll", "RegistrationPortal");
                }

            }
            //return View(asm);
            return View(rm);
        }
        #endregion Final Submitted Records form All Forms 

        #region UpdateAadharEnrollNo
        public JsonResult UpdateAadharEnrollNo(string std_id, string aadhar_num, string SCHL, string Caste, string gender, string BPL, string Rel, string Epunid)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();

            try
            {

                string dee = "";
                string outstatus = "";
                string Search = string.Empty;
                //string res = objDB.UpdaadharEnrollmentNo(std_id, aadhar_num, SCHL);
                DataSet res1 = objDB.UpdaadharEnrollmentNo(std_id, aadhar_num, SCHL, Caste, gender, BPL, Rel, Epunid);
                string res = res1.Tables[0].Rows[0]["res"].ToString();
                if (res == "1")
                {
                    //dee = res;
                    dee = "Yes";
                }
                else
                    dee = "No";

                return Json(new { sn = dee, chid = res }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                oErrorLog.WriteErrorLog(ex.ToString(), Path.GetFileName(Request.Path));
                //return RedirectToAction("Logout", "Login");
                return null;
            }
        }
        #endregion UpdateAadharEnrollNo

        #region OtherBoardAllottedRegno

        public ActionResult OtherBoardAllottedRegno(int? page)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            var itemsch = new SelectList(new[]{new {ID="1",Name="By UniqueID"},new{ID="2",Name="Candidate Name"},
            new{ID="3",Name="Father's Name"},new{ID="4",Name="Mother's Name"},new{ID="5",Name="DOB"},new{ID="6",Name="Class Rollnum"},new{ID="7",Name="REGNO"},new{ID="8",Name="Section"},}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();

            if (ModelState.IsValid)
            {

                string Search = string.Empty;
                string schlid = "";
                if (Session["SCHL"] != null)
                {
                    schlid = Session["SCHL"].ToString();
                }
                else
                {
                    return View(rm);
                }

                int pageIndex = 1;
                pageIndex = page.HasValue ? Convert.ToInt32(page) : 1;
                ViewBag.pagesize = pageIndex;

                Search = "form_Name like '%2' and schl='" + schlid + "' and a.std_id like '%' ";
                rm.StoreAllData = objDB.FinalSubmittedRecordsAll(Search, pageIndex);
                // asm.StoreAllData = objDB.SearchSchoolDetails(Search);
                if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                {
                    ViewBag.Message = "Record Not Found";
                    ViewBag.TotalCount = 0;
                    return View();
                }
                else
                {
                    //ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    //return View(rm);
                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    ViewBag.TotalCount1 = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                    int tp = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                    int pn = tp / 30;
                    int cal = 30 * pn;
                    int res = Convert.ToInt32(ViewBag.TotalCount1) - cal;
                    if (res >= 1)
                        ViewBag.pn = pn + 1;
                    else
                        ViewBag.pn = pn;
                    //ViewBag.Importfalg = rm.StoreAllData.Tables[0].Rows[0]["importflag"].ToString();
                    //ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    return View(rm);
                }
            }
            else
            {
                return View(rm);
                // return N2Formgrid();
            }
        }

        [HttpPost]
        public ActionResult OtherBoardAllottedRegno(int? page, FormCollection frm)
        {
            var itemsch = new SelectList(new[]{new {ID="1",Name="By UniqueID"},new{ID="2",Name="Candidate Name"},
            new{ID="3",Name="Father's Name"},new{ID="4",Name="Mother's Name"},new{ID="5",Name="DOB"},new{ID="6",Name="Class Rollnum"},new{ID="7",Name="REGNO"},new{ID="8",Name="Section"},}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();

            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            if (ModelState.IsValid)
            {

                string Search = string.Empty;
                //Search = "form_Name='N2' and a.std_id like '%' ";
                string schlid = "";
                if (Session["SCHL"] != null)
                {
                    schlid = Session["SCHL"].ToString();
                }
                else
                {
                    return View(rm);
                }
                Search = "form_Name like '%2' and schl='" + schlid + "' and a.std_id like '%' ";
                if (frm["SelList"] != "")
                {
                    ViewBag.SelectedItem = frm["SelList"];
                    int SelValueSch = Convert.ToInt32(frm["SelList"].ToString());


                    if (frm["SearchString"] != "")
                    {
                        if (SelValueSch == 1)
                        { Search += " and a.std_id='" + frm["SearchString"].ToString() + "'"; }
                        else if (SelValueSch == 2)
                        { Search += " and  a.Candi_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                        else if (SelValueSch == 3)
                        { Search += " and a.Father_Name  like '%" + frm["SearchString"].ToString() + "%'"; }
                        else if (SelValueSch == 4)
                        { Search += " and a.Mother_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                        else if (SelValueSch == 5)
                        { Search += " and a.DOB='" + frm["SearchString"].ToString() + "'"; }
                        else if (SelValueSch == 6)
                        { Search += " and a.Class_Roll_Num_Section ='" + frm["SearchString"].ToString() + "'"; }
                        else if (SelValueSch == 7)
                        { Search += " and a.Registration_num ='" + frm["SearchString"].ToString() + "'"; }
                        else if (SelValueSch == 8)
                        { Search += " and a.section ='" + frm["SearchString"].ToString() + "'"; }
                    }


                }
                int pageIndex = 1;
                pageIndex = page.HasValue ? Convert.ToInt32(page) : 1;
                ViewBag.pagesize = pageIndex;

                rm.StoreAllData = objDB.FinalSubmittedRecordsAll(Search, pageIndex);
                TempData["Search"] = Search;
                // asm.StoreAllData = objDB.SearchSchoolDetails(Search);
                if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                {
                    ViewBag.Message = "Record Not Found";
                    ViewBag.TotalCount = 0;
                    return View();
                }
                else
                {

                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    ViewBag.TotalCount1 = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                    int tp = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                    int pn = tp / 30;
                    int cal = 30 * pn;
                    int res = Convert.ToInt32(ViewBag.TotalCount1) - cal;
                    if (res >= 1)
                        ViewBag.pn = pn + 1;
                    else
                        ViewBag.pn = pn;
                    //ViewBag.Importfalg = rm.StoreAllData.Tables[0].Rows[0]["importflag"].ToString();
                    //ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    return View(rm);
                }
            }
            else
            {
                return View(rm);
                //return N2Formgrid();
            }
        }

        #endregion OtherBoardAllottedRegno

        #region RegErrorCodes
        public ActionResult RegErrorCodes()
        {
            return View();
        }
        #endregion RegErrorCodes

        #region Open Cutlist
        public ActionResult OpenCutlist()
        {
            return View();
        }
        #endregion Open Cutlist

        #region Update NADID
        public JsonResult UpdateNADID(string std_id, string NADID, string SCHL)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();

            try
            {

                string dee = "";
                string outstatus = "";
                string Search = string.Empty;
                DataSet res1 = objDB.UpdateNADID(std_id, NADID, SCHL);
                string res = res1.Tables[0].Rows[0]["res"].ToString();
                if (res != "0")
                {
                    //dee = res;
                    dee = "Yes";
                }
                else
                    dee = "No";

                return Json(new { sn = dee, chid = res }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                oErrorLog.WriteErrorLog(ex.ToString(), Path.GetFileName(Request.Path));
                //return RedirectToAction("Logout", "Login");
                return null;
            }
        }
        #endregion UpdateAadharEnrollNo

        #region Inter Board Migration Schl
        public ActionResult InterBoardMigrationSchl()
        {
            ViewBag.FormName = Request.QueryString["Form"];
            Session["FormName"] = Request.QueryString["Form"];
            var itemsch = new SelectList(new[]{new {ID="1",Name="ALL"},new{ID="2",Name="Request ID"},new{ID="3",Name="Candidate Name"},
            new{ID="4",Name="Father's Name"},new{ID="5",Name="Mother's Name"},new{ID="6",Name="Regno"}}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();

            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            string Search = string.Empty;
            string schlid = "";
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            if (Session["SCHL"] != null)
            {
                schlid = Session["SCHL"].ToString();
            }
            Search = "schl='" + schlid + "' and class not in (5,8) and Form  in ('N2','M2','E2','T2') and   isnull(PanelType,'')='IB' ";
            rm.StoreAllData = objDB.GetLateAdmissionSchl(Search);
            if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
            {
                ViewBag.Message = "Record Not Found";
                ViewBag.TotalCount = 0;
            }
            else
            {
                ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
            }
            return View(rm);
        }
        [HttpPost]
        public ActionResult InterBoardMigrationSchl(FormCollection frm)
        {
            try
            {
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }

                var itemsch = new SelectList(new[]{new {ID="1",Name="ALL"},new{ID="2",Name="Request ID"},new{ID="3",Name="Candidate Name"},
            new{ID="4",Name="Father's Name"},new{ID="5",Name="Mother's Name"},new{ID="6",Name="Regno"}}, "ID", "Name", 1);
                ViewBag.MySch = itemsch.ToList();

                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (ModelState.IsValid)
                {

                    string Search = string.Empty;
                    string schlid = "";
                    if (Session["SCHL"] != null)
                    {
                        schlid = Session["SCHL"].ToString();
                    }
                    else
                    {
                        return View(rm);
                    }
                    Search = "schl='" + schlid + "' and class not in (5,8) and Form  in ('N2','M2','E2','T2') and   isnull(PanelType,'')='IB' ";

                    if (frm["SelList"] != "")
                    {
                        ViewBag.SelectedItem = frm["SelList"];
                        int SelValueSch = Convert.ToInt32(frm["SelList"].ToString());


                        if (frm["SearchString"] != "")
                        {
                            if (SelValueSch == 1)
                            { Search += "and RequestID like '%' "; }
                            else if (SelValueSch == 2)
                            { Search += " and RequestID='" + frm["SearchString"].ToString() + "'"; }
                            else if (SelValueSch == 3)
                            { Search += " and Candi_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 4)
                            { Search += " and Father_Name  like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 5)
                            { Search += " and Mother_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 6)
                            { Search += " and RegNo like '%" + frm["SearchString"].ToString() + "%'"; }
                        }

                    }

                    rm.StoreAllData = objDB.GetLateAdmissionSchl(Search);
                    if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message = "Record Not Found";
                        ViewBag.TotalCount = 0;
                        return View();
                    }
                    else
                    {
                        ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                        return View(rm);
                    }
                }
                else
                {
                    return View(rm);
                }
            }
            catch (Exception)
            {

                return RedirectToAction("Index", "Home");
            }

        }


        #region Inter Board Migration PayFee 

        [SessionCheckFilter]
        public ActionResult InterBoardMigrationPayFee(string id)
        {
            string Schl = Session["SCHL"].ToString();
            RegistrationModels rm = new RegistrationModels();
            EAffiliationFee _EAffiliationFee = new EAffiliationFee();
            if (!string.IsNullOrEmpty(id))
            {
                DataSet ds = AbstractLayer.RegistrationDB.GetInterBoardMigrationPayFee(id);
                _EAffiliationFee.PaymentFormData = ds;
                if (_EAffiliationFee.PaymentFormData == null || _EAffiliationFee.PaymentFormData.Tables[0].Rows.Count == 0)
                { ViewBag.TotalCount = 0; Session["InterBoardMigrationPayFee"] = null; }
                else
                {
                    Session["InterBoardMigrationPayFee"] = ds;
                    ViewBag.TotalFee = Convert.ToInt32(ds.Tables[0].AsEnumerable().Sum(x => x.Field<int>("fee")));
                    ViewBag.TotalLateFee = Convert.ToInt32(ds.Tables[0].AsEnumerable().Sum(x => x.Field<int>("latefee")));
                    ViewBag.TotalTotfee = Convert.ToInt32(ds.Tables[0].AsEnumerable().Sum(x => x.Field<int>("Totfee")));

                    ViewBag.Total = ViewBag.TotalFee + ViewBag.TotalLateFee;
                    ViewData["result"] = 10;
                    ViewData["FeeStatus"] = "1";
                    ViewBag.TotalCount = 1;
                    return View(_EAffiliationFee);
                }
            }
            else
            {
                ViewBag.Message = "Record Not Found";
                ViewBag.TotalCount = 0;
            }


            return View(_EAffiliationFee);
        }



        [HttpPost]
        [SessionCheckFilter]
        public ActionResult InterBoardMigrationPayFee(string id, FormCollection frm, string PayModValue, string AllowBanks)
        {
            string Schl = Session["SCHL"].ToString();
            try
            {

                EAffiliationFee pfvm = new EAffiliationFee();
                ChallanMasterModel CM = new ChallanMasterModel();
                if (string.IsNullOrEmpty(id))
                {
                    return RedirectToAction("InterBoardMigrationSchl", "RegistrationPortal");
                }
                if (Session["InterBoardMigrationPayFee"] == null)
                {
                    return RedirectToAction("InterBoardMigrationSchl", "RegistrationPortal");
                }
                string appno = id;
                DataSet ds = (DataSet)Session["InterBoardMigrationPayFee"];
                pfvm.PaymentFormData = ds;

                string bankName = "";

                if (AllowBanks == "301" || AllowBanks == "302")
                {
                    PayModValue = "online";
                    CM.FEEMODE = "ONLINE";
                    if (AllowBanks == "301")
                    {
                        bankName = "HDFC Bank";
                    }
                    else if (AllowBanks == "302")
                    {
                        bankName = "Punjab And Sind Bank";
                    }
                }
                else if (AllowBanks == "203")
                {
                    CM.FEEMODE = "CASH";
                    PayModValue = "hod";
                    bankName = "PSEB HOD";
                }
                else if (AllowBanks == "202" || AllowBanks == "204")
                {
                    CM.FEEMODE = "CASH";
                    PayModValue = "offline";
                    if (AllowBanks == "202")
                    {
                        bankName = "Punjab National Bank";
                    }
                    else if (AllowBanks == "204")
                    {
                        bankName = "State Bank of India";
                    }
                }



                ViewBag.TotalFee = Convert.ToInt32(ds.Tables[0].AsEnumerable().Sum(x => x.Field<int>("fee")));
                ViewBag.TotalLateFee = Convert.ToInt32(ds.Tables[0].AsEnumerable().Sum(x => x.Field<int>("latefee")));
                ViewBag.TotalTotfee = Convert.ToInt32(ds.Tables[0].AsEnumerable().Sum(x => x.Field<int>("Totfee")));
                ViewBag.Total = ViewBag.TotalFee + ViewBag.TotalLateFee;

                string stdid = ds.Tables[0].Rows[0]["RequestID"].ToString();

                if (string.IsNullOrEmpty(AllowBanks))
                {
                    ViewBag.Message = "Please Select Bank";
                    ViewData["SelectBank"] = "1";
                    return View(pfvm);
                }


                if (ModelState.IsValid)
                {
                    CM.FEE = Convert.ToInt32(ViewBag.TotalFee);
                    CM.latefee = Convert.ToInt32(ViewBag.TotalLateFee);
                    CM.TOTFEE = Convert.ToInt32(ViewBag.TotalTotfee);
                    string TotfeePG = (CM.TOTFEE).ToString();
                    CM.FEECAT = ds.Tables[0].Rows[0]["FeeCat"].ToString();
                    CM.FEECODE = ds.Tables[0].Rows[0]["FeeCode"].ToString();
                    CM.BCODE = AllowBanks;
                    CM.BANK = bankName;
                    CM.BANKCHRG = 0;
                    CM.SchoolCode = Schl;
                    CM.DIST = "";
                    CM.DISTNM = "";
                    CM.LOT = 1;
                    CM.SCHLREGID = Schl;
                    CM.FeeStudentList = stdid;
                    CM.APPNO = stdid;
                    CM.type = "schle";
                    CM.CHLNVDATE = Convert.ToString(ds.Tables[0].Rows[0]["BankLastdate"].ToString());
                    DateTime BankLastDate = Convert.ToDateTime(ds.Tables[0].Rows[0]["BankLastdate"].ToString());
                    DateTime CHLNVDATE2;
                    if (DateTime.TryParseExact(BankLastDate.ToString("dd/MM/yyyy"), "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, out CHLNVDATE2))
                    {
                        CM.ChallanVDateN = CHLNVDATE2;
                    }
                    else
                    {
                        CM.ChallanVDateN = BankLastDate;
                    }

                    string SchoolMobile = "";
                    string result = new AbstractLayer.HomeDB().InsertPaymentForm(CM, frm, out SchoolMobile);
                    if (result == null || result == "0")
                    {
                        //--------------Not saved
                        ViewData["result"] = 0;
                        ViewData["Error"] = SchoolMobile;
                    }
                    else if (result == "-1")
                    {
                        //-----alredy exist
                        ViewData["result"] = -1;
                    }
                    else
                    {

                        ViewData["SelectBank"] = null;
                        ViewData["result"] = 1;
                        ViewBag.ChallanNo = result;
                        string paymenttype = CM.BCODE;
                        string bnkLastDate = Convert.ToDateTime(ds.Tables[0].Rows[0]["BankLastdate"].ToString()).ToString("dd/MM/yyyy");
                        if (PayModValue.ToString().ToLower().Trim() == "online" && result.ToString().Length > 10)
                        {
                            #region Payment Gateyway

                            if (paymenttype.ToUpper() == "301" && ViewBag.ChallanNo != "") /*HDFC*/
                            {
                                string AccessCode = ConfigurationManager.AppSettings["CcAvenueAccessCode"];
                                string CheckoutUrl = ConfigurationManager.AppSettings["CcAvenueCheckoutUrl"];
                                string WorkingKey = ConfigurationManager.AppSettings["CcAvenueWorkingKey"];
                                //******************
                                string invoiceNumber = ViewBag.ChallanNo;
                                string amount = TotfeePG;
                                //***************
                                var queryParameter = new CCACrypto();

                                string strURL = GatewayController.BuildCcAvenueRequestParameters(invoiceNumber, amount);

                                return View("../Gateway/CcAvenue", new CcAvenueViewModel(queryParameter.Encrypt
                                           (strURL, WorkingKey), AccessCode, CheckoutUrl));

                            }
                            else if (paymenttype.ToUpper() == "302" && ViewBag.ChallanNo != "")/*ATOM*/
                            {
                                string strURL;
                                string MerchantLogin = ConfigurationManager.AppSettings["ATOMLoginId"].ToString();
                                string MerchantPass = ConfigurationManager.AppSettings["ATOMPassword"].ToString();
                                string MerchantDiscretionaryData = "NB";  // for netbank                               
                                string ClientCode = CM.APPNO;
                                string ProductID = ConfigurationManager.AppSettings["ATOMProductID"].ToString();
                                string CustomerAccountNo = "0123456789";
                                string TransactionType = "NBFundTransfer";  // for netbank
                                                                            //string TransactionAmount = "1";
                                string TransactionAmount = TotfeePG;
                                string TransactionCurrency = "INR";
                                string TransactionServiceCharge = "0";
                                string TransactionID = ViewBag.ChallanNo;// Unique Challan Number
                                string TransactionDateTime = DateTime.Now.ToString("dd/MM/yyyy hh:mm:ss");
                                // string TransactionDateTime = "18/10/2020 13:15:19";
                                string BankID = "ATOM";

                                string ru = ConfigurationManager.AppSettings["ATOMRU"].ToString();
                                // User Details
                                string udf1CustName = CM.SCHLREGID; // roll number

                                string udf2CustEmail = CM.FEECAT; /// Kindly submit Appno/Refno in client id, Fee cat in Emailid (ATOM)
                                string udf3CustMob = SchoolMobile;

                                strURL = GatewayController.ATOMTransferFund(MerchantLogin, MerchantPass, MerchantDiscretionaryData, ProductID, ClientCode, CustomerAccountNo, TransactionType,
                                  TransactionAmount, TransactionCurrency, TransactionServiceCharge, TransactionID, TransactionDateTime, BankID, ru, udf1CustName, udf2CustEmail, udf3CustMob);

                                if (!string.IsNullOrEmpty(strURL))
                                {
                                    return View("../Gateway/AtomCheckoutUrl", new AtomViewModel(strURL));
                                }
                                else
                                {
                                    ViewData["result"] = -10;
                                    return View(pfvm);
                                }
                            }
                            #endregion Payment Gateyway
                        }
                        else if (result.Length > 5)
                        {

                            //string Sms = "Challan no. " + result + " of Ref no  " + CM.APPNO + " successfully generated and valid till Dt " + bnkLastDate + ". Regards PSEB";
                            //try
                            //{
                            //    string getSms = objCommon.gosms(SchoolMobile, Sms);
                            //}
                            //catch (Exception) { }
                            return RedirectToAction("GenerateChallaan", "Home", new { ChallanId = result });

                        }
                    }
                }
                return View(pfvm);
            }
            catch (Exception ex)
            {
                return RedirectToAction("InterBoardMigrationSchl", "RegistrationPortal");
            }
        }



        public ActionResult InterBoardMigrationLetter(string CID)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            string result = "";
            if (CID != "" || CID != null)
            {
                rm.StoreAllData = objDB.LateAdmPrintLetter(CID);
                if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                {
                    ViewBag.Message = "Record Not Found";
                    ViewBag.TotalCount = 0;
                }
                else
                {
                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                }
                return View(rm);
            }
            else
            {
                return RedirectToAction("InterBoardMigrationSchl", "RegistrationPortal");
            }
        }

        #endregion Inter Board Migration PayFee 


        #endregion Inter Board Migration Schl

        #region Late Admission Schl
        [SessionCheckFilter]
        public ActionResult LateAdmissionSchl()
        {
            LoginSession loginSession = (LoginSession)Session["LoginSession"];

            ViewBag.FormName = Request.QueryString["Form"];
            Session["FormName"] = Request.QueryString["Form"];
            var itemsch = new SelectList(new[]{new {ID="1",Name="ALL"},new{ID="2",Name="Request ID"},new{ID="3",Name="Candidate Name"},
            new{ID="4",Name="Father's Name"},new{ID="5",Name="Mother's Name"},new{ID="6",Name="Regno"}}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();

            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            string Search = string.Empty;
            string schlid = "";
            if (Session["SCHL"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            if (Session["SCHL"] != null)
            {
                schlid = Session["SCHL"].ToString();
            }
            //Search = "schl='" + schlid + "' and Form not in ('N2','M2','E2','T2') ";

            Search = "schl='" + schlid + "'  and class not in (5,8)  and isnull(PanelType,'')!='IB' ";//show all
            rm.StoreAllData = objDB.GetLateAdmissionSchl(Search);
            if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
            {
                ViewBag.Message = "Record Not Found";
                ViewBag.TotalCount = 0;
            }
            else
            {
                ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
            }

            ViewBag.LastDate = rm.StoreAllData.Tables[1].Rows[0]["eDate"].ToString();



            return View(rm);
        }
        [HttpPost]
        public ActionResult LateAdmissionSchl(FormCollection frm)
        {
            LoginSession loginSession = (LoginSession)Session["LoginSession"];
            try
            {
                var itemsch = new SelectList(new[]{new {ID="1",Name="ALL"},new{ID="2",Name="Request ID"},new{ID="3",Name="Candidate Name"},
            new{ID="4",Name="Father's Name"},new{ID="5",Name="Mother's Name"},new{ID="6",Name="Regno"}}, "ID", "Name", 1);
                ViewBag.MySch = itemsch.ToList();

                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                if (ModelState.IsValid)
                {

                    string Search = string.Empty;
                    string schlid = "";
                    if (Session["SCHL"] != null)
                    {
                        schlid = Session["SCHL"].ToString();
                    }
                    else
                    {
                        return View(rm);
                    }
                    Search = "schl='" + schlid + "' and class not in (5,8) and isnull(PanelType,'')!='IB' ";

                    if (frm["SelList"] != "")
                    {
                        ViewBag.SelectedItem = frm["SelList"];
                        int SelValueSch = Convert.ToInt32(frm["SelList"].ToString());


                        if (frm["SearchString"] != "")
                        {
                            if (SelValueSch == 1)
                            { Search += "and RequestID like '%' "; }
                            else if (SelValueSch == 2)
                            { Search += " and RequestID='" + frm["SearchString"].ToString() + "'"; }
                            else if (SelValueSch == 3)
                            { Search += " and Candi_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 4)
                            { Search += " and Father_Name  like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 5)
                            { Search += " and Mother_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 6)
                            { Search += " and RegNo like '%" + frm["SearchString"].ToString() + "%'"; }
                        }

                    }

                    rm.StoreAllData = objDB.GetLateAdmissionSchl(Search);
                    if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message = "Record Not Found";
                        ViewBag.TotalCount = 0;
                    }
                    else
                    {
                        ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    }

                    ViewBag.LastDate = rm.StoreAllData.Tables[1].Rows[0]["eDate"].ToString();
                    return View(rm);
                }
                else
                {
                    return View(rm);
                }
            }
            catch (Exception)
            {

                return RedirectToAction("Index", "Home");
            }

        }

        [SessionCheckFilter]
        [HttpPost]
        public ActionResult AddLateAdmissionSchl(RegistrationModels rm, FormCollection frm, string PanelType)
        {
            LoginSession loginSession = (LoginSession)Session["LoginSession"];

            if (string.IsNullOrEmpty(PanelType))
            {
                return RedirectToAction("Index", "Home");
            }
            string fileNM = "";
            try
            {
                string RID = "";
                string cls = frm["class"];
                string formNM = frm["formNM"];
                string regno = frm["regno"];
                string name = frm["name"];
                string fname = frm["fname"];
                string mname = frm["mname"];
                string dob = frm["dob"];
                string mobileno = frm["mobileno"];
                string OBoard = "P.S.E.B BOARD";
                if (formNM == "N2" || formNM == "M2" || formNM == "E2" || formNM == "T2")
                {
                    OBoard = frm["Board"];
                }

                string usertype = "Schl";
                if (rm.file != null)
                {
                    fileNM = Path.GetFileName(rm.file.FileName);
                }


                string refno = new AbstractLayer.RegistrationDB().SetLateAdmissionSchl(loginSession.SCHL, loginSession.SCHL, PanelType, loginSession.SCHL, RID, cls, formNM, regno, name, fname, mname, dob, mobileno, fileNM, usertype, OBoard);

                if (rm.file != null)
                {
                    fileNM = refno + Path.GetExtension(rm.file.FileName);
                    //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                    //var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/LateAdmission/" + fileNM));
                    //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/LateAdmission/"));
                    //if (!Directory.Exists(FilepathExist))
                    //{
                    //    Directory.CreateDirectory(FilepathExist);
                    //}
                    //rm.file.SaveAs(path);

                    using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                    {
                        using (var newMemoryStream = new MemoryStream())
                        {
                            var uploadRequest = new TransferUtilityUploadRequest
                            {
                                InputStream = rm.file.InputStream,
                                Key = string.Format("allfiles/Upload2024/LateAdmission/{0}", fileNM),
                                BucketName = BUCKET_NAME,
                                CannedACL = S3CannedACL.PublicRead
                            };

                            var fileTransferUtility = new TransferUtility(client);
                            fileTransferUtility.Upload(uploadRequest);
                        }
                    }
                }

                if (!string.IsNullOrEmpty(refno) && refno.Length > 5)
                {
                    TempData["resultUpdate"] = "11";
                    TempData["RequestId"] = refno;

                    if (!string.IsNullOrEmpty(mobileno))
                    {
                        //     //Dear Student, Your request for late admission permission is {#var#} submitted to PSEB with Req ID : {#var#}. Thanks PSEB 
                        string Sms = "Dear Student, Your request for late admission permission is successfully submitted to PSEB with Req ID : " + refno + ". Thanks PSEB";
                        string getSms = new AbstractLayer.DBClass().gosms(mobileno, Sms);
                    }
                }

                if (string.IsNullOrEmpty(PanelType))
                {
                    PanelType = "LA";
                }
                if (PanelType == "IB")
                {
                    return RedirectToAction("InterBoardMigrationSchl", "RegistrationPortal");
                }
                return RedirectToAction("LateAdmissionSchl", "RegistrationPortal");

            }
            catch (Exception)
            {

                return RedirectToAction("Index", "Home");
            }

        }

        [SessionCheckFilter]
        [HttpPost]
        public ActionResult ModifyLateAdmissionSchl(RegistrationModels rm, FormCollection frm, string cmd, string RequestID, string PanelType)
        {
            LoginSession loginSession = (LoginSession)Session["LoginSession"];



            if (string.IsNullOrEmpty(PanelType))
            {
                return RedirectToAction("Index", "Home");
            }
            string fileNM = "";
            try
            {
                //var did = frm.AllKeys[8].ToString();
                string RID = frm["RID"];
                string cls = frm["class"];
                string formNM = frm["formNM"];
                string regno = frm["regno"];
                string name = frm["name"];
                string fname = frm["fname"];
                string mname = frm["mname"];
                string dob = frm["dob"];
                string mobileno = frm["mobileno"];
                string usertype = "Schl";
                //rm.file = frm["file"];
                string OBoard = "P.S.E.B BOARD";
                if (formNM == "N2" || formNM == "M2" || formNM == "E2" || formNM == "T2")
                {
                    OBoard = frm["Board"];
                }

                if (rm.fileM != null)
                {
                    fileNM = Path.GetFileName(rm.fileM.FileName);
                }
                if (RID != "" && cls != "0" && formNM != "0" && name != "" && fname != "" && mname != "" && dob != "")
                {

                    string refno = new AbstractLayer.RegistrationDB().SetLateAdmissionSchl(loginSession.SCHL, loginSession.SCHL, PanelType, loginSession.SCHL, RID, cls, formNM, regno, name, fname, mname, dob, mobileno, fileNM, usertype, OBoard);

                    if (rm.fileM != null)
                    {
                        fileNM = refno + Path.GetExtension(rm.fileM.FileName);
                        //var path = Path.Combine(Server.MapPath("~/Upload/"+ formName + "/" + dist + "/Photo"), stdPic);
                        //var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/LateAdmission/" + fileNM));
                        //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/LateAdmission/"));
                        //if (!Directory.Exists(FilepathExist))
                        //{
                        //    Directory.CreateDirectory(FilepathExist);
                        //}
                        //rm.fileM.SaveAs(path);

                        using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                        {
                            using (var newMemoryStream = new MemoryStream())
                            {
                                var uploadRequest = new TransferUtilityUploadRequest
                                {
                                    InputStream = rm.fileM.InputStream,
                                    Key = string.Format("allfiles/Upload2024/LateAdmission/{0}", fileNM),
                                    BucketName = BUCKET_NAME,
                                    CannedACL = S3CannedACL.PublicRead
                                };

                                var fileTransferUtility = new TransferUtility(client);
                                fileTransferUtility.Upload(uploadRequest);
                            }
                        }
                    }
                    TempData["resultUpdate"] = "12";
                }


                if (PanelType == "IB")
                {
                    return RedirectToAction("InterBoardMigrationSchl", "RegistrationPortal");

                }
                return RedirectToAction("LateAdmissionSchl", "RegistrationPortal");

            }
            catch (Exception)
            {

                return RedirectToAction("Index", "Home");
            }

        }

        [HttpPost]
        public JsonResult SetLateAdmissionSchl(string RID, string cls, string formNM, string regno, string name, string fname,
            string mname, string dob, string mobileno, HttpFileCollectionBase file)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            FormCollection frc = new FormCollection();
            ViewBag.updStatus = "";
            if (Session["SCHL"] == null)
            {
                return Json(ViewBag.updStatus);
            }
            return Json(ViewBag.updStatus);
        }
        public ActionResult FinalSubmit(string CID, string mobileNo, string formNM, string PanelType)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            string result = "";

            if (string.IsNullOrEmpty(PanelType))
            {
                return RedirectToAction("Index", "Home");
            }

            if (CID != "" || CID != null)
            {
                result = objDB.FinalSubmitLateAdmissionSchl(CID);
                ViewData["resultUpdate"] = result;
                TempData["resultUpdate"] = result;
                AbstractLayer.DBClass dbclass = new AbstractLayer.DBClass();
                if (mobileNo != null && mobileNo != "" && result != "")
                {
                    string Sms = "";
                    if (PanelType == "IB")
                    {
                        Sms = "Your Inter Board Migration Form Request No. " + CID + " has been final submitted, Save it till process done.";

                    }
                    else { Sms = "Your late admission form Request No. " + CID + " has been final submitted, Save it till process done."; }

                    string getSms = dbclass.gosms(mobileNo, Sms);
                }
            }
            else
            {
                ViewData["resultUpdate"] = result;
                TempData["resultUpdate"] = result;

            }

            if (PanelType == "IB")
            {
                return RedirectToAction("InterBoardMigrationSchl", "RegistrationPortal");

            }
            return RedirectToAction("LateAdmissionSchl", "RegistrationPortal");
        }
        public ActionResult LateAdmPrintLetter(string CID)
        {
            if (Session["SCHL"] == null && Session["UserName"] == null)
            {
                return RedirectToAction("Logout", "Login");
            }
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            string result = "";
            if (CID != "" || CID != null)
            {
                rm.StoreAllData = objDB.LateAdmPrintLetter(CID);
                if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                {
                    ViewBag.Message = "Record Not Found";
                    ViewBag.TotalCount = 0;
                }
                else
                {
                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                }
                return View(rm);
            }
            else
            {
                return RedirectToAction("LateAdmissionSchl", "RegistrationPortal");
            }
        }

        public JsonResult GetLateAdmRIDVerify(int RID)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            DataSet rsch = objDB.GetLateAdmRIDVerify(RID);
            if (rsch.Tables[0].Rows.Count > 0)
            {
                ViewBag.LateAdmDate = rsch.Tables[0].Rows[0]["ApprovalUPTO"].ToString();
            }
            else
            {
                ViewBag.LateAdmDate = null;
            }
            return Json(ViewBag.LateAdmDate);
        }
        [HttpPost]
        public JsonResult GetLateAdmRIDDataVerify(int RID, string CNM, string FNM, string MNM, string DOB)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();

            DataSet rsch = objDB.GetLateAdmRIDDataVerify(RID, CNM, FNM, MNM, DOB);
            if (rsch.Tables[0].Rows.Count > 0)
            {
                ViewBag.updStatus = rsch.Tables[0].Rows[0]["result"].ToString();
            }
            else
            {
                ViewBag.updStatus = null;
            }
            return Json(new { sn = ViewBag.updStatus }, JsonRequestBehavior.AllowGet);
        }
        #endregion Late Admission Schl

        #region For Api Admit Card Status
        public ActionResult AdmitCardStatus(FormCollection frm, RegistrationModels rm, int? page)
        {
            try
            {
                //ViewBag.SelectedItem
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                string schid = Session["SCHL"].ToString();
                DataSet result = objDB.schooltypesCorrection(schid, ""); // passing Value to DBClass from model
                if (result == null)
                {
                    return RedirectToAction("Index", "Home");
                }
                if (result.Tables[1].Rows.Count > 0)
                {

                    ViewBag.Matric = result.Tables[1].Rows[0]["Matric"].ToString();
                    ViewBag.OMatric = result.Tables[1].Rows[0]["OMatric"].ToString();
                    ViewBag.Senior = result.Tables[1].Rows[0]["Senior"].ToString();
                    ViewBag.OSenior = result.Tables[1].Rows[0]["OSenior"].ToString();

                    DateTime sDateM = Convert.ToDateTime(result.Tables[6].Rows[1]["sDate"]);
                    DateTime eDateM = Convert.ToDateTime(result.Tables[6].Rows[1]["eDate"]);

                    DateTime sDateT = Convert.ToDateTime(result.Tables[6].Rows[3]["sDate"]);
                    DateTime eDateT = Convert.ToDateTime(result.Tables[6].Rows[3]["eDate"]);

                    DateTime sDateMO = Convert.ToDateTime(result.Tables[6].Rows[4]["sDate"]);
                    DateTime eDateMO = Convert.ToDateTime(result.Tables[6].Rows[4]["eDate"]);

                    DateTime sDateTO = Convert.ToDateTime(result.Tables[6].Rows[5]["sDate"]);
                    DateTime eDateTO = Convert.ToDateTime(result.Tables[6].Rows[5]["eDate"]);

                    DateTime dtTodate = Convert.ToDateTime(DateTime.Today);

                    List<SelectListItem> itemsch = new List<SelectListItem>();

                    if (ViewBag.Matric == "1" && dtTodate <= eDateM)
                    {
                        itemsch.Add(new SelectListItem { Text = "Matriculation Regular", Value = "1" });
                    }
                    if (ViewBag.OMatric == "1" && dtTodate <= eDateMO)
                    {
                        itemsch.Add(new SelectListItem { Text = "Matriculation Open", Value = "2" });
                    }
                    if (ViewBag.Senior == "1" && dtTodate <= eDateT)
                    {
                        itemsch.Add(new SelectListItem { Text = "Sr.Secondary Regular", Value = "3" });
                    }
                    if (ViewBag.OSenior == "1" && dtTodate <= eDateTO)
                    {
                        itemsch.Add(new SelectListItem { Text = "Sr.Secondary Open", Value = "4" });
                    }
                    if (ViewBag.Matric != "1" && ViewBag.OMatric != "1" && ViewBag.Senior != "1" && ViewBag.OSenior != "1")
                    {
                        itemsch.Add(new SelectListItem { Text = "", Value = "" });
                    }
                    ViewBag.MySch = itemsch.ToList();
                    // Next Page 
                    int pageIndex = Convert.ToInt32(page);
                    pageIndex = page.HasValue ? Convert.ToInt32(page) : 1;
                    ViewBag.pagesize = pageIndex;
                    if (ModelState.IsValid && page != null && TempData["Searchstring"] != null)
                    {
                        string Search = string.Empty;
                        string Std_id = frm["SearchString"];
                        string schlid = "";
                        if (Session["SCHL"] != null)
                        {
                            schlid = Session["SCHL"].ToString();
                        }
                        else
                        {
                            return View(rm);
                        }
                        Search = TempData["Searchstring"].ToString();
                        TempData["Searchstring"] = Search;
                        rm.StoreAllData = objDB.AdmitCardStatusSearch(Search, pageIndex);
                        ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                        ViewBag.TotalCountP = rm.StoreAllData.Tables[0].Rows.Count;
                        if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                        {
                            ViewBag.Message = "Record Not Found";
                            ViewBag.TotalCount = 0;
                            return View(rm);
                        }
                        else
                        {
                            ViewBag.TotalCount = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"].ToString());
                            ViewBag.TotalCount1 = Convert.ToInt32(ViewBag.TotalCountP);
                            int tp = Convert.ToInt32(ViewBag.TotalCount);
                            int pn = tp / 30;
                            int cal = 30 * pn;
                            int res = Convert.ToInt32(ViewBag.TotalCount) - cal;
                            if (res >= 1)
                                ViewBag.pn = pn + 1;
                            else
                                ViewBag.pn = pn;

                            return View(rm);
                        }
                    }

                }
                if (ModelState.IsValid)
                { return View(); }
                else
                { return View(); }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }
        [HttpPost]
        public ActionResult AdmitCardStatus(FormCollection frm, RegistrationModels rm, int? page, string cmd)
        {
            try
            {
                if (Session["SCHL"] == null)
                {
                    return RedirectToAction("Logout", "Login");
                }
                int pageIndex = 1;
                pageIndex = page.HasValue ? Convert.ToInt32(page) : 1;
                ViewBag.pagesize = pageIndex;
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                //RegistrationModels rm = new RegistrationModels();
                rm = new RegistrationModels();
                string schid = Session["SCHL"].ToString();
                DataSet result = objDB.schooltypesCorrection(schid, ""); // passing Value to DBClass from model
                if (result.Tables[1].Rows.Count > 0)
                {
                    ViewBag.Matric = result.Tables[1].Rows[0]["Matric"].ToString();
                    ViewBag.OMatric = result.Tables[1].Rows[0]["OMatric"].ToString();
                    ViewBag.Senior = result.Tables[1].Rows[0]["Senior"].ToString();
                    ViewBag.OSenior = result.Tables[1].Rows[0]["OSenior"].ToString();

                    List<SelectListItem> itemsch = new List<SelectListItem>();
                    if (ViewBag.Matric == "1") { itemsch.Add(new SelectListItem { Text = "Matriculation Regular", Value = "1" }); }
                    if (ViewBag.OMatric == "1") { itemsch.Add(new SelectListItem { Text = "Matriculation Open", Value = "2" }); }
                    if (ViewBag.Senior == "1") { itemsch.Add(new SelectListItem { Text = "Sr.Secondary Regular", Value = "3" }); }
                    if (ViewBag.OSenior == "1") { itemsch.Add(new SelectListItem { Text = "Sr.Secondary Open", Value = "4" }); }
                    if (ViewBag.Matric != "1" && ViewBag.OMatric != "1" && ViewBag.Senior != "1" && ViewBag.OSenior != "1")
                    { itemsch.Add(new SelectListItem { Text = "", Value = "" }); }
                    ViewBag.MySch = itemsch.ToList();
                }

                if (ModelState.IsValid)
                {
                    string Search = string.Empty;
                    string Std_id = frm["SearchString"];
                    string schlid = "";
                    if (Session["SCHL"] != null)
                    {
                        schlid = Session["SCHL"].ToString();
                    }
                    else
                    {
                        return View(rm);
                    }
                    switch (frm["SelList"].ToString())
                    {
                        case "1":
                            Search = "form in ('M1','M2') and schl='" + schlid + "' ";
                            break;
                        case "2":
                            Search = "form in ('M3') and schl='" + schlid + "' ";
                            break;
                        case "3":
                            Search = "form in ('T1','T2') and schl='" + schlid + "' ";
                            break;
                        case "4":
                            Search = "form in ('T3') and schl='" + schlid + "' ";
                            break;
                    }
                    ViewBag.SelectedItem = frm["SelList"];
                    TempData["Searchstring"] = Search;

                    rm.StoreAllData = objDB.AdmitCardStatusSearch(Search, pageIndex);
                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    ViewBag.TotalCountP = rm.StoreAllData.Tables[0].Rows.Count;
                    if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message = "Record Not Found";
                        ViewBag.TotalCount = 0;
                        return View(rm);
                    }
                    else
                    {
                        ViewBag.TotalCount = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"].ToString());
                        ViewBag.TotalCount1 = Convert.ToInt32(ViewBag.TotalCountP);
                        int tp = Convert.ToInt32(ViewBag.TotalCount);
                        int pn = tp / 30;
                        int cal = 30 * pn;
                        int res = Convert.ToInt32(ViewBag.TotalCount) - cal;
                        if (res >= 1)
                            ViewBag.pn = pn + 1;
                        else
                            ViewBag.pn = pn;

                        return View(rm);
                    }
                }
                return View();
            }
            catch (Exception ex)
            {
                return View(rm);
            }
        }
        [HttpPost]
        public ActionResult AdmitCardAcceptReject(string acceptid, string rejectid, string removeid)
        {
            string remstatus = "";
            string status = "";
            string userId = Session["schl"].ToString();
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            if (acceptid != "" || rejectid != "")
            {
                string OutStatus = "0";
                status = objDB.AdmitCardAcceptReject(acceptid, rejectid, removeid, userId, out OutStatus);
                var results = new
                {
                    status = OutStatus,
                };
                return Json(results);
            }
            else
            {
                return Json(status);
            }
        }

        #endregion

        #region comman Link for Admit card print

        public ActionResult AdmitCardComman()
        {
            return View();
        }

        [HttpPost]
        public ActionResult AdmitCardComman(FormCollection frc)
        {
            try
            {
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                {
                    rm.Correctiondata = null;
                    ViewBag.TotalCountadded = "";

                    rm.SelList = frc["SelList"].ToString();
                    rm.requestID = frc["requestID"].ToString();

                    string search = "";

                    if (rm.SelList.Trim() != "" && rm.SelList.Trim() != "0")
                    {
                        if (rm.SelList.Trim() == "1")
                        {
                            search = " reg.Registration_num='" + rm.requestID + "'";
                        }
                        if (rm.SelList.Trim() == "2")
                        {
                            search = " exm.ROLL='" + rm.requestID + "'";
                        }
                        if (rm.SelList.Trim() == "3")
                        {
                            search = " exm.reg16id='" + rm.requestID + "'";
                        }
                    }

                    rm.StoreAllData = objDB.GetCommanAdmitCardSearch(search);
                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message2 = "Record Not Found";
                        ViewBag.TotalCount2 = 0;
                    }
                }

                if (ModelState.IsValid)
                { return View(rm); }
                else
                { return View(); }
            }
            catch (Exception ex)
            {
                return RedirectToAction("Logout", "Login");
            }
        }

        public ActionResult AdmitCardCommanPrint(string roll)
        {
            try
            {
                FormCollection frc = new FormCollection();
                AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
                RegistrationModels rm = new RegistrationModels();
                {
                    string search = "";
                    if (roll != "" && roll != null)
                    {
                        search = " exm.ROLL='" + roll + "'";
                    }

                    rm.StoreAllData = objDB.GetCommanAdmitCardSearch(search);
                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message2 = "Record Not Found";
                        ViewBag.TotalCount2 = 0;
                    }
                }

                if (ModelState.IsValid)
                { return View(rm); }
                else
                { return View(); }
            }
            catch (Exception ex)
            {
                return View();// RedirectToAction("Logout", "Login");
            }
        }
        #endregion comman Link for Admit card print


        #region Unlock StdForm
        public JsonResult unlockStdForm(string std_id, string TeacherId, string TeacherMobile, string UnlockReason, string SCHL)
        {
            AbstractLayer.RegistrationDB objDB = new AbstractLayer.RegistrationDB();
            RegistrationModels rm = new RegistrationModels();
            string dee = "No";
            string res = "0";
            int outstatus = 0;
            try
            {

                string Search = string.Empty;
                string OTP = "";
                DataSet res1 = objDB.UnlockStdForm(std_id, TeacherId, TeacherMobile, UnlockReason, OTP, SCHL, out outstatus);
                return Json(new { sn = outstatus, chid = std_id }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { sn = outstatus, chid = std_id }, JsonRequestBehavior.AllowGet);
            }
        }
        #endregion  Unlock StdForm

        #region UpdatePreviousYearPhotoSign student


        public ActionResult UpdatePreviousYearPhotoSign(int? page)
        {
            string schl = Session["SCHL"].ToString();
            RegistrationModels rm = new RegistrationModels();


            DataSet result1 = new AbstractLayer.RegistrationDB().GetAllFormNameBySchl(schl);
            List<SelectListItem> FormList = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in result1.Tables[0].Rows)
            {
                FormList.Add(new SelectListItem { Text = @dr["FORM"].ToString(), Value = @dr["FORM"].ToString() });
            }
            ViewBag.MyForm = FormList;


            var itemsch = new SelectList(new[]{new {ID="1",Name="By UniqueID"},new{ID="2",Name="Candidate Name"},
            new{ID="3",Name="Father's Name"},new{ID="4",Name="Mother's Name"},new{ID="5",Name="DOB"},new{ID="6",Name="Class Rollnum"},
                new{ID="7",Name="REGNO"},}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();


            int pageIndex = 1;
            pageIndex = page.HasValue ? Convert.ToInt32(page) : 1;
            ViewBag.pagesize = pageIndex;

            string Search = string.Empty;
            Search = " schl='" + schl + "'  ";
            if (TempData["SearchUpdatePreviousYearPhotoSign"] != null)
            {

                Search += TempData["SearchUpdatePreviousYearPhotoSign"];
                rm.StoreAllData = new AbstractLayer.RegistrationDB().GetRegularStudentDataSearch(0, Search, pageIndex);
                TempData["SearchUpdatePreviousYearPhotoSign"] = Search;
                if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                {
                    ViewBag.Message = "Record Not Found";
                    ViewBag.TotalCount = 0;
                }
                else
                {

                    ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                    ViewBag.TotalCount1 = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                    int tp = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                    int pn = tp / 30;
                    int cal = 30 * pn;
                    int res = Convert.ToInt32(ViewBag.TotalCount1) - cal;
                    if (res >= 1)
                        ViewBag.pn = pn + 1;
                    else
                        ViewBag.pn = pn;
                }
            }

            return View(rm);
        }
        [HttpPost]
        public ActionResult UpdatePreviousYearPhotoSign(int? page, FormCollection frm)
        {
            string schl = Session["SCHL"].ToString();

            DataSet result1 = new AbstractLayer.RegistrationDB().GetAllFormNameBySchl(schl);
            List<SelectListItem> FormList = new List<SelectListItem>();
            foreach (System.Data.DataRow dr in result1.Tables[0].Rows)
            {
                FormList.Add(new SelectListItem { Text = @dr["FORM"].ToString(), Value = @dr["FORM"].ToString() });
            }
            ViewBag.MyForm = FormList;

            var itemsch = new SelectList(new[]{new {ID="1",Name="By UniqueID"},new{ID="2",Name="Candidate Name"},
            new{ID="3",Name="Father's Name"},new{ID="4",Name="Mother's Name"},new{ID="5",Name="DOB"},new{ID="6",Name="Class Rollnum"},
                new{ID="7",Name="REGNO"},}, "ID", "Name", 1);
            ViewBag.MySch = itemsch.ToList();

            int pageIndex = 1;
            pageIndex = page.HasValue ? Convert.ToInt32(page) : 1;
            ViewBag.pagesize = pageIndex;
            RegistrationModels rm = new RegistrationModels();
            if (ModelState.IsValid)
            {

                string Search = string.Empty;
                Search = " schl='" + schl + "'  ";
                if (frm["FormNameList"] != "")
                {
                    ViewBag.SelectedForm = frm["FormNameList"];
                    string formName = frm["FormNameList"].ToString();
                    Search += " and form_Name='" + formName + "' ";

                    if (frm["SelList"] != "")
                    {
                        ViewBag.SelectedItem = frm["SelList"];
                        int SelValueSch = Convert.ToInt32(frm["SelList"].ToString());
                        if (frm["SearchString"] != "")
                        {
                            if (SelValueSch == 1)
                            { Search += " and a.std_id='" + frm["SearchString"].ToString() + "'"; }
                            else if (SelValueSch == 2)
                            { Search += " and  a.Candi_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 3)
                            { Search += " and a.Father_Name  like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 4)
                            { Search += " and a.Mother_Name like '%" + frm["SearchString"].ToString() + "%'"; }
                            else if (SelValueSch == 5)
                            { Search += " and a.DOB='" + frm["SearchString"].ToString() + "'"; }
                            else if (SelValueSch == 6)
                            { Search += " and a.Class_Roll_Num_Section ='" + frm["SearchString"].ToString() + "'"; }
                            else if (SelValueSch == 7)
                            { Search += " and a.Registration_num ='" + frm["SearchString"].ToString() + "'"; }
                        }
                    }


                    TempData["SearchUpdatePreviousYearPhotoSign"] = Search;
                    rm.StoreAllData = new AbstractLayer.RegistrationDB().GetRegularStudentDataSearch(0, Search, pageIndex);
                    if (rm.StoreAllData == null || rm.StoreAllData.Tables[0].Rows.Count == 0)
                    {
                        ViewBag.Message = "Record Not Found";
                        ViewBag.TotalCount = 0;
                    }
                    else
                    {

                        ViewBag.TotalCount = rm.StoreAllData.Tables[0].Rows.Count;
                        ViewBag.TotalCount1 = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                        int tp = Convert.ToInt32(rm.StoreAllData.Tables[1].Rows[0]["decount"]);
                        int pn = tp / 30;
                        int cal = 30 * pn;
                        int res = Convert.ToInt32(ViewBag.TotalCount1) - cal;
                        if (res >= 1)
                            ViewBag.pn = pn + 1;
                        else
                            ViewBag.pn = pn;
                    }
                }
            }

            return View(rm);
        }


        [HttpPost]
        public JsonResult jqBulkUpdatePhotoSign(string studentid)
        {
            var flag = 1;
            int result1 = 0;
            studentid = studentid.Remove(studentid.Length - 1);
            //DataSet ds = new DataSet();
            DataSet ds = new AbstractLayer.RegistrationDB().GetStudentDataById(studentid); // std_id in ('+@studentid+')
            if (ds.Tables[0].Rows.Count > 0)
            {

                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {

                    string std_id = ds.Tables[0].Rows[i]["std_id"].ToString();
                    string formName = ds.Tables[0].Rows[i]["Form_Name"].ToString();
                    string result = ds.Tables[0].Rows[i]["StudentUniqueIdNEW"].ToString();
                    string filepathtosave = "";
                    string sldist = Session["SCHOOLDIST"].ToString();

                    result1 += i + 1;
                    #region Photo and Sign
                    string filePath = "";
                    string filePathSign = "";
                    string Upload = System.Configuration.ConfigurationManager.AppSettings["Upload"];
                    string oldyear = ds.Tables[0].Rows[i]["oldyear"].ToString();
                    if (ds.Tables[0].Rows[i]["std_Photo"].ToString() != null && ds.Tables[0].Rows[i]["std_Photo"].ToString() != "")
                    {
                        @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[i]["std_Photo"].ToString();
                    }
                    else
                    {

                        if (oldyear.ToString() == "2022")
                        {
                            if (ds.Tables[0].Rows[i]["std_Photo"].ToString() == null || ds.Tables[0].Rows[i]["std_Photo"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[i]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[i]["old_std_Photo"].ToString() != "")
                                {

                                    @ViewBag.Photo = ds.Tables[0].Rows[i]["old_std_Photo"].ToString();

                                    filePath = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[i]["old_std_Photo"].ToString();
                                }
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[i]["std_Photo"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2021")
                        {
                            if (ds.Tables[0].Rows[i]["std_Photo"].ToString() == null || ds.Tables[0].Rows[i]["std_Photo"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[i]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[i]["old_std_Photo"].ToString() != "")
                                {

                                    @ViewBag.Photo = ds.Tables[0].Rows[i]["old_std_Photo"].ToString();

                                    filePath = @"C:\ClusterStorage\Volume1\upload\upload2020\" + ds.Tables[0].Rows[i]["old_std_Photo"].ToString();
                                }
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[i]["std_Photo"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2020")
                        {
                            if (ds.Tables[0].Rows[i]["std_Photo"].ToString() == null || ds.Tables[0].Rows[i]["std_Photo"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[i]["old_std_Photo"].ToString() != null && ds.Tables[0].Rows[i]["old_std_Photo"].ToString() != "")
                                {

                                    @ViewBag.Photo = ds.Tables[0].Rows[i]["old_std_Photo"].ToString();
                                    filePath = @"C:\ClusterStorage\Volume1\upload\upload2019\" + ds.Tables[0].Rows[i]["old_std_Photo"].ToString();

                                }
                            }
                            else
                            {
                                @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[i]["std_Photo"].ToString();
                            }
                        }
                        else
                        {
                            @ViewBag.Photo = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[i]["std_Photo"].ToString();
                        }
                    }
                    //---------------------------------------------------------For Sign------------------------------------------

                    if (ds.Tables[0].Rows[i]["std_sign"].ToString() != null && ds.Tables[0].Rows[i]["std_sign"].ToString() != "")
                    {
                        //  not imported

                        @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[i]["std_Sign"].ToString();
                    }
                    else
                    {

                        if (oldyear.ToString() == "2022")
                        {
                            if (ds.Tables[0].Rows[i]["std_sign"].ToString() == null || ds.Tables[0].Rows[i]["std_sign"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[i]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[i]["old_std_sign"].ToString() != "")
                                {
                                    @ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/upload2022/" + ds.Tables[0].Rows[i]["old_std_sign"].ToString();
                                    filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2022\" + ds.Tables[0].Rows[i]["old_std_sign"].ToString();
                                }
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[i]["std_sign"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2021")
                        {
                            if (ds.Tables[0].Rows[i]["std_sign"].ToString() == null || ds.Tables[0].Rows[i]["std_sign"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[i]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[i]["old_std_sign"].ToString() != "")
                                {

                                    @ViewBag.sign = "https://psebdata.s3.ap-south-1.amazonaws.com/allfiles/upload2020/" + ds.Tables[0].Rows[i]["old_std_sign"].ToString();
                                    filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2020\" + ds.Tables[0].Rows[i]["old_std_sign"].ToString();
                                }
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[i]["std_sign"].ToString();
                            }
                        }
                        else if (oldyear.ToString() == "2020")
                        {
                            if (ds.Tables[0].Rows[i]["std_sign"].ToString() == null || ds.Tables[0].Rows[i]["std_sign"].ToString() == "")
                            {
                                if (ds.Tables[0].Rows[i]["old_std_sign"].ToString() != null && ds.Tables[0].Rows[i]["old_std_sign"].ToString() != "")
                                {
                                    @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[i]["old_std_sign"].ToString();
                                    filePathSign = @"C:\ClusterStorage\Volume1\upload\upload2019\" + ds.Tables[0].Rows[i]["old_std_sign"].ToString();
                                }
                            }
                            else
                            {
                                @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[i]["std_sign"].ToString();
                            }
                        }

                        else
                        {
                            @ViewBag.sign = ConfigurationManager.AppSettings["AWSURL"] + ds.Tables[0].Rows[i]["std_Sign"].ToString();
                        }
                    }

                    #endregion



                    if (!string.IsNullOrEmpty(result))
                    {
                        //-----------------------------------Session "2023-2024"------------
                        if (filePath != null)
                        {
                            var filePath1 = filePath;
                            if ((ds.Tables[0].Rows[i]["std_Photo"].ToString() == null || ds.Tables[0].Rows[i]["std_Photo"].ToString() == "") && (filePath != null && filePath != ""))
                            {
                                var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + sldist + "/Photo"), result + "P" + ".jpg");
                                string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + sldist + "/Photo"));
                                if (!Directory.Exists(FilepathExist))
                                {
                                    Directory.CreateDirectory(FilepathExist);
                                }
                                if (System.IO.File.Exists(path))
                                {
                                    System.IO.File.Delete(path);
                                }
                                System.IO.File.Copy(filePath1, path);
                                filepathtosave = "../Upload/Upload2024/" + formName + "/" + sldist + "/Photo/" + result + "P" + ".jpg";
                                ViewBag.ImageURL = filepathtosave;

                                string PhotoName = formName + "/" + sldist + "/Photo" + "/" + result + "P" + ".jpg";
                                string type = "P";
                                string IsNew = "NO";
                                string UpdatePic = new AbstractLayer.RegistrationDB().Updated_PhotoSign_ByStudentId(std_id, PhotoName, type, IsNew);


                            }
                        }
                        if (filePathSign != null)
                        {
                            var filePathS = filePathSign;
                            if ((ds.Tables[0].Rows[i]["std_sign"].ToString() == null || ds.Tables[0].Rows[i]["std_sign"].ToString() == "") && (filePathSign != null && filePathSign != ""))
                            {
                                var path = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + sldist + "/Sign"), result + "S" + ".jpg");
                                string FilepathExist = Path.Combine(Server.MapPath("~/Upload/Upload2024/" + formName + "/" + sldist + "/Sign"));
                                if (!Directory.Exists(FilepathExist))
                                {
                                    Directory.CreateDirectory(FilepathExist);
                                }
                                if (System.IO.File.Exists(path))
                                {
                                    System.IO.File.Delete(path);
                                }
                                System.IO.File.Copy(filePathS, path);
                                filepathtosave = "../Upload/Upload2024/" + formName + "/" + sldist + "/Sign/" + result + "S" + ".jpg";
                                ViewBag.ImageURL = filepathtosave;

                                string PhotoName = formName + "/" + sldist + "/Sign" + "/" + result + "S" + ".jpg";
                                string type = "S";
                                string IsNew = "NO";
                                string UpdatePic = new AbstractLayer.RegistrationDB().Updated_PhotoSign_ByStudentId(std_id, PhotoName, type, IsNew);


                            }
                        }
                        // //-----------------------------------End  Session "2023-2024"------------
                    }
                }

            }



            return Json(new { result = result1 }, JsonRequestBehavior.AllowGet);

        }

        #endregion UpdatePreviousYearPhotoSign student


        #region StudentPreviousYearMarks
        [SessionCheckFilter]
        public ActionResult StudentPreviousYearMarks(RegistrationSearchStudentPreviousYearMarksModelList registrationSearchModel)
        {
            //LoginSession loginSession = (LoginSession)Session["LoginSession"];
            string schl = Session["schl"].ToString();
            registrationSearchModel.MonthList = objCommon.GetMonth();
            //registrationSearchModel.MyBoard = objCommon.GetMatricBoard().Where(s => Convert.ToString(s.Value).ToUpper() == "P.S.E.B BOARD".ToUpper()).ToList();

            registrationSearchModel.MyMatricBoard = objCommon.GetMatricBoard();
            registrationSearchModel.MatricYearList = objCommon.GetSessionYear();
            List<SelectListItem> yearlist = registrationSearchModel.MatricYearList.ToList();
            registrationSearchModel.YearList = yearlist.Where(s => Convert.ToInt32(s.Value) >= 2001).ToList();
            registrationSearchModel.ResultList = objCommon.GetAllResult();

            DataSet dsOut = new DataSet();
            registrationSearchModel.RegistrationSearchModel = AbstractLayer.RegistrationDB.GetStudentPreviousYearSearch("PREV", schl, out dsOut);
            registrationSearchModel.StoreAllData = dsOut;
            return View(registrationSearchModel);
        }

        [SessionCheckFilter]
        [HttpPost]
        public async Task<JsonResult> StudentPreviousYearMarks(StudentPreviousYearMarks modelData)
        {

            string dee = "0";
            string schl = Session["schl"].ToString();
            if (modelData != null && modelData.PYID == 0)
            {
                if ((modelData.MAT_OBTMARKS > modelData.MAT_MAXMARKS) || (modelData.ELV_OBTMARKS > modelData.ELV_MAXMARKS))
                {
                    TempData["resultIns"] = "MARKS";
                    dee = "MARKS";
                    return Json(new { outstatus = dee }, JsonRequestBehavior.AllowGet);
                }

                modelData.MAT_PERCENTAGE = 0;
                modelData.ELV_PERCENTAGE = 0;
                if (modelData.MAT_OBTMARKS <= modelData.MAT_MAXMARKS && modelData.MAT_MAXMARKS > 0)
                {
                    double percent = (double)(modelData.MAT_OBTMARKS * 100) / modelData.MAT_MAXMARKS;
                    modelData.MAT_PERCENTAGE = Convert.ToInt32(percent);
                }
                if (modelData.ELV_OBTMARKS <= modelData.ELV_MAXMARKS && modelData.ELV_MAXMARKS > 0)
                {
                    double percent = (double)(modelData.ELV_OBTMARKS * 100) / modelData.ELV_MAXMARKS;
                    modelData.ELV_PERCENTAGE = Convert.ToInt32(percent);
                }

                bool IsStudentExist = _context.StudentPreviousYearMarks.Where(s => s.Std_Id == modelData.Std_Id).Count() > 0;
                if (IsStudentExist)
                {
                    StudentPreviousYearMarks studentPreviousYearMarks = _context.StudentPreviousYearMarks.SingleOrDefault(s => s.Std_Id == modelData.Std_Id);
                    studentPreviousYearMarks.MAT_OBTMARKS = modelData.MAT_OBTMARKS;
                    studentPreviousYearMarks.MAT_MAXMARKS = modelData.MAT_MAXMARKS;
                    studentPreviousYearMarks.MAT_PERCENTAGE = modelData.MAT_PERCENTAGE;
                    studentPreviousYearMarks.MAT_RESULT = modelData.MAT_RESULT;
                    studentPreviousYearMarks.ELV_OBTMARKS = modelData.ELV_OBTMARKS;
                    studentPreviousYearMarks.ELV_MAXMARKS = modelData.ELV_MAXMARKS;
                    studentPreviousYearMarks.ELV_PERCENTAGE = modelData.ELV_PERCENTAGE;
                    studentPreviousYearMarks.ELV_RESULT = modelData.ELV_RESULT;
                    //
                    studentPreviousYearMarks.MAT_MONTH = modelData.MAT_MONTH;
                    studentPreviousYearMarks.MAT_YEAR = modelData.MAT_YEAR;
                    studentPreviousYearMarks.MAT_BOARD = modelData.MAT_BOARD;
                    studentPreviousYearMarks.MAT_ROLL = modelData.MAT_ROLL;

                    studentPreviousYearMarks.ELV_MONTH = modelData.ELV_MONTH;
                    studentPreviousYearMarks.ELV_YEAR = modelData.ELV_YEAR;
                    studentPreviousYearMarks.ELV_BOARD = modelData.ELV_BOARD;
                    studentPreviousYearMarks.ELV_ROLL = modelData.ELV_ROLL;

                    studentPreviousYearMarks.ModifyOn = DateTime.Now;
                    _context.Entry(studentPreviousYearMarks).State = EntityState.Modified;
                }
                else
                {

                    StudentPreviousYearMarks studentPreviousYearMarks = new StudentPreviousYearMarks()
                    {
                        PYID = 0,
                        SCHL = schl,
                        Std_Id = modelData.Std_Id,
                        MAT_OBTMARKS = modelData.MAT_OBTMARKS,
                        MAT_MAXMARKS = modelData.MAT_MAXMARKS,
                        MAT_PERCENTAGE = modelData.MAT_PERCENTAGE,
                        MAT_RESULT = modelData.MAT_RESULT,
                        ELV_OBTMARKS = modelData.ELV_OBTMARKS,
                        ELV_MAXMARKS = modelData.ELV_MAXMARKS,
                        ELV_PERCENTAGE = modelData.ELV_PERCENTAGE,
                        ELV_RESULT = modelData.ELV_RESULT,
                        SubmitOn = DateTime.Now,
                        ModifyOn = DateTime.Now,
                        IsActive = true,
                        IsFinalLock = false,
                        //
                        MAT_MONTH = modelData.MAT_MONTH,
                        MAT_YEAR = modelData.MAT_YEAR,
                        MAT_BOARD = modelData.MAT_BOARD,
                        MAT_ROLL = modelData.MAT_ROLL,

                        ELV_MONTH = modelData.ELV_MONTH,
                        ELV_YEAR = modelData.ELV_YEAR,
                        ELV_BOARD = modelData.ELV_BOARD,
                        ELV_ROLL = modelData.ELV_ROLL
                    };
                    _context.StudentPreviousYearMarks.Add(studentPreviousYearMarks);

                }
                int insertedRecords = await _context.SaveChangesAsync();
                if (IsStudentExist == false && insertedRecords > 0)
                {
                    TempData["resultIns"] = "S";
                    dee = "1";
                }
                else if (IsStudentExist == true && insertedRecords > 0)
                {
                    TempData["resultIns"] = "U";
                    dee = "2";
                }
                else
                {
                    TempData["resultIns"] = "F";
                    dee = "0";
                }
            }

            return Json(new { outstatus = dee }, JsonRequestBehavior.AllowGet);
        }

        [Route("ActionStudentPreviousYearMarks/{id}/{act}")]
        public async Task<ActionResult> ActionStudentPreviousYearMarks(string id, string act)
        {
            try
            {
                if (!string.IsNullOrEmpty(id) && !string.IsNullOrEmpty(act))
                {
                    if (act.ToUpper() == "SCHLFNL")
                    {

                        var data = _context.StudentPreviousYearMarks.Where(s => s.SCHL == id.ToString()).ToList();
                        ViewBag.IsFinalLockSubmitted = "0";
                        //
                        ViewBag.IsFinalLockTotal = data.Count();
                        ViewBag.IsFinalLockTotalMarks = data.Where(s => s.PYID > 0).Count();
                        ViewBag.IsFinalLockYES = data.Where(s => s.IsFinalLock == true && s.PYID > 0).Count();
                        ViewBag.IsFinalLockNO = data.Where(s => s.IsFinalLock == false && s.PYID > 0).Count();
                        if ((ViewBag.IsFinalLockTotal == ViewBag.IsFinalLockTotalMarks) && (ViewBag.IsFinalLockNO == ViewBag.IsFinalLockTotalMarks) && ViewBag.IsFinalLockYES == 0)
                        {
                            data.ForEach(a =>
                            {
                                a.FinalSubmitOn = DateTime.Now;
                                a.IsFinalLock = true;
                            });
                            int insertedRecords = await _context.SaveChangesAsync();
                            TempData["resultIns"] = "FNL";
                        }
                        else
                        {
                            TempData["resultIns"] = "PEN";
                        }


                        // update
                        //foreach (StudentPreviousYearMarks data in dataList)
                        //{
                        //    data.FinalSubmitOn = DateTime.Now;
                        //    data.IsFinalLock = true;
                        //}

                        //if (data != null)
                        //{
                        //    _context.Entry(data).State = EntityState.Modified;
                        //    int insertedRecords = await _context.SaveChangesAsync();
                        //    TempData["resultIns"] = "FNL";
                        //}
                    }
                    else if (act.ToUpper() == "CANDFNL")
                    {
                        StudentPreviousYearMarks data = _context.StudentPreviousYearMarks.SingleOrDefault(s => s.Std_Id == Convert.ToInt32(id));
                        data.FinalSubmitOn = DateTime.Now;
                        data.IsFinalLock = true;
                        if (data != null)
                        {
                            _context.Entry(data).State = EntityState.Modified;
                            int insertedRecords = await _context.SaveChangesAsync();
                            TempData["resultIns"] = "FNL";
                        }
                    }

                }
            }
            catch (Exception ex1)
            {

            }
            return RedirectToAction("StudentPreviousYearMarks");
        }


        [SessionCheckFilter]
        public ActionResult StudentPreviousYearMarksReport(RegistrationSearchStudentPreviousYearMarksModelList registrationSearchModel)
        {
            string schl = Session["schl"].ToString();
            DataSet dsOut = new DataSet();
            registrationSearchModel.RegistrationSearchModel = AbstractLayer.RegistrationDB.GetStudentPreviousYearSearch("PREV", schl, out dsOut);
            registrationSearchModel.StoreAllData = dsOut;
            ViewBag.IsFinalLockSubmitted = "0";
            //
            ViewBag.IsFinalLockTotal = registrationSearchModel.RegistrationSearchModel.Count();
            ViewBag.IsFinalLockTotalMarks = registrationSearchModel.RegistrationSearchModel.Where(s => s.PYID > 0).Count();
            ViewBag.IsFinalLockYES = registrationSearchModel.RegistrationSearchModel.Where(s => s.IsFinalLock == true && s.PYID > 0).Count();
            ViewBag.IsFinalLockNO = registrationSearchModel.RegistrationSearchModel.Where(s => s.IsFinalLock == false && s.PYID > 0).Count();
            //
            if ((ViewBag.IsFinalLockTotal == ViewBag.IsFinalLockTotalMarks) && ViewBag.IsFinalLockNO == 0)
            {
                ViewBag.IsFinalLockSubmitted = "1";
            }
            return View(registrationSearchModel);
        }

        #endregion



        #region SeniorStudentMatricResultMarks
        [SessionCheckFilter]
        public ActionResult ViewAllSeniorStudentMatricResultMarks(SeniorStudentMatricResultMarksViewsModelList registrationSearchModel)
        {
            string schl = Session["schl"].ToString();

            DataSet dsOut = new DataSet();
            registrationSearchModel.RegistrationSearchModel = AbstractLayer.RegistrationDB.GetSeniorStudentMatricResultMarksSearch("SeniorStudentMatricResultMarks", schl, out dsOut);
            registrationSearchModel.StoreAllData = dsOut;
            return View(registrationSearchModel);
        }


        [SessionCheckFilter]
        public ActionResult SeniorStudentMatricResultMarks(string id, SeniorStudentMatricResultMarksViews obj)
        {

            string schl = Session["schl"].ToString();
            ViewBag.MatricSubjectList = AbstractLayer.DBClass.GetAllMatricSubjectsForMarks().ToList();
            //
            ViewBag.MonthList = objCommon.GetMonth();
            ViewBag.MyMatricBoard = objCommon.GetMatricBoard();
            List<SelectListItem> itemYear = objCommon.GetSessionYear();
            ViewBag.MatricYearList = itemYear;
            ViewBag.YearList = itemYear.Where(s => Convert.ToInt32(s.Value) >= 2001).ToList();
            ViewBag.ResultList = objCommon.GetAllResult();
            //
            int Std_id = Convert.ToInt32(id);
            bool IsStudentExist = _context.SeniorStudentMatricResultMarks.AsNoTracking().Where(s => s.Std_Id == Std_id).Count() > 0;
            if (IsStudentExist)
            {
                SeniorStudentMatricResultMarksViews SeniorStudentMatricResultMarks = _context.SeniorStudentMatricResultMarksViews.AsNoTracking().SingleOrDefault(s => s.Std_id == Std_id);
                if (SeniorStudentMatricResultMarks != null)
                {
                    obj = (SeniorStudentMatricResultMarksViews)SeniorStudentMatricResultMarks;
                }
            }
            return View(obj);
        }

        [SessionCheckFilter]
        [HttpPost]
        public async Task<JsonResult> SeniorStudentMatricResultMarks(string id, SeniorStudentMatricResultMarks modelData, HttpPostedFileBase FilePath)
        {
            string dee = "0";
            string schl = Session["schl"].ToString();
            if (modelData != null && modelData.MRID > 0)
            {
                if (modelData.ChangeStatus == "U")
                {
                    modelData.ChangeStatus = "U";
                }
                else
                {
                    modelData.FilePath = "";
                    modelData.ChangeStatus = "S";
                }


                if (Request.Files.Count > 0)
                {
                    try
                    {
                        HttpFileCollectionBase files = Request.Files;
                        for (int i = 0; i < files.Count; i++)
                        {

                            HttpPostedFileBase file = files[i];
                            string fileKey = i == 0 ? "FilePath" : "";
                            string myUniqueFileName = AbstractLayer.StaticDB.GenerateFileName(modelData.Std_Id.ToString());

                            if (file != null && fileKey == "FilePath")
                            {
                                string fileExt = Path.GetExtension(file.FileName);
                                //var path = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + "SeniorStudentMatricResultMarks"), myUniqueFileName + fileExt);
                                //string FilepathExist = Path.Combine(Server.MapPath("~/Upload/" + "Upload2024/" + "SeniorStudentMatricResultMarks"));
                                //if (!Directory.Exists(FilepathExist))
                                //{
                                //    Directory.CreateDirectory(FilepathExist);
                                //}
                                //file.SaveAs(path);
                                string Orgfile = myUniqueFileName + fileExt;
                                using (var client = new AmazonS3Client(ConfigurationManager.AppSettings["AWSKey"], ConfigurationManager.AppSettings["AWSValue"], RegionEndpoint.APSouth1))
                                {
                                    using (var newMemoryStream = new MemoryStream())
                                    {
                                        var uploadRequest = new TransferUtilityUploadRequest
                                        {
                                            InputStream = file.InputStream,
                                            Key = string.Format("allfiles/Upload2024/SeniorStudentMatricResultMarks/{0}", Orgfile),
                                            BucketName = BUCKET_NAME,
                                            CannedACL = S3CannedACL.PublicRead
                                        };

                                        var fileTransferUtility = new TransferUtility(client);
                                        fileTransferUtility.Upload(uploadRequest);
                                    }
                                }
                                modelData.FilePath = "SeniorStudentMatricResultMarks" + "/" + myUniqueFileName + fileExt;
                                modelData.ChangeStatus = "U";
                            }
                        }
                        // Returns message that successfully uploaded  
                        modelData.ChangeStatus = "U";
                    }
                    catch (Exception ex)
                    {

                    }
                }


                bool IsStudentExist = _context.SeniorStudentMatricResultMarks.AsNoTracking().Where(s => s.Std_Id == modelData.Std_Id).Count() > 0;
                if (IsStudentExist)
                {
                    SeniorStudentMatricResultMarks SeniorStudentMatricResultMarks = _context.SeniorStudentMatricResultMarks.AsNoTracking().SingleOrDefault(s => s.Std_Id == modelData.Std_Id);
                    //
                    SeniorStudentMatricResultMarks.MAT_MONTH = modelData.MAT_MONTH;
                    SeniorStudentMatricResultMarks.MAT_YEAR = modelData.MAT_YEAR;
                    SeniorStudentMatricResultMarks.MAT_BOARD = modelData.MAT_BOARD;
                    SeniorStudentMatricResultMarks.MAT_ROLL = modelData.MAT_ROLL;
                    //                   
                    SeniorStudentMatricResultMarks.SUB1 = modelData.SUB1;
                    SeniorStudentMatricResultMarks.TOT1 = modelData.TOT1;
                    SeniorStudentMatricResultMarks.MAX1 = modelData.MAX1;
                    SeniorStudentMatricResultMarks.MIN1 = modelData.MIN1;
                    SeniorStudentMatricResultMarks.SUB2 = modelData.SUB2;
                    SeniorStudentMatricResultMarks.TOT2 = modelData.TOT2;
                    SeniorStudentMatricResultMarks.MAX2 = modelData.MAX2;
                    SeniorStudentMatricResultMarks.MIN2 = modelData.MIN2;
                    SeniorStudentMatricResultMarks.SUB3 = modelData.SUB3;
                    SeniorStudentMatricResultMarks.TOT3 = modelData.TOT3;
                    SeniorStudentMatricResultMarks.MAX3 = modelData.MAX3;
                    SeniorStudentMatricResultMarks.MIN3 = modelData.MIN3;
                    SeniorStudentMatricResultMarks.SUB4 = modelData.SUB4;
                    SeniorStudentMatricResultMarks.TOT4 = modelData.TOT4;
                    SeniorStudentMatricResultMarks.MAX4 = modelData.MAX4;
                    SeniorStudentMatricResultMarks.MIN4 = modelData.MIN4;
                    SeniorStudentMatricResultMarks.SUB5 = modelData.SUB5;
                    SeniorStudentMatricResultMarks.TOT5 = modelData.TOT5;
                    SeniorStudentMatricResultMarks.MAX5 = modelData.MAX5;
                    SeniorStudentMatricResultMarks.MIN5 = modelData.MIN5;
                    SeniorStudentMatricResultMarks.SUB6 = modelData.SUB6;
                    SeniorStudentMatricResultMarks.TOT6 = modelData.TOT6;
                    SeniorStudentMatricResultMarks.MAX6 = modelData.MAX6;
                    SeniorStudentMatricResultMarks.MIN6 = modelData.MIN6;
                    SeniorStudentMatricResultMarks.SUB7 = modelData.SUB7;
                    SeniorStudentMatricResultMarks.TOT7 = modelData.TOT7 == null ? "" : modelData.TOT7;
                    SeniorStudentMatricResultMarks.MAX7 = modelData.MAX7 == null ? "" : modelData.MAX7;
                    SeniorStudentMatricResultMarks.MIN7 = modelData.MIN7 == null ? "" : modelData.MIN7;
                    //
                    SeniorStudentMatricResultMarks.SUBNM1 = modelData.SUBNM1;
                    SeniorStudentMatricResultMarks.SUBNM2 = modelData.SUBNM2;
                    SeniorStudentMatricResultMarks.SUBNM3 = modelData.SUBNM3;
                    SeniorStudentMatricResultMarks.SUBNM4 = modelData.SUBNM4;
                    SeniorStudentMatricResultMarks.SUBNM5 = modelData.SUBNM5;
                    SeniorStudentMatricResultMarks.SUBNM6 = modelData.SUBNM6;
                    SeniorStudentMatricResultMarks.SUBNM7 = modelData.SUBNM7;
                    SeniorStudentMatricResultMarks.SUBNM8 = modelData.SUBNM8;
                    //
                    SeniorStudentMatricResultMarks.MR_TOTAL = modelData.MR_TOTAL;
                    SeniorStudentMatricResultMarks.MR_TOTMAX = modelData.MR_TOTMAX;
                    SeniorStudentMatricResultMarks.MR_RESULT = modelData.MR_RESULT;
                    SeniorStudentMatricResultMarks.ChangeStatus = modelData.ChangeStatus;
                    SeniorStudentMatricResultMarks.FilePath = modelData.FilePath;
                    SeniorStudentMatricResultMarks.IsActive = true;
                    SeniorStudentMatricResultMarks.ModifyOn = DateTime.Now;
                    SeniorStudentMatricResultMarks.IsFinalLock = false;
                    SeniorStudentMatricResultMarks.FinalSubmitOn = null;
                    _context.Entry(SeniorStudentMatricResultMarks).State = EntityState.Modified;
                }
                int insertedRecords = await _context.SaveChangesAsync();
                if (IsStudentExist == true && insertedRecords > 0)
                {
                    TempData["resultIns"] = "U";
                    dee = "2";
                }
                else
                {
                    TempData["resultIns"] = "F";
                    dee = "0";
                }
            }

            return Json(new { outstatus = dee }, JsonRequestBehavior.AllowGet);
        }

        [Route("ActionSeniorStudentMatricResultMarks/{id}/{act}")]
        public async Task<ActionResult> ActionSeniorStudentMatricResultMarks(string id, string act)
        {
            //string stdid = id;
            try
            {

                if (!string.IsNullOrEmpty(id) && !string.IsNullOrEmpty(act))
                {
                    if (act.ToUpper() == "SCHLFNL")
                    {


                        var data = _context.SeniorStudentMatricResultMarks.Where(s => s.SCHL == id.ToString()).ToList();

                        var dataInView = _context.SeniorStudentMatricResultMarksViews.Where(s => s.schl == id.ToString()).ToList();


                        ViewBag.IsFinalLockSubmitted = "0";
                        //
                        ViewBag.IsFinalLockTotal = dataInView.Count();
                        ViewBag.IsFinalLock_Pending = dataInView.Where(s => string.IsNullOrEmpty(s.ChangeStatus)).Count();
                        //total filled
                        ViewBag.IsFinalLock_InProcess = dataInView.Where(s => s.IsFinalLock == false && !string.IsNullOrEmpty(s.ChangeStatus)).Count();
                        //total pending
                        ViewBag.IsFinalLock_FinalSubmit = dataInView.Where(s => s.IsFinalLock == true).Count();

                        if ((ViewBag.IsFinalLockTotal == ViewBag.IsFinalLock_InProcess) && (ViewBag.IsFinalLock_Pending == ViewBag.IsFinalLock_FinalSubmit) && ViewBag.IsFinalLock_Pending == 0)
                        {
                            data.ForEach(a =>
                            {
                                a.FinalSubmitOn = DateTime.Now;
                                a.IsFinalLock = true;
                            });
                            int insertedRecords = await _context.SaveChangesAsync();
                            TempData["resultIns"] = "FNL";
                        }
                        else
                        {
                            TempData["resultIns"] = "PEN";
                        }
                    }
                    else if (act.ToUpper() == "SCHLFNLPEND")
                    {

                        //4
                        //var data = _context.SeniorStudentMatricResultMarks.Where(s => s.SCHL == id.ToString() && !s.FinalSubmitOn.HasValue).ToList();
                        ////3
                        //var dataInView = _context.SeniorStudentMatricResultMarksViews.Where(s => s.schl == id.ToString() && !s.FinalSubmitOn.HasValue).ToList();

                        var data = _context.SeniorStudentMatricResultMarks.Where(s => s.SCHL == id.ToString() && s.IsFinalLock == false).ToList();
                        //3
                        var dataInView = _context.SeniorStudentMatricResultMarksViews.Where(s => s.schl == id.ToString() && s.IsFinalLock == false).ToList();

                        //total filled
                        ViewBag.IsFinalLockSubmitted = "0";
                        //
                        ViewBag.IsFinalLockTotal = dataInView.Count();
                        ViewBag.IsFinalLock_Pending = dataInView.Where(s => string.IsNullOrEmpty(s.ChangeStatus)).Count();
                        ViewBag.IsFinalLock_InProcess = dataInView.Where(s => s.IsFinalLock == false && !string.IsNullOrEmpty(s.ChangeStatus)).Count();


                        if (ViewBag.IsFinalLockTotal > 0 && ViewBag.IsFinalLock_Pending == 0 && (ViewBag.IsFinalLockTotal == ViewBag.IsFinalLock_InProcess))
                        {
                            data.ForEach(a =>
                            {
                                a.FinalSubmitOn = DateTime.Now;
                                a.IsFinalLock = true;
                            });
                            int insertedRecords = await _context.SaveChangesAsync();
                            TempData["resultIns"] = "FNL";
                        }
                        else
                        {
                            TempData["resultIns"] = "PEN";
                        }
                    }
                    else if (act.ToUpper() == "CANDFNL")
                    {
                        int sid = Convert.ToInt32(id);
                        SeniorStudentMatricResultMarks data = _context.SeniorStudentMatricResultMarks.AsNoTracking().SingleOrDefault(s => s.Std_Id == sid);
                        data.FinalSubmitOn = DateTime.Now;
                        data.IsFinalLock = true;
                        if (data != null)
                        {
                            _context.Entry(data).State = EntityState.Modified;
                            int insertedRecords = await _context.SaveChangesAsync();
                            TempData["resultIns"] = "FNL";
                        }
                    }

                }
            }
            catch (Exception ex1)
            {

            }
            return RedirectToAction("ViewAllSeniorStudentMatricResultMarks");
        }



        public async Task<JsonResult> ActionSeniorStudentMatricResultMarks(string id, string act, string remarks)
        {

            string outstatus = "0";
            try
            {

                if (!string.IsNullOrEmpty(id) && !string.IsNullOrEmpty(act) && !string.IsNullOrEmpty(remarks))
                {
                    if (act.ToUpper() == "CANCEL")
                    {
                        int sid = Convert.ToInt32(id);
                        SeniorStudentMatricResultMarks data = _context.SeniorStudentMatricResultMarks.AsNoTracking().SingleOrDefault(s => s.Std_Id == sid);
                        data.ChangeStatus = "C";
                        data.CancelOn = DateTime.Now;
                        data.IsFinalLock = false;
                        if (data != null)
                        {
                            outstatus = "1";
                            _context.Entry(data).State = EntityState.Modified;
                            int insertedRecords = await _context.SaveChangesAsync();
                            TempData["resultIns"] = "CANCEL";
                        }
                    }

                }
            }
            catch (Exception ex1)
            {
                outstatus = "-1";
            }
            return Json(new { result = outstatus }, JsonRequestBehavior.AllowGet);
        }


        [SessionCheckFilter]
        public ActionResult SeniorStudentMatricResultMarksReport(SeniorStudentMatricResultMarksViewsModelList registrationSearchModel)
        {
            string schl = Session["schl"].ToString();
            DataSet dsOut = new DataSet();
            registrationSearchModel.RegistrationSearchModel = AbstractLayer.RegistrationDB.GetSeniorStudentMatricResultMarksSearch("SeniorStudentMatricResultMarks", schl, out dsOut);
            registrationSearchModel.StoreAllData = dsOut;
            ViewBag.IsFinalLockSubmitted = "0";
            //
            ViewBag.IsFinalLockTotal = registrationSearchModel.RegistrationSearchModel.Count();
            ViewBag.IsFinalLockTotalMarks = registrationSearchModel.RegistrationSearchModel.Where(s => s.MRID > 0).Count();
            ViewBag.IsFinalLockYES = registrationSearchModel.RegistrationSearchModel.Where(s => s.IsFinalLock == true && s.MRID > 0).Count();
            ViewBag.IsFinalLockNO = registrationSearchModel.RegistrationSearchModel.Where(s => s.IsFinalLock == false && s.MRID > 0).Count();
            //
            if ((ViewBag.IsFinalLockTotal == ViewBag.IsFinalLockTotalMarks) && ViewBag.IsFinalLockNO == 0)
            {
                ViewBag.IsFinalLockSubmitted = "1";
            }
            return View(registrationSearchModel);
        }

        #endregion


        [SessionCheckFilter]
        public ActionResult OnDemandCertificate(Printlist obj, int? page)
        {
            LoginSession loginSession = (LoginSession)Session["LoginSession"];

            try
            {
                string SCHL = loginSession.SCHL;
                ViewBag.Senior = loginSession.Senior.ToString();
                ViewBag.Matric = loginSession.Matric.ToString();
                ViewBag.OSenior = loginSession.OSenior.ToString();
                ViewBag.OMatric = loginSession.OMATRIC.ToString();

                #region Circular

                int pageIndex = 1;
                pageIndex = page.HasValue ? Convert.ToInt32(page) : 1;
                ViewBag.pagesize = pageIndex;

                string Search = string.Empty;
                Search = "Id like '%' and CircularTypes like '%7%' and Convert(Datetime,Convert(date,ExpiryDateDD))>=Convert(Datetime,Convert(date,getdate()))";
                DataSet dsCircular = new AbstractLayer.AdminDB().CircularMaster(Search, pageIndex);//GetAllFeeMaster2016SP
                if (dsCircular == null || dsCircular.Tables[0].Rows.Count == 0)
                {
                    ViewBag.TotalCircular = 0;
                }
                else
                {
                    //var type7 = dsCircular.Tables[0].Columns[7].DataType.Name.ToString();
                    var type8 = dsCircular.Tables[0].Columns[9].DataType.Name.ToString();
                    ViewBag.TotalCircular = dsCircular.Tables[0].Rows.Count;

                    //MarQue
                    IEnumerable<DataRow> query = from order in dsCircular.Tables[0].AsEnumerable()
                                                 where order.Field<byte>("IsMarque") == 1 && order.Field<Boolean>("IsActive") == true
                                                 select order;
                    // Create a table of Marque from the query.
                    if (query.Any())
                    {
                        obj.dsMarque = query.CopyToDataTable<DataRow>();
                        ViewBag.MarqueCount = obj.dsMarque.Rows.Count;
                    }
                    else { ViewBag.MarqueCount = 0; }

                    // circular
                    IEnumerable<DataRow> query1 = from order in dsCircular.Tables[0].AsEnumerable()
                                                  where order.Field<byte>("IsMarque") == 0 && order.Field<Boolean>("IsActive") == true
                                                  select order;
                    // Create a table of Marque from the query.
                    if (query1.Any())
                    {
                        obj.dsCircular = query1.CopyToDataTable<DataRow>();
                        ViewBag.CircularCount = obj.dsCircular.Rows.Count;

                        //
                        int count = Convert.ToInt32(dsCircular.Tables[2].Rows[0]["CircularCount"]);
                        ViewBag.TotalCircularCount = count;
                        int tp = Convert.ToInt32(count);
                        int pn = tp / 15;
                        int cal = 15 * pn;
                        int res = Convert.ToInt32(ViewBag.TotalCircularCount) - cal;
                        if (res >= 1)
                        { ViewBag.pn = pn + 1; }
                        else
                        { ViewBag.pn = pn; }


                    }
                    else
                    {
                        ViewBag.CircularCount = 0;
                        ViewBag.TotalCircularCount = 0;
                    }
                }
                #endregion            
            }
            catch (Exception ex)
            {
                oErrorLog.WriteErrorLog(ex.ToString(), Path.GetFileName(Request.Path));
                //return RedirectToAction("Logout", "Login");
                //return View();
            }
            return View(obj);
        }



        [SessionCheckFilter]
        public ActionResult ReExamStudents(Printlist obj, int? page)
        {
            LoginSession loginSession = (LoginSession)Session["LoginSession"];

            try
            {
                string SCHL = loginSession.SCHL;
                ViewBag.Senior = loginSession.Senior.ToString();
                ViewBag.Matric = loginSession.Matric.ToString();
                ViewBag.OSenior = loginSession.OSenior.ToString();
                ViewBag.OMatric = loginSession.OMATRIC.ToString();

                #region Circular

                int pageIndex = 1;
                pageIndex = page.HasValue ? Convert.ToInt32(page) : 1;
                ViewBag.pagesize = pageIndex;

                string Search = string.Empty;
                Search = "Id like '%' and CircularTypes like '%7%' and Convert(Datetime,Convert(date,ExpiryDateDD))>=Convert(Datetime,Convert(date,getdate()))";
                DataSet dsCircular = new AbstractLayer.AdminDB().CircularMaster(Search, pageIndex);//GetAllFeeMaster2016SP
                if (dsCircular == null || dsCircular.Tables[0].Rows.Count == 0)
                {
                    ViewBag.TotalCircular = 0;
                }
                else
                {
                    //var type7 = dsCircular.Tables[0].Columns[7].DataType.Name.ToString();
                    var type8 = dsCircular.Tables[0].Columns[9].DataType.Name.ToString();
                    ViewBag.TotalCircular = dsCircular.Tables[0].Rows.Count;

                    //MarQue
                    IEnumerable<DataRow> query = from order in dsCircular.Tables[0].AsEnumerable()
                                                 where order.Field<byte>("IsMarque") == 1 && order.Field<Boolean>("IsActive") == true
                                                 select order;
                    // Create a table of Marque from the query.
                    if (query.Any())
                    {
                        obj.dsMarque = query.CopyToDataTable<DataRow>();
                        ViewBag.MarqueCount = obj.dsMarque.Rows.Count;
                    }
                    else { ViewBag.MarqueCount = 0; }

                    // circular
                    IEnumerable<DataRow> query1 = from order in dsCircular.Tables[0].AsEnumerable()
                                                  where order.Field<byte>("IsMarque") == 0 && order.Field<Boolean>("IsActive") == true
                                                  select order;
                    // Create a table of Marque from the query.
                    if (query1.Any())
                    {
                        obj.dsCircular = query1.CopyToDataTable<DataRow>();
                        ViewBag.CircularCount = obj.dsCircular.Rows.Count;

                        //
                        int count = Convert.ToInt32(dsCircular.Tables[2].Rows[0]["CircularCount"]);
                        ViewBag.TotalCircularCount = count;
                        int tp = Convert.ToInt32(count);
                        int pn = tp / 15;
                        int cal = 15 * pn;
                        int res = Convert.ToInt32(ViewBag.TotalCircularCount) - cal;
                        if (res >= 1)
                        { ViewBag.pn = pn + 1; }
                        else
                        { ViewBag.pn = pn; }


                    }
                    else
                    {
                        ViewBag.CircularCount = 0;
                        ViewBag.TotalCircularCount = 0;
                    }
                }
                #endregion            
            }
            catch (Exception ex)
            {
                oErrorLog.WriteErrorLog(ex.ToString(), Path.GetFileName(Request.Path));
                //return RedirectToAction("Logout", "Login");
                //return View();
            }
            return View(obj);
        }



        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                _context.Dispose();
            }
            base.Dispose(disposing);
        }

        public JsonResult BindRegistrationSessionYear_adm(string SelCat, string SelForm, string SelBoard) // Calling on http post (on Submit)
        {

            List<SelectListItem> yearlist = new List<SelectListItem>();
            if (SelForm == "N2")
            {

                if (SelCat.ToUpper().Contains("PASSED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("PASSED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
            }
            else if (SelForm == "E2")
            {
                if (SelCat.ToUpper().Contains("PASSED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("PASSED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= DateTime.Today.Year - 1).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= DateTime.Today.Year - 1).ToList();
                }
                else if (SelCat.ToUpper().Contains("REAPPEAR") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("REAPPEAR") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 2023 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
            }


            else if (SelForm == "M2")
            {
                if (SelCat.ToUpper().Contains("PASSED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("PASSED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("REAPPEAR") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 2022 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("REAPPEAR") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 2022 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
            }

            else if (SelForm == "T2")
            {
                if (SelCat.ToUpper().Contains("PASSED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("PASSED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2020).ToList();
                }
                else if (SelCat.ToUpper().Contains("FAILED") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 1969 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("REAPPEAR") && SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 2022 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
                else if (SelCat.ToUpper().Contains("REAPPEAR") && !SelBoard.Contains("P.S.E.B"))
                {
                    yearlist = new AbstractLayer.DBClass().GetSessionYear().Where(s => Convert.ToInt32(s.Value) >= 2022 && Convert.ToInt32(s.Value) <= 2023).ToList();
                }
            }


            ViewBag.MyYear = yearlist;
            return Json(yearlist);
        }

    }
}






